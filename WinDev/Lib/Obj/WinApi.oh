/* Ofront+ 1.0 -sxtwC -48 */

#ifndef WinApi__oh
#define WinApi__oh

#include "SYSTEM.oh"

typedef
  struct WinApi_ABC {
    INTEGER abcA, abcB, abcC;
  } WinApi_ABC;

typedef
  struct WinApi_ABCFLOAT {
    SHORTREAL abcfA, abcfB, abcfC;
  } WinApi_ABCFLOAT;

typedef
  INTEGER (__STDCALL *WinApi_ABORTPROC)(INTEGER, INTEGER);

typedef
  struct WinApi_ACCEL {
    CHAR fVirt;
    SHORTINT key, cmd;
  } WinApi_ACCEL;

typedef
  struct WinApi_ACCESSTIMEOUT {
    INTEGER cbSize;
    SET dwFlags;
    INTEGER iTimeOutMSec;
  } WinApi_ACCESSTIMEOUT;

typedef
  struct WinApi_ACE_HEADER {
    CHAR AceType, AceFlags;
    SHORTINT AceSize;
  } WinApi_ACE_HEADER;

typedef
  struct WinApi_ACCESS_ALLOWED_ACE {
    WinApi_ACE_HEADER Header;
    SET Mask;
    INTEGER SidStart;
  } WinApi_ACCESS_ALLOWED_ACE;

typedef
  struct WinApi_ACCESS_DENIED_ACE {
    WinApi_ACE_HEADER Header;
    SET Mask;
    INTEGER SidStart;
  } WinApi_ACCESS_DENIED_ACE;

typedef
  struct WinApi_ACL {
    CHAR AclRevision, Sbz1;
    SHORTINT AclSize, AceCount, Sbz2;
  } WinApi_ACL;

typedef
  struct WinApi_ACL_REVISION_INFORMATION {
    INTEGER AclRevision;
  } WinApi_ACL_REVISION_INFORMATION;

typedef
  struct WinApi_ACL_SIZE_INFORMATION {
    INTEGER AceCount, AclBytesInUse, AclBytesFree;
  } WinApi_ACL_SIZE_INFORMATION;

typedef
  CHAR *WinApi_PtrSTR;

typedef
  struct WinApi_ADDJOB_INFO_1A {
    WinApi_PtrSTR Path;
    INTEGER JobId;
  } WinApi_ADDJOB_INFO_1A;

typedef
  LONGCHAR *WinApi_PtrWSTR;

typedef
  struct WinApi_ADDJOB_INFO_1W {
    WinApi_PtrWSTR Path;
    INTEGER JobId;
  } WinApi_ADDJOB_INFO_1W;

typedef
  struct WinApi_ANIMATIONINFO {
    INTEGER cbSize, iMinAnimate;
  } WinApi_ANIMATIONINFO;

typedef
  void (__STDCALL *WinApi_APCFUNC)(INTEGER);

typedef
  struct WinApi_BITMAP {
    INTEGER bmType, bmWidth, bmHeight, bmWidthBytes;
    SHORTINT bmPlanes, bmBitsPixel;
    INTEGER bmBits;
  } WinApi_BITMAP;

typedef
  struct WinApi_BITMAPCOREHEADER {
    INTEGER bcSize;
    SHORTINT bcWidth, bcHeight, bcPlanes, bcBitCount;
  } WinApi_BITMAPCOREHEADER;

typedef
  struct WinApi_RGBTRIPLE {
    CHAR rgbtBlue, rgbtGreen, rgbtRed;
  } WinApi_RGBTRIPLE;

typedef
  struct WinApi_BITMAPCOREINFO {
    WinApi_BITMAPCOREHEADER bmciHeader;
    WinApi_RGBTRIPLE bmciColors[1];
  } WinApi_BITMAPCOREINFO;

typedef
  struct WinApi_BITMAPINFOHEADER {
    INTEGER biSize, biWidth, biHeight;
    SHORTINT biPlanes, biBitCount;
    INTEGER biCompression, biSizeImage, biXPelsPerMeter, biYPelsPerMeter, biClrUsed, biClrImportant;
  } WinApi_BITMAPINFOHEADER;

typedef
  struct WinApi_RGBQUAD {
    CHAR rgbBlue, rgbGreen, rgbRed, rgbReserved;
  } WinApi_RGBQUAD;

typedef
  struct WinApi_BITMAPINFO {
    WinApi_BITMAPINFOHEADER bmiHeader;
    WinApi_RGBQUAD bmiColors[1];
  } WinApi_BITMAPINFO;

typedef
  struct WinApi_CIEXYZ {
    INTEGER ciexyzX, ciexyzY, ciexyzZ;
  } WinApi_CIEXYZ;

typedef
  struct WinApi_CIEXYZTRIPLE {
    WinApi_CIEXYZ ciexyzRed, ciexyzGreen, ciexyzBlue;
  } WinApi_CIEXYZTRIPLE;

typedef
  struct WinApi_BITMAPV4HEADER {
    INTEGER bV4Size, bV4Width, bV4Height;
    SHORTINT bV4Planes, bV4BitCount;
    INTEGER bV4V4Compression, bV4SizeImage, bV4XPelsPerMeter, bV4YPelsPerMeter, bV4ClrUsed, bV4ClrImportant, bV4RedMask, bV4GreenMask, bV4BlueMask, bV4AlphaMask, bV4CSType;
    WinApi_CIEXYZTRIPLE bV4Endpoints;
    INTEGER bV4GammaRed, bV4GammaGreen, bV4GammaBlue;
  } WinApi_BITMAPV4HEADER;

typedef
  struct WinApi_BROADCASTSYSMSG {
    INTEGER uiMessage, wParam, lParam;
  } WinApi_BROADCASTSYSMSG;

typedef
  INTEGER (__STDCALL *WinApi_CALINFO_ENUMPROCA)(void);

typedef
  INTEGER (__STDCALL *WinApi_CALINFO_ENUMPROCW)(void);

typedef
  struct WinApi_CBTACTIVATESTRUCT {
    INTEGER fMouse, hWndActive;
  } WinApi_CBTACTIVATESTRUCT;

typedef
  struct WinApi_CREATESTRUCTA *WinApi_PtrCREATESTRUCTA;

typedef
  struct WinApi_CBT_CREATEWNDA {
    WinApi_PtrCREATESTRUCTA lpcs;
    INTEGER hwndInsertAfter;
  } WinApi_CBT_CREATEWNDA;

typedef
  struct WinApi_CREATESTRUCTW *WinApi_PtrCREATESTRUCTW;

typedef
  struct WinApi_CBT_CREATEWNDW {
    WinApi_PtrCREATESTRUCTW lpcs;
    INTEGER hwndInsertAfter;
  } WinApi_CBT_CREATEWNDW;

typedef
  struct WinApi_FONTSIGNATURE {
    INTEGER fsUsb[4];
    INTEGER fsCsb[2];
  } WinApi_FONTSIGNATURE;

typedef
  struct WinApi_CHARSETINFO {
    INTEGER ciCharset, ciACP;
    WinApi_FONTSIGNATURE fs;
  } WinApi_CHARSETINFO;

typedef
  struct WinApi_CLIENTCREATESTRUCT {
    INTEGER hWindowMenu, idFirstChild;
  } WinApi_CLIENTCREATESTRUCT;

typedef
  INTEGER (__STDCALL *WinApi_CODEPAGE_ENUMPROCA)(void);

typedef
  INTEGER (__STDCALL *WinApi_CODEPAGE_ENUMPROCW)(void);

typedef
  struct WinApi_COLORADJUSTMENT {
    SHORTINT caSize, caFlags, caIlluminantIndex, caRedGamma, caGreenGamma, caBlueGamma, caReferenceBlack, caReferenceWhite, caContrast, caBrightness, caColorfulness, caRedGreenTint;
  } WinApi_COLORADJUSTMENT;

typedef
  struct WinApi_DCB {
    INTEGER DCBlength, BaudRate;
    SET fBits0;
    SHORTINT wReserved, XonLim, XoffLim;
    CHAR ByteSize, Parity, StopBits, XonChar, XoffChar, ErrorChar, EofChar, EvtChar;
    SHORTINT wReserved1;
  } WinApi_DCB;

typedef
  struct WinApi_COMMCONFIG {
    INTEGER dwSize;
    SHORTINT wVersion, wReserved;
    WinApi_DCB dcb;
    INTEGER dwProviderSubType, dwProviderOffset, dwProviderSize;
    LONGCHAR wcProviderData[1];
  } WinApi_COMMCONFIG;

typedef
  struct WinApi_COMMPROP {
    SHORTINT wPacketLength, wPacketVersion;
    INTEGER dwServiceMask, dwReserved1, dwMaxTxQueue, dwMaxRxQueue;
    SET dwMaxBaud;
    INTEGER dwProvSubType;
    SET dwProvCapabilities, dwSettableParams, dwSettableBaud;
    SHORTINT wSettableData, wSettableStopParity;
    INTEGER dwCurrentTxQueue, dwCurrentRxQueue, dwProvSpec1, dwProvSpec2;
    LONGCHAR wcProvChar[1];
  } WinApi_COMMPROP;

typedef
  struct WinApi_COMMTIMEOUTS {
    INTEGER ReadIntervalTimeout, ReadTotalTimeoutMultiplier, ReadTotalTimeoutConstant, WriteTotalTimeoutMultiplier, WriteTotalTimeoutConstant;
  } WinApi_COMMTIMEOUTS;

typedef
  struct WinApi_COMPAREITEMSTRUCT {
    SET CtlType;
    INTEGER CtlID, hwndItem, itemID1, itemData1, itemID2, itemData2, dwLocaleId;
  } WinApi_COMPAREITEMSTRUCT;

typedef
  struct WinApi_COMPOUND_ACCESS_ALLOWED_ACE {
    WinApi_ACE_HEADER Header;
    SET Mask;
    SHORTINT CompoundAceType, Reserved;
    INTEGER SidStart;
  } WinApi_COMPOUND_ACCESS_ALLOWED_ACE;

typedef
  struct WinApi_COMSTAT {
    SET fBits0;
    INTEGER cbInQue, cbOutQue;
  } WinApi_COMSTAT;

typedef
  struct WinApi_CONSOLE_CURSOR_INFO {
    INTEGER dwSize, bVisible;
  } WinApi_CONSOLE_CURSOR_INFO;

typedef
  struct WinApi_COORD {
    SHORTINT X, Y;
  } WinApi_COORD;

typedef
  struct WinApi_SMALL_RECT {
    SHORTINT Left, Top, Right, Bottom;
  } WinApi_SMALL_RECT;

typedef
  struct WinApi_CONSOLE_SCREEN_BUFFER_INFO {
    WinApi_COORD dwSize, dwCursorPosition;
    SHORTINT wAttributes;
    WinApi_SMALL_RECT srWindow;
    WinApi_COORD dwMaximumWindowSize;
  } WinApi_CONSOLE_SCREEN_BUFFER_INFO;

typedef
  struct WinApi_FLOATING_SAVE_AREA {
    INTEGER ControlWord, StatusWord, TagWord, ErrorOffset, ErrorSelector, DataOffset, DataSelector;
    CHAR RegisterArea[80];
    INTEGER Cr0NpxState;
  } WinApi_FLOATING_SAVE_AREA;

typedef
  struct WinApi_CONTEXT {
    SET ContextFlags;
    INTEGER Dr0, Dr1, Dr2, Dr3, Dr6, Dr7;
    WinApi_FLOATING_SAVE_AREA FloatSave;
    INTEGER SegGs, SegFs, SegEs, SegDs, Edi, Esi, Ebx, Edx, Ecx, Eax, Ebp, Eip, SegCs, EFlags, Esp, SegSs;
  } WinApi_CONTEXT;

typedef
  struct WinApi_SECURITY_QUALITY_OF_SERVICE {
    INTEGER Length, ImpersonationLevel;
    BOOLEAN ContextTrackingMode, EffectiveOnly;
  } WinApi_SECURITY_QUALITY_OF_SERVICE;

typedef
  struct WinApi_CONVCONTEXT {
    INTEGER cb, wFlags, wCountryID, iCodePage, dwLangID, dwSecurity;
    WinApi_SECURITY_QUALITY_OF_SERVICE qos;
  } WinApi_CONVCONTEXT;

typedef
  struct WinApi_CONVINFO {
    INTEGER cb, hUser, hConvPartner, hszSvcPartner, hszServiceReq, hszTopic, hszItem, wFmt, wType;
    SET wStatus;
    INTEGER wConvst, wLastError, hConvList;
    WinApi_CONVCONTEXT ConvCtxt;
    INTEGER hwnd, hwndPartner;
  } WinApi_CONVINFO;

typedef
  struct WinApi_COPYDATASTRUCT {
    INTEGER dwData, cbData, lpData;
  } WinApi_COPYDATASTRUCT;

typedef
  struct WinApi_CPINFO {
    INTEGER MaxCharSize;
    CHAR DefaultChar[2];
    CHAR LeadByte[12];
  } WinApi_CPINFO;

typedef
  struct WinApi_CREATESTRUCTA {
    INTEGER lpCreateParams, hInstance, hMenu, hwndParent, cy, cx, y, x;
    SET style;
    WinApi_PtrSTR lpszName, lpszClass;
    SET dwExStyle;
  } WinApi_CREATESTRUCTA;

typedef
  struct WinApi_CREATESTRUCTW {
    INTEGER lpCreateParams, hInstance, hMenu, hwndParent, cy, cx, y, x;
    SET style;
    WinApi_PtrWSTR lpszName, lpszClass;
    SET dwExStyle;
  } WinApi_CREATESTRUCTW;

typedef
  INTEGER (__STDCALL *WinApi_THREAD_START_ROUTINE)(INTEGER);

typedef
  struct WinApi_CREATE_PROCESS_DEBUG_INFO {
    INTEGER hFile, hProcess, hThread, lpBaseOfImage, dwDebugInfoFileOffset, nDebugInfoSize, lpThreadLocalBase;
    WinApi_THREAD_START_ROUTINE lpStartAddress;
    INTEGER lpImageName;
    SHORTINT fUnicode;
  } WinApi_CREATE_PROCESS_DEBUG_INFO;

typedef
  struct WinApi_CREATE_THREAD_DEBUG_INFO {
    INTEGER hThread, lpThreadLocalBase;
    WinApi_THREAD_START_ROUTINE lpStartAddress;
  } WinApi_CREATE_THREAD_DEBUG_INFO;

typedef
  struct WinApi_RTL_CRITICAL_SECTION_DEBUG *WinApi_PtrRTL_CRITICAL_SECTION_DEBUG;

typedef
  struct WinApi_RTL_CRITICAL_SECTION {
    WinApi_PtrRTL_CRITICAL_SECTION_DEBUG DebugInfo;
    INTEGER LockCount, RecursionCount, OwningThread, LockSemaphore, Reserved;
  } WinApi_RTL_CRITICAL_SECTION;

typedef
  WinApi_RTL_CRITICAL_SECTION *WinApi_PtrRTL_CRITICAL_SECTION;

typedef
  struct WinApi_LIST_ENTRY *WinApi_PtrLIST_ENTRY;

typedef
  struct WinApi_LIST_ENTRY {
    WinApi_PtrLIST_ENTRY Flink, Blink;
  } WinApi_LIST_ENTRY;

typedef
  struct WinApi_RTL_CRITICAL_SECTION_DEBUG {
    SHORTINT Type, CreatorBackTraceIndex;
    WinApi_PtrRTL_CRITICAL_SECTION CriticalSection;
    WinApi_LIST_ENTRY ProcessLocksList;
    INTEGER EntryCount, ContentionCount;
    INTEGER Spare[2];
  } WinApi_RTL_CRITICAL_SECTION_DEBUG;

typedef
  struct WinApi_CURRENCYFMTA {
    INTEGER NumDigits, LeadingZero, Grouping;
    WinApi_PtrSTR lpDecimalSep, lpThousandSep;
    INTEGER NegativeOrder, PositiveOrder;
    WinApi_PtrSTR lpCurrencySymbol;
  } WinApi_CURRENCYFMTA;

typedef
  struct WinApi_CURRENCYFMTW {
    INTEGER NumDigits, LeadingZero, Grouping;
    WinApi_PtrWSTR lpDecimalSep, lpThousandSep;
    INTEGER NegativeOrder, PositiveOrder;
    WinApi_PtrWSTR lpCurrencySymbol;
  } WinApi_CURRENCYFMTW;

typedef
  struct WinApi_CURSORSHAPE {
    INTEGER xHotSpot, yHotSpot, cx, cy, cbWidth;
    CHAR Planes, BitsPixel;
  } WinApi_CURSORSHAPE;

typedef
  struct WinApi_CWPRETSTRUCT {
    INTEGER lResult, lParam, wParam, message, hwnd;
  } WinApi_CWPRETSTRUCT;

typedef
  struct WinApi_CWPSTRUCT {
    INTEGER lParam, wParam, message, hwnd;
  } WinApi_CWPSTRUCT;

typedef
  struct WinApi_DATATYPES_INFO_1A {
    WinApi_PtrSTR pName;
  } WinApi_DATATYPES_INFO_1A;

typedef
  struct WinApi_DATATYPES_INFO_1W {
    WinApi_PtrWSTR pName;
  } WinApi_DATATYPES_INFO_1W;

typedef
  INTEGER (__STDCALL *WinApi_DATEFMT_ENUMPROCA)(void);

typedef
  INTEGER (__STDCALL *WinApi_DATEFMT_ENUMPROCW)(void);

typedef
  struct WinApi_DDEACK {
    SHORTINT fBits0;
  } WinApi_DDEACK;

typedef
  struct WinApi_DDEADVISE {
    SHORTINT fBits0, cfFormat;
  } WinApi_DDEADVISE;

typedef
  struct WinApi_DDEDATA {
    SHORTINT fBits0, cfFormat;
    CHAR Value[1];
  } WinApi_DDEDATA;

typedef
  struct WinApi_DDELN {
    SHORTINT fBits0, cfFormat;
  } WinApi_DDELN;

typedef
  struct WinApi_DDEML_MSG_HOOK_DATA {
    INTEGER uiLo, uiHi, cbData;
    INTEGER Data[8];
  } WinApi_DDEML_MSG_HOOK_DATA;

typedef
  struct WinApi_DDEPOKE {
    SHORTINT fBits0, cfFormat;
    CHAR Value[1];
  } WinApi_DDEPOKE;

typedef
  struct WinApi_DDEUP {
    SHORTINT fBits0, cfFormat;
    CHAR rgb[1];
  } WinApi_DDEUP;

typedef
  struct WinApi_DEBUGHOOKINFO {
    INTEGER idThread, idThreadInstaller, lParam, wParam, code;
  } WinApi_DEBUGHOOKINFO;

typedef
  struct WinApi_DELETEITEMSTRUCT {
    SET CtlType;
    INTEGER CtlID, itemID, hwndItem, itemData;
  } WinApi_DELETEITEMSTRUCT;

typedef
  INTEGER (__STDCALL *WinApi_DESKTOPENUMPROC)(void);

typedef
  INTEGER (__STDCALL *WinApi_DESKTOPENUMPROCA)(void);

typedef
  INTEGER (__STDCALL *WinApi_DESKTOPENUMPROCW)(void);

typedef
  struct WinApi_DEVMODEA {
    CHAR dmDeviceName[32];
    SHORTINT dmSpecVersion, dmDriverVersion, dmSize, dmDriverExtra;
    SET dmFields;
    SHORTINT dmOrientation, dmPaperSize, dmPaperLength, dmPaperWidth, dmScale, dmCopies, dmDefaultSource, dmPrintQuality, dmColor, dmDuplex, dmYResolution, dmTTOption, dmCollate;
    CHAR dmFormName[32];
    SHORTINT dmLogPixels;
    INTEGER dmBitsPerPel, dmPelsWidth, dmPelsHeight;
    SET dmDisplayFlags;
    INTEGER dmDisplayFrequency, dmICMMethod, dmICMIntent, dmMediaType, dmDitherType, dmICCManufacturer, dmICCModel, dmPanningWidth, dmPanningHeight;
  } WinApi_DEVMODEA;

typedef
  struct WinApi_DEVMODEW {
    LONGCHAR dmDeviceName[32];
    SHORTINT dmSpecVersion, dmDriverVersion, dmSize, dmDriverExtra;
    SET dmFields;
    SHORTINT dmOrientation, dmPaperSize, dmPaperLength, dmPaperWidth, dmScale, dmCopies, dmDefaultSource, dmPrintQuality, dmColor, dmDuplex, dmYResolution, dmTTOption, dmCollate;
    LONGCHAR dmFormName[32];
    SHORTINT dmLogPixels;
    INTEGER dmBitsPerPel, dmPelsWidth, dmPelsHeight;
    SET dmDisplayFlags;
    INTEGER dmDisplayFrequency, dmICMMethod, dmICMIntent, dmMediaType, dmDitherType, dmICCManufacturer, dmICCModel, dmPanningWidth, dmPanningHeight;
  } WinApi_DEVMODEW;

typedef
  struct WinApi_DIBSECTION {
    WinApi_BITMAP dsBm;
    WinApi_BITMAPINFOHEADER dsBmih;
    INTEGER dsBitfields[3];
    INTEGER dshSection, dsOffset;
  } WinApi_DIBSECTION;

typedef
  INTEGER (__STDCALL *WinApi_DLGPROC)(INTEGER, INTEGER, INTEGER, INTEGER);

typedef
  struct WinApi_DOCINFOA {
    INTEGER cbSize;
    WinApi_PtrSTR lpszDocName, lpszOutput, lpszDatatype;
    INTEGER fwType;
  } WinApi_DOCINFOA;

typedef
  struct WinApi_DOCINFOW {
    INTEGER cbSize;
    WinApi_PtrWSTR lpszDocName, lpszOutput, lpszDatatype;
    INTEGER fwType;
  } WinApi_DOCINFOW;

typedef
  struct WinApi_DOC_INFO_1A {
    WinApi_PtrSTR pDocName, pOutputFile, pDatatype;
  } WinApi_DOC_INFO_1A;

typedef
  struct WinApi_DOC_INFO_1W {
    WinApi_PtrWSTR pDocName, pOutputFile, pDatatype;
  } WinApi_DOC_INFO_1W;

typedef
  struct WinApi_DOC_INFO_2A {
    WinApi_PtrSTR pDocName, pOutputFile, pDatatype;
    SET dwMode;
    INTEGER JobId;
  } WinApi_DOC_INFO_2A;

typedef
  struct WinApi_DOC_INFO_2W {
    WinApi_PtrWSTR pDocName, pOutputFile, pDatatype;
    SET dwMode;
    INTEGER JobId;
  } WinApi_DOC_INFO_2W;

typedef
  struct WinApi_RECT {
    INTEGER left, top, right, bottom;
  } WinApi_RECT;

typedef
  struct WinApi_DRAWITEMSTRUCT {
    SET CtlType;
    INTEGER CtlID, itemID;
    SET itemAction, itemState;
    INTEGER hwndItem, hDC;
    WinApi_RECT rcItem;
    INTEGER itemData;
  } WinApi_DRAWITEMSTRUCT;

typedef
  INTEGER (__STDCALL *WinApi_DRAWSTATEPROC)(void);

typedef
  struct WinApi_DRAWTEXTPARAMS {
    INTEGER cbSize, iTabLength, iLeftMargin, iRightMargin, uiLengthDrawn;
  } WinApi_DRAWTEXTPARAMS;

typedef
  struct WinApi_DRIVER_INFO_1A {
    WinApi_PtrSTR pName;
  } WinApi_DRIVER_INFO_1A;

typedef
  struct WinApi_DRIVER_INFO_1W {
    WinApi_PtrWSTR pName;
  } WinApi_DRIVER_INFO_1W;

typedef
  struct WinApi_DRIVER_INFO_2A {
    INTEGER cVersion;
    WinApi_PtrSTR pName, pEnvironment, pDriverPath, pDataFile, pConfigFile;
  } WinApi_DRIVER_INFO_2A;

typedef
  struct WinApi_DRIVER_INFO_2W {
    INTEGER cVersion;
    WinApi_PtrWSTR pName, pEnvironment, pDriverPath, pDataFile, pConfigFile;
  } WinApi_DRIVER_INFO_2W;

typedef
  struct WinApi_DRIVER_INFO_3A {
    INTEGER cVersion;
    WinApi_PtrSTR pName, pEnvironment, pDriverPath, pDataFile, pConfigFile, pHelpFile, pDependentFiles, pMonitorName, pDefaultDataType;
  } WinApi_DRIVER_INFO_3A;

typedef
  struct WinApi_DRIVER_INFO_3W {
    INTEGER cVersion;
    WinApi_PtrWSTR pName, pEnvironment, pDriverPath, pDataFile, pConfigFile, pHelpFile, pDependentFiles, pMonitorName, pDefaultDataType;
  } WinApi_DRIVER_INFO_3W;

typedef
  struct WinApi_POINT {
    INTEGER x, y;
  } WinApi_POINT;

typedef
  struct WinApi_DROPSTRUCT {
    INTEGER hwndSource, hwndSink, wFmt, dwData;
    WinApi_POINT ptDrop;
    INTEGER dwControlData;
  } WinApi_DROPSTRUCT;

typedef
  INTEGER (__STDCALL *WinApi_EDITWORDBREAKPROC)(void);

typedef
  INTEGER (__STDCALL *WinApi_EDITWORDBREAKPROCA)(void);

typedef
  INTEGER (__STDCALL *WinApi_EDITWORDBREAKPROCW)(void);

typedef
  struct WinApi_EMR {
    INTEGER iType, nSize;
  } WinApi_EMR;

typedef
  struct WinApi_EMRABORTPATH {
    WinApi_EMR emr;
  } WinApi_EMRABORTPATH;

typedef
  struct WinApi_EMRANGLEARC {
    WinApi_EMR emr;
    WinApi_POINT ptlCenter;
    INTEGER nRadius;
    SHORTREAL eStartAngle, eSweepAngle;
  } WinApi_EMRANGLEARC;

typedef
  struct WinApi_EMRARC {
    WinApi_EMR emr;
    WinApi_RECT rclBox;
    WinApi_POINT ptlStart, ptlEnd;
  } WinApi_EMRARC;

typedef
  struct WinApi_XFORM {
    SHORTREAL eM11, eM12, eM21, eM22, eDx, eDy;
  } WinApi_XFORM;

typedef
  struct WinApi_EMRBITBLT {
    WinApi_EMR emr;
    WinApi_RECT rclBounds;
    INTEGER xDest, yDest, cxDest, cyDest, dwRop, xSrc, ySrc;
    WinApi_XFORM xformSrc;
    INTEGER crBkColorSrc, iUsageSrc, offBmiSrc, cbBmiSrc, offBitsSrc, cbBitsSrc;
  } WinApi_EMRBITBLT;

typedef
  struct WinApi_LOGBRUSH {
    INTEGER lbStyle, lbColor, lbHatch;
  } WinApi_LOGBRUSH;

typedef
  struct WinApi_EMRCREATEBRUSHINDIRECT {
    WinApi_EMR emr;
    INTEGER ihBrush;
    WinApi_LOGBRUSH lb;
  } WinApi_EMRCREATEBRUSHINDIRECT;

typedef
  struct WinApi_LOGCOLORSPACEW {
    INTEGER lcsSignature, lcsVersion, lcsSize, lcsCSType, lcsIntent;
    WinApi_CIEXYZTRIPLE lcsEndpoints;
    INTEGER lcsGammaRed, lcsGammaGreen, lcsGammaBlue;
    LONGCHAR lcsFilename[260];
  } WinApi_LOGCOLORSPACEW;

typedef
  struct WinApi_EMRCREATECOLORSPACE {
    WinApi_EMR emr;
    INTEGER ihCS;
    WinApi_LOGCOLORSPACEW lcs;
  } WinApi_EMRCREATECOLORSPACE;

typedef
  struct WinApi_EMRCREATEDIBPATTERNBRUSHPT {
    WinApi_EMR emr;
    INTEGER ihBrush, iUsage, offBmi, cbBmi, offBits, cbBits;
  } WinApi_EMRCREATEDIBPATTERNBRUSHPT;

typedef
  struct WinApi_EMRCREATEMONOBRUSH {
    WinApi_EMR emr;
    INTEGER ihBrush, iUsage, offBmi, cbBmi, offBits, cbBits;
  } WinApi_EMRCREATEMONOBRUSH;

typedef
  struct WinApi_PALETTEENTRY {
    CHAR peRed, peGreen, peBlue, peFlags;
  } WinApi_PALETTEENTRY;

typedef
  struct WinApi_LOGPALETTE {
    SHORTINT palVersion, palNumEntries;
    WinApi_PALETTEENTRY palPalEntry[1];
  } WinApi_LOGPALETTE;

typedef
  struct WinApi_EMRCREATEPALETTE {
    WinApi_EMR emr;
    INTEGER ihPal;
    WinApi_LOGPALETTE lgpl;
  } WinApi_EMRCREATEPALETTE;

typedef
  struct WinApi_LOGPEN {
    INTEGER lopnStyle;
    WinApi_POINT lopnWidth;
    INTEGER lopnColor;
  } WinApi_LOGPEN;

typedef
  struct WinApi_EMRCREATEPEN {
    WinApi_EMR emr;
    INTEGER ihPen;
    WinApi_LOGPEN lopn;
  } WinApi_EMRCREATEPEN;

typedef
  struct WinApi_EMRSELECTCOLORSPACE {
    WinApi_EMR emr;
    INTEGER ihCS;
  } WinApi_EMRSELECTCOLORSPACE;

typedef
  struct WinApi_EMRSELECTOBJECT {
    WinApi_EMR emr;
    INTEGER ihObject;
  } WinApi_EMRSELECTOBJECT;

typedef
  struct WinApi_EMRELLIPSE {
    WinApi_EMR emr;
    WinApi_RECT rclBox;
  } WinApi_EMRELLIPSE;

typedef
  struct WinApi_EMREOF {
    WinApi_EMR emr;
    INTEGER nPalEntries, offPalEntries, nSizeLast;
  } WinApi_EMREOF;

typedef
  struct WinApi_EMREXCLUDECLIPRECT {
    WinApi_EMR emr;
    WinApi_RECT rclClip;
  } WinApi_EMREXCLUDECLIPRECT;

typedef
  struct WinApi_LOGFONTW {
    INTEGER lfHeight, lfWidth, lfEscapement, lfOrientation, lfWeight;
    CHAR lfItalic, lfUnderline, lfStrikeOut, lfCharSet, lfOutPrecision, lfClipPrecision, lfQuality, lfPitchAndFamily;
    LONGCHAR lfFaceName[32];
  } WinApi_LOGFONTW;

typedef
  struct WinApi_PANOSE {
    CHAR bFamilyType, bSerifStyle, bWeight, bProportion, bContrast, bStrokeVariation, bArmStyle, bLetterform, bMidline, bXHeight;
  } WinApi_PANOSE;

typedef
  struct WinApi_EXTLOGFONTW {
    WinApi_LOGFONTW elfLogFont;
    LONGCHAR elfFullName[64];
    LONGCHAR elfStyle[32];
    INTEGER elfVersion, elfStyleSize, elfMatch, elfReserved;
    CHAR elfVendorId[4];
    INTEGER elfCulture;
    WinApi_PANOSE elfPanose;
  } WinApi_EXTLOGFONTW;

typedef
  struct WinApi_EMREXTCREATEFONTINDIRECTW {
    WinApi_EMR emr;
    INTEGER ihFont;
    WinApi_EXTLOGFONTW elfw;
  } WinApi_EMREXTCREATEFONTINDIRECTW;

typedef
  struct WinApi_EXTLOGPEN {
    INTEGER elpPenStyle, elpWidth, elpBrushStyle, elpColor, elpHatch, elpNumEntries;
    INTEGER elpStyleEntry[1];
  } WinApi_EXTLOGPEN;

typedef
  struct WinApi_EMREXTCREATEPEN {
    WinApi_EMR emr;
    INTEGER ihPen, offBmi, cbBmi, offBits, cbBits;
    WinApi_EXTLOGPEN elp;
  } WinApi_EMREXTCREATEPEN;

typedef
  struct WinApi_EMREXTFLOODFILL {
    WinApi_EMR emr;
    WinApi_POINT ptlStart;
    INTEGER crColor, iMode;
  } WinApi_EMREXTFLOODFILL;

typedef
  struct WinApi_EMREXTSELECTCLIPRGN {
    WinApi_EMR emr;
    INTEGER cbRgnData, iMode;
    CHAR RgnData[1];
  } WinApi_EMREXTSELECTCLIPRGN;

typedef
  struct WinApi_EMRTEXT {
    WinApi_POINT ptlReference;
    INTEGER nChars, offString, fOptions;
    WinApi_RECT rcl;
    INTEGER offDx;
  } WinApi_EMRTEXT;

typedef
  struct WinApi_EMREXTTEXTOUTA {
    WinApi_EMR emr;
    WinApi_RECT rclBounds;
    INTEGER iGraphicsMode;
    SHORTREAL exScale, eyScale;
    WinApi_EMRTEXT emrtext;
  } WinApi_EMREXTTEXTOUTA;

typedef
  struct WinApi_EMRFILLPATH {
    WinApi_EMR emr;
    WinApi_RECT rclBounds;
  } WinApi_EMRFILLPATH;

typedef
  struct WinApi_EMRFILLRGN {
    WinApi_EMR emr;
    WinApi_RECT rclBounds;
    INTEGER cbRgnData, ihBrush;
    CHAR RgnData[1];
  } WinApi_EMRFILLRGN;

typedef
  struct WinApi_EMRFORMAT {
    INTEGER dSignature, nVersion, cbData, offData;
  } WinApi_EMRFORMAT;

typedef
  struct WinApi_SIZE {
    INTEGER cx, cy;
  } WinApi_SIZE;

typedef
  struct WinApi_EMRFRAMERGN {
    WinApi_EMR emr;
    WinApi_RECT rclBounds;
    INTEGER cbRgnData, ihBrush;
    WinApi_SIZE szlStroke;
    CHAR RgnData[1];
  } WinApi_EMRFRAMERGN;

typedef
  struct WinApi_EMRGDICOMMENT {
    WinApi_EMR emr;
    INTEGER cbData;
    CHAR Data[1];
  } WinApi_EMRGDICOMMENT;

typedef
  struct WinApi_EMRGLSBOUNDEDRECORD {
    WinApi_EMR emr;
    WinApi_RECT rclBounds;
    INTEGER cbData;
    CHAR Data[1];
  } WinApi_EMRGLSBOUNDEDRECORD;

typedef
  struct WinApi_EMRGLSRECORD {
    WinApi_EMR emr;
    INTEGER cbData;
    CHAR Data[1];
  } WinApi_EMRGLSRECORD;

typedef
  struct WinApi_EMRINVERTRGN {
    WinApi_EMR emr;
    WinApi_RECT rclBounds;
    INTEGER cbRgnData;
    CHAR RgnData[1];
  } WinApi_EMRINVERTRGN;

typedef
  struct WinApi_EMRLINETO {
    WinApi_EMR emr;
    WinApi_POINT ptl;
  } WinApi_EMRLINETO;

typedef
  struct WinApi_EMRMASKBLT {
    WinApi_EMR emr;
    WinApi_RECT rclBounds;
    INTEGER xDest, yDest, cxDest, cyDest, dwRop, xSrc, ySrc;
    WinApi_XFORM xformSrc;
    INTEGER crBkColorSrc, iUsageSrc, offBmiSrc, cbBmiSrc, offBitsSrc, cbBitsSrc, xMask, yMask, iUsageMask, offBmiMask, cbBmiMask, offBitsMask, cbBitsMask;
  } WinApi_EMRMASKBLT;

typedef
  struct WinApi_EMRMODIFYWORLDTRANSFORM {
    WinApi_EMR emr;
    WinApi_XFORM xform;
    INTEGER iMode;
  } WinApi_EMRMODIFYWORLDTRANSFORM;

typedef
  struct WinApi_EMROFFSETCLIPRGN {
    WinApi_EMR emr;
    WinApi_POINT ptlOffset;
  } WinApi_EMROFFSETCLIPRGN;

typedef
  struct WinApi_PIXELFORMATDESCRIPTOR {
    SHORTINT nSize, nVersion;
    SET dwFlags;
    CHAR iPixelType, cColorBits, cRedBits, cRedShift, cGreenBits, cGreenShift, cBlueBits, cBlueShift, cAlphaBits, cAlphaShift, cAccumBits, cAccumRedBits, cAccumGreenBits, cAccumBlueBits, cAccumAlphaBits, cDepthBits, cStencilBits, cAuxBuffers, iLayerType, bReserved;
    SET dwLayerMask, dwVisibleMask, dwDamageMask;
  } WinApi_PIXELFORMATDESCRIPTOR;

typedef
  struct WinApi_EMRPIXELFORMAT {
    WinApi_EMR emr;
    WinApi_PIXELFORMATDESCRIPTOR pfd;
  } WinApi_EMRPIXELFORMAT;

typedef
  struct WinApi_EMRPLGBLT {
    WinApi_EMR emr;
    WinApi_RECT rclBounds;
    WinApi_POINT aptlDest[3];
    INTEGER xSrc, ySrc, cxSrc, cySrc;
    WinApi_XFORM xformSrc;
    INTEGER crBkColorSrc, iUsageSrc, offBmiSrc, cbBmiSrc, offBitsSrc, cbBitsSrc, xMask, yMask, iUsageMask, offBmiMask, cbBmiMask, offBitsMask, cbBitsMask;
  } WinApi_EMRPLGBLT;

typedef
  struct WinApi_EMRPOLYLINE {
    WinApi_EMR emr;
    WinApi_RECT rclBounds;
    INTEGER cptl;
    WinApi_POINT aptl[1];
  } WinApi_EMRPOLYLINE;

typedef
  struct WinApi_POINTS {
    SHORTINT x, y;
  } WinApi_POINTS;

typedef
  struct WinApi_EMRPOLYLINE16 {
    WinApi_EMR emr;
    WinApi_RECT rclBounds;
    INTEGER cpts;
    WinApi_POINTS apts[1];
  } WinApi_EMRPOLYLINE16;

typedef
  struct WinApi_EMRPOLYDRAW {
    WinApi_EMR emr;
    WinApi_RECT rclBounds;
    INTEGER cptl;
    WinApi_POINT aptl[1];
    CHAR abTypes[1];
  } WinApi_EMRPOLYDRAW;

typedef
  struct WinApi_EMRPOLYDRAW16 {
    WinApi_EMR emr;
    WinApi_RECT rclBounds;
    INTEGER cpts;
    WinApi_POINTS apts[1];
    CHAR abTypes[1];
  } WinApi_EMRPOLYDRAW16;

typedef
  struct WinApi_EMRPOLYPOLYLINE {
    WinApi_EMR emr;
    WinApi_RECT rclBounds;
    INTEGER nPolys, cptl;
    INTEGER aPolyCounts[1];
    WinApi_POINT aptl[1];
  } WinApi_EMRPOLYPOLYLINE;

typedef
  struct WinApi_EMRPOLYPOLYLINE16 {
    WinApi_EMR emr;
    WinApi_RECT rclBounds;
    INTEGER nPolys, cpts;
    INTEGER aPolyCounts[1];
    WinApi_POINTS apts[1];
  } WinApi_EMRPOLYPOLYLINE16;

typedef
  struct WinApi_EMRPOLYTEXTOUTA {
    WinApi_EMR emr;
    WinApi_RECT rclBounds;
    INTEGER iGraphicsMode;
    SHORTREAL exScale, eyScale;
    INTEGER cStrings;
    WinApi_EMRTEXT aemrtext[1];
  } WinApi_EMRPOLYTEXTOUTA;

typedef
  struct WinApi_EMRRESIZEPALETTE {
    WinApi_EMR emr;
    INTEGER ihPal, cEntries;
  } WinApi_EMRRESIZEPALETTE;

typedef
  struct WinApi_EMRRESTOREDC {
    WinApi_EMR emr;
    INTEGER iRelative;
  } WinApi_EMRRESTOREDC;

typedef
  struct WinApi_EMRROUNDRECT {
    WinApi_EMR emr;
    WinApi_RECT rclBox;
    WinApi_SIZE szlCorner;
  } WinApi_EMRROUNDRECT;

typedef
  struct WinApi_EMRSCALEVIEWPORTEXTEX {
    WinApi_EMR emr;
    INTEGER xNum, xDenom, yNum, yDenom;
  } WinApi_EMRSCALEVIEWPORTEXTEX;

typedef
  struct WinApi_EMRSELECTCLIPPATH {
    WinApi_EMR emr;
    INTEGER iMode;
  } WinApi_EMRSELECTCLIPPATH;

typedef
  struct WinApi_EMRSELECTPALETTE {
    WinApi_EMR emr;
    INTEGER ihPal;
  } WinApi_EMRSELECTPALETTE;

typedef
  struct WinApi_EMRSETARCDIRECTION {
    WinApi_EMR emr;
    INTEGER iArcDirection;
  } WinApi_EMRSETARCDIRECTION;

typedef
  struct WinApi_EMRSETBKCOLOR {
    WinApi_EMR emr;
    INTEGER crColor;
  } WinApi_EMRSETBKCOLOR;

typedef
  struct WinApi_EMRSETVIEWPORTORGEX {
    WinApi_EMR emr;
    WinApi_POINT ptlOrigin;
  } WinApi_EMRSETVIEWPORTORGEX;

typedef
  struct WinApi_EMRSETCOLORADJUSTMENT {
    WinApi_EMR emr;
    WinApi_COLORADJUSTMENT ColorAdjustment;
  } WinApi_EMRSETCOLORADJUSTMENT;

typedef
  struct WinApi_EMRSETDIBITSTODEVICE {
    WinApi_EMR emr;
    WinApi_RECT rclBounds;
    INTEGER xDest, yDest, xSrc, ySrc, cxSrc, cySrc, offBmiSrc, cbBmiSrc, offBitsSrc, cbBitsSrc, iUsageSrc, iStartScan, cScans;
  } WinApi_EMRSETDIBITSTODEVICE;

typedef
  struct WinApi_EMRSETMAPPERFLAGS {
    WinApi_EMR emr;
    SET dwFlags;
  } WinApi_EMRSETMAPPERFLAGS;

typedef
  struct WinApi_EMRSETMITERLIMIT {
    WinApi_EMR emr;
    SHORTREAL eMiterLimit;
  } WinApi_EMRSETMITERLIMIT;

typedef
  struct WinApi_EMRSETPALETTEENTRIES {
    WinApi_EMR emr;
    INTEGER ihPal, iStart, cEntries;
    WinApi_PALETTEENTRY aPalEntries[1];
  } WinApi_EMRSETPALETTEENTRIES;

typedef
  struct WinApi_EMRSETPIXELV {
    WinApi_EMR emr;
    WinApi_POINT ptlPixel;
    INTEGER crColor;
  } WinApi_EMRSETPIXELV;

typedef
  struct WinApi_EMRSETVIEWPORTEXTEX {
    WinApi_EMR emr;
    WinApi_SIZE szlExtent;
  } WinApi_EMRSETVIEWPORTEXTEX;

typedef
  struct WinApi_EMRSETWORLDTRANSFORM {
    WinApi_EMR emr;
    WinApi_XFORM xform;
  } WinApi_EMRSETWORLDTRANSFORM;

typedef
  struct WinApi_EMRSTRETCHBLT {
    WinApi_EMR emr;
    WinApi_RECT rclBounds;
    INTEGER xDest, yDest, cxDest, cyDest, dwRop, xSrc, ySrc;
    WinApi_XFORM xformSrc;
    INTEGER crBkColorSrc, iUsageSrc, offBmiSrc, cbBmiSrc, offBitsSrc, cbBitsSrc, cxSrc, cySrc;
  } WinApi_EMRSTRETCHBLT;

typedef
  struct WinApi_EMRSTRETCHDIBITS {
    WinApi_EMR emr;
    WinApi_RECT rclBounds;
    INTEGER xDest, yDest, xSrc, ySrc, cxSrc, cySrc, offBmiSrc, cbBmiSrc, offBitsSrc, cbBitsSrc, iUsageSrc, dwRop, cxDest, cyDest;
  } WinApi_EMRSTRETCHDIBITS;

typedef
  struct WinApi_ENHMETAHEADER {
    INTEGER iType, nSize;
    WinApi_RECT rclBounds, rclFrame;
    INTEGER dSignature, nVersion, nBytes, nRecords;
    SHORTINT nHandles, sReserved;
    INTEGER nDescription, offDescription, nPalEntries;
    WinApi_SIZE szlDevice, szlMillimeters;
    INTEGER cbPixelFormat, offPixelFormat, bOpenGL;
  } WinApi_ENHMETAHEADER;

typedef
  struct WinApi_ENHMETARECORD {
    INTEGER iType, nSize;
    INTEGER dParm[1];
  } WinApi_ENHMETARECORD;

typedef
  struct WinApi_HANDLETABLE {
    INTEGER objectHandle[1];
  } WinApi_HANDLETABLE;

typedef
  INTEGER (__STDCALL *WinApi_ENHMFENUMPROC)(INTEGER, WinApi_HANDLETABLE*, WinApi_ENHMETARECORD*, INTEGER, INTEGER);

typedef
  struct WinApi_LOGFONTA {
    INTEGER lfHeight, lfWidth, lfEscapement, lfOrientation, lfWeight;
    CHAR lfItalic, lfUnderline, lfStrikeOut, lfCharSet, lfOutPrecision, lfClipPrecision, lfQuality, lfPitchAndFamily;
    CHAR lfFaceName[32];
  } WinApi_LOGFONTA;

typedef
  struct WinApi_ENUMLOGFONTA {
    WinApi_LOGFONTA elfLogFont;
    CHAR elfFullName[64];
    CHAR elfStyle[32];
  } WinApi_ENUMLOGFONTA;

typedef
  struct WinApi_ENUMLOGFONTEXA {
    WinApi_LOGFONTA elfLogFont;
    CHAR elfFullName[64];
    CHAR elfStyle[32];
    CHAR elfScript[32];
  } WinApi_ENUMLOGFONTEXA;

typedef
  struct WinApi_ENUMLOGFONTEXW {
    WinApi_LOGFONTW elfLogFont;
    LONGCHAR elfFullName[64];
    LONGCHAR elfStyle[32];
    LONGCHAR elfScript[32];
  } WinApi_ENUMLOGFONTEXW;

typedef
  struct WinApi_ENUMLOGFONTW {
    WinApi_LOGFONTW elfLogFont;
    LONGCHAR elfFullName[64];
    LONGCHAR elfStyle[32];
  } WinApi_ENUMLOGFONTW;

typedef
  INTEGER (__STDCALL *WinApi_ENUMRESLANGPROC)(void);

typedef
  INTEGER (__STDCALL *WinApi_ENUMRESNAMEPROC)(void);

typedef
  INTEGER (__STDCALL *WinApi_ENUMRESTYPEPROC)(void);

typedef
  struct WinApi_SERVICE_STATUS {
    SET dwServiceType;
    INTEGER dwCurrentState, dwControlsAccepted, dwWin32ExitCode, dwServiceSpecificExitCode, dwCheckPoint, dwWaitHint;
  } WinApi_SERVICE_STATUS;

typedef
  struct WinApi_ENUM_SERVICE_STATUSA {
    WinApi_PtrSTR lpServiceName, lpDisplayName;
    WinApi_SERVICE_STATUS ServiceStatus;
  } WinApi_ENUM_SERVICE_STATUSA;

typedef
  struct WinApi_ENUM_SERVICE_STATUSW {
    WinApi_PtrWSTR lpServiceName, lpDisplayName;
    WinApi_SERVICE_STATUS ServiceStatus;
  } WinApi_ENUM_SERVICE_STATUSW;

typedef
  struct WinApi_EVENTLOGRECORD {
    INTEGER Length, Reserved, RecordNumber, TimeGenerated, TimeWritten, EventID;
    SHORTINT EventType, NumStrings, EventCategory, ReservedFlags;
    INTEGER ClosingRecordNumber, StringOffset, UserSidLength, UserSidOffset, DataLength, DataOffset;
  } WinApi_EVENTLOGRECORD;

typedef
  struct WinApi_EVENTMSG {
    INTEGER message, paramL, paramH, time, hwnd;
  } WinApi_EVENTMSG;

typedef
  struct WinApi_EXCEPTION_RECORD *WinApi_PtrEXCEPTION_RECORD;

typedef
  struct WinApi_EXCEPTION_RECORD {
    INTEGER ExceptionCode;
    SET ExceptionFlags;
    WinApi_PtrEXCEPTION_RECORD ExceptionRecord;
    INTEGER ExceptionAddress, NumberParameters;
    INTEGER ExceptionInformation[15];
  } WinApi_EXCEPTION_RECORD;

typedef
  struct WinApi_EXCEPTION_DEBUG_INFO {
    WinApi_EXCEPTION_RECORD ExceptionRecord;
    INTEGER dwFirstChance;
  } WinApi_EXCEPTION_DEBUG_INFO;

typedef
  WinApi_CONTEXT *WinApi_PtrCONTEXT;

typedef
  struct WinApi_EXCEPTION_POINTERS {
    WinApi_PtrEXCEPTION_RECORD ExceptionRecord;
    WinApi_PtrCONTEXT ContextRecord;
  } WinApi_EXCEPTION_POINTERS;

typedef
  struct WinApi_EXIT_PROCESS_DEBUG_INFO {
    INTEGER dwExitCode;
  } WinApi_EXIT_PROCESS_DEBUG_INFO;

typedef
  struct WinApi_EXIT_THREAD_DEBUG_INFO {
    INTEGER dwExitCode;
  } WinApi_EXIT_THREAD_DEBUG_INFO;

typedef
  struct WinApi_EXTLOGFONTA {
    WinApi_LOGFONTA elfLogFont;
    CHAR elfFullName[64];
    CHAR elfStyle[32];
    INTEGER elfVersion, elfStyleSize, elfMatch, elfReserved;
    CHAR elfVendorId[4];
    INTEGER elfCulture;
    WinApi_PANOSE elfPanose;
  } WinApi_EXTLOGFONTA;

typedef
  INTEGER (__STDCALL *WinApi_FARPROC)(void);

typedef
  void (__STDCALL *WinApi_FIBER_START_ROUTINE)(INTEGER);

typedef
  struct WinApi_FILETIME {
    INTEGER dwLowDateTime, dwHighDateTime;
  } WinApi_FILETIME;

typedef
  struct WinApi_FILE_NOTIFY_INFORMATION {
    INTEGER NextEntryOffset, Action, FileNameLength;
    LONGCHAR FileName[1];
  } WinApi_FILE_NOTIFY_INFORMATION;

typedef
  struct WinApi_FILTERKEYS {
    INTEGER cbSize;
    SET dwFlags;
    INTEGER iWaitMSec, iDelayMSec, iRepeatMSec, iBounceMSec;
  } WinApi_FILTERKEYS;

typedef
  struct WinApi_FIXED {
    SHORTINT fract, value;
  } WinApi_FIXED;

typedef
  INTEGER (__STDCALL *WinApi_FNCALLBACK)(INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER);

typedef
  INTEGER (__STDCALL *WinApi_FNDEVCAPS)(WinApi_PtrSTR, WinApi_PtrSTR, INTEGER, WinApi_PtrSTR, WinApi_DEVMODEA*);

typedef
  INTEGER (__STDCALL *WinApi_FNDEVMODE)(INTEGER, INTEGER, WinApi_DEVMODEA*, WinApi_PtrSTR, WinApi_PtrSTR, WinApi_DEVMODEA*, WinApi_PtrSTR, INTEGER);

typedef
  struct WinApi_FOCUS_EVENT_RECORD {
    INTEGER bSetFocus;
  } WinApi_FOCUS_EVENT_RECORD;

typedef
  struct WinApi_TEXTMETRICA {
    INTEGER tmHeight, tmAscent, tmDescent, tmInternalLeading, tmExternalLeading, tmAveCharWidth, tmMaxCharWidth, tmWeight, tmOverhang, tmDigitizedAspectX, tmDigitizedAspectY;
    CHAR tmFirstChar, tmLastChar, tmDefaultChar, tmBreakChar, tmItalic, tmUnderlined, tmStruckOut, tmPitchAndFamily, tmCharSet;
  } WinApi_TEXTMETRICA;

typedef
  INTEGER (__STDCALL *WinApi_FONTENUMPROC)(WinApi_LOGFONTA*, WinApi_TEXTMETRICA*, INTEGER, INTEGER);

typedef
  INTEGER (__STDCALL *WinApi_FONTENUMPROCA)(WinApi_LOGFONTA*, WinApi_TEXTMETRICA*, INTEGER, INTEGER);

typedef
  struct WinApi_NEWTEXTMETRICA {
    INTEGER tmHeight, tmAscent, tmDescent, tmInternalLeading, tmExternalLeading, tmAveCharWidth, tmMaxCharWidth, tmWeight, tmOverhang, tmDigitizedAspectX, tmDigitizedAspectY;
    CHAR tmFirstChar, tmLastChar, tmDefaultChar, tmBreakChar, tmItalic, tmUnderlined, tmStruckOut, tmPitchAndFamily, tmCharSet;
    INTEGER ntmFlags, ntmSizeEM, ntmCellHeight, ntmAvgWidth;
  } WinApi_NEWTEXTMETRICA;

typedef
  struct WinApi_NEWTEXTMETRICEXA {
    WinApi_NEWTEXTMETRICA ntmTm;
    WinApi_FONTSIGNATURE ntmFontSig;
  } WinApi_NEWTEXTMETRICEXA;

typedef
  INTEGER (__STDCALL *WinApi_FONTENUMPROCEX)(WinApi_ENUMLOGFONTEXA*, WinApi_NEWTEXTMETRICEXA*, INTEGER, INTEGER);

typedef
  INTEGER (__STDCALL *WinApi_FONTENUMPROCEXA)(WinApi_ENUMLOGFONTEXA*, WinApi_NEWTEXTMETRICEXA*, INTEGER, INTEGER);

typedef
  struct WinApi_NEWTEXTMETRICW {
    INTEGER tmHeight, tmAscent, tmDescent, tmInternalLeading, tmExternalLeading, tmAveCharWidth, tmMaxCharWidth, tmWeight, tmOverhang, tmDigitizedAspectX, tmDigitizedAspectY;
    LONGCHAR tmFirstChar, tmLastChar, tmDefaultChar, tmBreakChar;
    CHAR tmItalic, tmUnderlined, tmStruckOut, tmPitchAndFamily, tmCharSet;
    INTEGER ntmFlags, ntmSizeEM, ntmCellHeight, ntmAvgWidth;
  } WinApi_NEWTEXTMETRICW;

typedef
  struct WinApi_NEWTEXTMETRICEXW {
    WinApi_NEWTEXTMETRICW ntmTm;
    WinApi_FONTSIGNATURE ntmFontSig;
  } WinApi_NEWTEXTMETRICEXW;

typedef
  INTEGER (__STDCALL *WinApi_FONTENUMPROCEXW)(WinApi_ENUMLOGFONTEXW*, WinApi_NEWTEXTMETRICEXW*, INTEGER, INTEGER);

typedef
  struct WinApi_TEXTMETRICW {
    INTEGER tmHeight, tmAscent, tmDescent, tmInternalLeading, tmExternalLeading, tmAveCharWidth, tmMaxCharWidth, tmWeight, tmOverhang, tmDigitizedAspectX, tmDigitizedAspectY;
    LONGCHAR tmFirstChar, tmLastChar, tmDefaultChar, tmBreakChar;
    CHAR tmItalic, tmUnderlined, tmStruckOut, tmPitchAndFamily, tmCharSet;
  } WinApi_TEXTMETRICW;

typedef
  INTEGER (__STDCALL *WinApi_FONTENUMPROCW)(WinApi_LOGFONTW*, WinApi_TEXTMETRICW*, INTEGER, INTEGER);

typedef
  struct WinApi_FORM_INFO_1A {
    SET Flags;
    WinApi_PtrSTR pName;
    WinApi_SIZE Size;
    WinApi_RECT ImageableArea;
  } WinApi_FORM_INFO_1A;

typedef
  struct WinApi_FORM_INFO_1W {
    SET Flags;
    WinApi_PtrWSTR pName;
    WinApi_SIZE Size;
    WinApi_RECT ImageableArea;
  } WinApi_FORM_INFO_1W;

typedef
  struct WinApi_GCP_RESULTSA {
    INTEGER lStructSize;
    WinApi_PtrSTR lpOutString;
    INTEGER *lpOrder;
    INTEGER *lpDx;
    INTEGER *lpCaretPos;
    WinApi_PtrSTR lpClass;
    WinApi_PtrWSTR lpGlyphs;
    INTEGER nGlyphs, nMaxFit;
  } WinApi_GCP_RESULTSA;

typedef
  struct WinApi_GCP_RESULTSW {
    INTEGER lStructSize;
    WinApi_PtrWSTR lpOutString;
    INTEGER *lpOrder;
    INTEGER *lpDx;
    INTEGER *lpCaretPos;
    WinApi_PtrSTR lpClass;
    WinApi_PtrWSTR lpGlyphs;
    INTEGER nGlyphs, nMaxFit;
  } WinApi_GCP_RESULTSW;

typedef
  struct WinApi_GENERIC_MAPPING {
    SET GenericRead, GenericWrite, GenericExecute, GenericAll;
  } WinApi_GENERIC_MAPPING;

typedef
  struct WinApi_GLYPHMETRICS {
    INTEGER gmBlackBoxX, gmBlackBoxY;
    WinApi_POINT gmptGlyphOrigin;
    SHORTINT gmCellIncX, gmCellIncY;
  } WinApi_GLYPHMETRICS;

typedef
  struct WinApi_POINTFLOAT {
    SHORTREAL x, y;
  } WinApi_POINTFLOAT;

typedef
  struct WinApi_GLYPHMETRICSFLOAT {
    SHORTREAL gmfBlackBoxX, gmfBlackBoxY;
    WinApi_POINTFLOAT gmfptGlyphOrigin;
    SHORTREAL gmfCellIncX, gmfCellIncY;
  } WinApi_GLYPHMETRICSFLOAT;

typedef
  INTEGER (__STDCALL *WinApi_GOBJENUMPROC)(void);

typedef
  INTEGER (__STDCALL *WinApi_GRAYSTRINGPROC)(void);

typedef
  void (__STDCALL *WinApi_HANDLER_FUNCTION)(INTEGER);

typedef
  INTEGER (__STDCALL *WinApi_HANDLER_ROUTINE)(INTEGER);

typedef
  struct WinApi_HARDWAREHOOKSTRUCT {
    INTEGER hwnd, message, wParam, lParam;
  } WinApi_HARDWAREHOOKSTRUCT;

typedef
  struct WinApi_HARDWAREINPUT {
    INTEGER uMsg;
    SHORTINT wParamL, wParamH;
  } WinApi_HARDWAREINPUT;

typedef
  struct WinApi_HELPINFO {
    INTEGER cbSize, iContextType, iCtrlId, hItemHandle, dwContextId;
    WinApi_POINT MousePos;
  } WinApi_HELPINFO;

typedef
  struct WinApi_HELPWININFOA {
    INTEGER wStructSize, x, y, dx, dy, wMax;
    CHAR rgchMember[2];
  } WinApi_HELPWININFOA;

typedef
  struct WinApi_HELPWININFOW {
    INTEGER wStructSize, x, y, dx, dy, wMax;
    LONGCHAR rgchMember[2];
  } WinApi_HELPWININFOW;

typedef
  struct WinApi_HIGHCONTRASTA {
    INTEGER cbSize;
    SET dwFlags;
    WinApi_PtrSTR lpszDefaultScheme;
  } WinApi_HIGHCONTRASTA;

typedef
  struct WinApi_HIGHCONTRASTW {
    INTEGER cbSize;
    SET dwFlags;
    WinApi_PtrWSTR lpszDefaultScheme;
  } WinApi_HIGHCONTRASTW;

typedef
  INTEGER (__STDCALL *WinApi_HOOKPROC)(void);

typedef
  struct WinApi_HSZPAIR {
    INTEGER hszSvc, hszTopic;
  } WinApi_HSZPAIR;

typedef
  struct WinApi_HW_PROFILE_INFOA {
    INTEGER dwDockInfo;
    CHAR szHwProfileGuid[39];
    CHAR szHwProfileName[80];
  } WinApi_HW_PROFILE_INFOA;

typedef
  struct WinApi_HW_PROFILE_INFOW {
    INTEGER dwDockInfo;
    LONGCHAR szHwProfileGuid[39];
    LONGCHAR szHwProfileName[80];
  } WinApi_HW_PROFILE_INFOW;

typedef
  INTEGER (__STDCALL *WinApi_ICMENUMPROCA)(WinApi_PtrSTR, INTEGER);

typedef
  INTEGER (__STDCALL *WinApi_ICMENUMPROCW)(WinApi_PtrWSTR, INTEGER);

typedef
  struct WinApi_ICONINFO {
    INTEGER fIcon, xHotspot, yHotspot, hbmMask, hbmColor;
  } WinApi_ICONINFO;

typedef
  struct WinApi_ICONMETRICSA {
    INTEGER cbSize, iHorzSpacing, iVertSpacing, iTitleWrap;
    WinApi_LOGFONTA lfFont;
  } WinApi_ICONMETRICSA;

typedef
  struct WinApi_ICONMETRICSW {
    INTEGER cbSize, iHorzSpacing, iVertSpacing, iTitleWrap;
    WinApi_LOGFONTW lfFont;
  } WinApi_ICONMETRICSW;

typedef
  struct WinApi_IMAGE_ARCHIVE_MEMBER_HEADER {
    CHAR Name[16];
    CHAR Date[12];
    CHAR UserID[6];
    CHAR GroupID[6];
    CHAR Mode[8];
    CHAR Size[10];
    CHAR EndHeader[2];
  } WinApi_IMAGE_ARCHIVE_MEMBER_HEADER;

typedef
  struct WinApi_SYSTEMTIME {
    SHORTINT wYear, wMonth, wDayOfWeek, wDay, wHour, wMinute, wSecond, wMilliseconds;
  } WinApi_SYSTEMTIME;

typedef
  struct WinApi_JOB_INFO_1A {
    INTEGER JobId;
    WinApi_PtrSTR pPrinterName, pMachineName, pUserName, pDocument, pDatatype, pStatus;
    SET Status;
    INTEGER Priority, Position, TotalPages, PagesPrinted;
    WinApi_SYSTEMTIME Submitted;
  } WinApi_JOB_INFO_1A;

typedef
  struct WinApi_JOB_INFO_1W {
    INTEGER JobId;
    WinApi_PtrWSTR pPrinterName, pMachineName, pUserName, pDocument, pDatatype, pStatus;
    SET Status;
    INTEGER Priority, Position, TotalPages, PagesPrinted;
    WinApi_SYSTEMTIME Submitted;
  } WinApi_JOB_INFO_1W;

typedef
  WinApi_DEVMODEA *WinApi_PtrDEVMODEA;

typedef
  struct WinApi_JOB_INFO_2A {
    INTEGER JobId;
    WinApi_PtrSTR pPrinterName, pMachineName, pUserName, pDocument, pNotifyName, pDatatype, pPrintProcessor, pParameters, pDriverName;
    WinApi_PtrDEVMODEA pDevMode;
    WinApi_PtrSTR pStatus;
    INTEGER pSecurityDescriptor;
    SET Status;
    INTEGER Priority, Position, StartTime, UntilTime, TotalPages, Size;
    WinApi_SYSTEMTIME Submitted;
    INTEGER Time, PagesPrinted;
  } WinApi_JOB_INFO_2A;

typedef
  WinApi_DEVMODEW *WinApi_PtrDEVMODEW;

typedef
  struct WinApi_JOB_INFO_2W {
    INTEGER JobId;
    WinApi_PtrWSTR pPrinterName, pMachineName, pUserName, pDocument, pNotifyName, pDatatype, pPrintProcessor, pParameters, pDriverName;
    WinApi_PtrDEVMODEW pDevMode;
    WinApi_PtrWSTR pStatus;
    INTEGER pSecurityDescriptor;
    SET Status;
    INTEGER Priority, Position, StartTime, UntilTime, TotalPages, Size;
    WinApi_SYSTEMTIME Submitted;
    INTEGER Time, PagesPrinted;
  } WinApi_JOB_INFO_2W;

typedef
  struct WinApi_KERNINGPAIR {
    SHORTINT wFirst, wSecond;
    INTEGER iKernAmount;
  } WinApi_KERNINGPAIR;

typedef
  struct WinApi_KEYBDINPUT {
    SHORTINT wVk, wScan;
    SET dwFlags;
    INTEGER time, dwExtraInfo;
  } WinApi_KEYBDINPUT;

typedef
  struct WinApi_LAYERPLANEDESCRIPTOR {
    SHORTINT nSize, nVersion;
    SET dwFlags;
    CHAR iPixelType, cColorBits, cRedBits, cRedShift, cGreenBits, cGreenShift, cBlueBits, cBlueShift, cAlphaBits, cAlphaShift, cAccumBits, cAccumRedBits, cAccumGreenBits, cAccumBlueBits, cAccumAlphaBits, cDepthBits, cStencilBits, cAuxBuffers, iLayerPlane, bReserved;
    INTEGER crTransparent;
  } WinApi_LAYERPLANEDESCRIPTOR;

typedef
  INTEGER (__STDCALL *WinApi_LINEDDAPROC)(void);

typedef
  struct WinApi_LOAD_DLL_DEBUG_INFO {
    INTEGER hFile, lpBaseOfDll, dwDebugInfoFileOffset, nDebugInfoSize, lpImageName;
    SHORTINT fUnicode;
  } WinApi_LOAD_DLL_DEBUG_INFO;

typedef
  struct WinApi_LOCALESIGNATURE {
    INTEGER lsUsb[4];
    INTEGER lsCsbDefault[2];
    INTEGER lsCsbSupported[2];
  } WinApi_LOCALESIGNATURE;

typedef
  INTEGER (__STDCALL *WinApi_LOCALE_ENUMPROCA)(void);

typedef
  INTEGER (__STDCALL *WinApi_LOCALE_ENUMPROCW)(void);

typedef
  struct WinApi_LOGCOLORSPACEA {
    INTEGER lcsSignature, lcsVersion, lcsSize, lcsCSType, lcsIntent;
    WinApi_CIEXYZTRIPLE lcsEndpoints;
    INTEGER lcsGammaRed, lcsGammaGreen, lcsGammaBlue;
    CHAR lcsFilename[260];
  } WinApi_LOGCOLORSPACEA;

typedef
  struct WinApi_LUID_AND_ATTRIBUTES {
    LONGINT Luid;
    SET Attributes;
  } WinApi_LUID_AND_ATTRIBUTES;

typedef
  WinApi_LUID_AND_ATTRIBUTES WinApi_LUID_AND_ATTRIBUTES_ARRAY[1];

typedef
  struct WinApi_MAT2 {
    WinApi_FIXED eM11, eM12, eM21, eM22;
  } WinApi_MAT2;

typedef
  struct WinApi_MDICREATESTRUCTA {
    WinApi_PtrSTR szClass, szTitle;
    INTEGER hOwner, x, y, cx, cy;
    SET style;
    INTEGER lParam;
  } WinApi_MDICREATESTRUCTA;

typedef
  struct WinApi_MDICREATESTRUCTW {
    WinApi_PtrWSTR szClass, szTitle;
    INTEGER hOwner, x, y, cx, cy;
    SET style;
    INTEGER lParam;
  } WinApi_MDICREATESTRUCTW;

typedef
  struct WinApi_MDINEXTMENU {
    INTEGER hmenuIn, hmenuNext, hwndNext;
  } WinApi_MDINEXTMENU;

typedef
  struct WinApi_MEASUREITEMSTRUCT {
    SET CtlType;
    INTEGER CtlID, itemID, itemWidth, itemHeight, itemData;
  } WinApi_MEASUREITEMSTRUCT;

typedef
  struct WinApi_MEMORYSTATUS {
    INTEGER dwLength, dwMemoryLoad, dwTotalPhys, dwAvailPhys, dwTotalPageFile, dwAvailPageFile, dwTotalVirtual, dwAvailVirtual;
  } WinApi_MEMORYSTATUS;

typedef
  struct WinApi_MEMORY_BASIC_INFORMATION {
    INTEGER BaseAddress, AllocationBase, AllocationProtect, RegionSize, State, Protect, Type;
  } WinApi_MEMORY_BASIC_INFORMATION;

typedef
  struct WinApi_MENUITEMINFOA {
    INTEGER cbSize;
    SET fMask, fType, fState;
    INTEGER wID, hSubMenu, hbmpChecked, hbmpUnchecked, dwItemData;
    WinApi_PtrSTR dwTypeData;
    INTEGER cch;
  } WinApi_MENUITEMINFOA;

typedef
  struct WinApi_MENUITEMINFOW {
    INTEGER cbSize;
    SET fMask, fType, fState;
    INTEGER wID, hSubMenu, hbmpChecked, hbmpUnchecked, dwItemData;
    WinApi_PtrWSTR dwTypeData;
    INTEGER cch;
  } WinApi_MENUITEMINFOW;

typedef
  struct WinApi_MENUITEMTEMPLATE {
    SHORTINT mtOption, mtID;
    LONGCHAR mtString[1];
  } WinApi_MENUITEMTEMPLATE;

typedef
  struct WinApi_MENUITEMTEMPLATEHEADER {
    SHORTINT versionNumber, offset;
  } WinApi_MENUITEMTEMPLATEHEADER;

typedef
  struct WinApi_MENUTEMPLATE {
    char _prvt0[1];
  } WinApi_MENUTEMPLATE;

typedef
  struct WinApi_MENUTEMPLATEA {
    char _prvt0[1];
  } WinApi_MENUTEMPLATEA;

typedef
  struct WinApi_MENUTEMPLATEW {
    char _prvt0[1];
  } WinApi_MENUTEMPLATEW;

typedef
  struct WinApi_MENU_EVENT_RECORD {
    INTEGER dwCommandId;
  } WinApi_MENU_EVENT_RECORD;

typedef
  struct WinApi_MESSAGE_RESOURCE_BLOCK {
    INTEGER LowId, HighId, OffsetToEntries;
  } WinApi_MESSAGE_RESOURCE_BLOCK;

typedef
  struct WinApi_MESSAGE_RESOURCE_DATA {
    INTEGER NumberOfBlocks;
    WinApi_MESSAGE_RESOURCE_BLOCK Blocks[1];
  } WinApi_MESSAGE_RESOURCE_DATA;

typedef
  struct WinApi_MESSAGE_RESOURCE_ENTRY {
    SHORTINT Length, Flags;
    CHAR Text[1];
  } WinApi_MESSAGE_RESOURCE_ENTRY;

typedef
  struct WinApi_METAFILEPICT {
    INTEGER mm, xExt, yExt, hMF;
  } WinApi_METAFILEPICT;

typedef
  struct WinApi_METARECORD {
    INTEGER rdSize;
    SHORTINT rdFunction;
    SHORTINT rdParm[1];
  } WinApi_METARECORD;

typedef
  INTEGER (__STDCALL *WinApi_MFENUMPROC)(INTEGER, WinApi_HANDLETABLE*, WinApi_METARECORD*, INTEGER, INTEGER);

typedef
  struct WinApi_MINIMIZEDMETRICS {
    INTEGER cbSize, iWidth, iHorzGap, iVertGap, iArrange;
  } WinApi_MINIMIZEDMETRICS;

typedef
  struct WinApi_MINMAXINFO {
    WinApi_POINT ptReserved, ptMaxSize, ptMaxPosition, ptMinTrackSize, ptMaxTrackSize;
  } WinApi_MINMAXINFO;

typedef
  struct WinApi_MODEMDEVCAPS {
    INTEGER dwActualSize, dwRequiredSize, dwDevSpecificOffset, dwDevSpecificSize, dwModemProviderVersion, dwModemManufacturerOffset, dwModemManufacturerSize, dwModemModelOffset, dwModemModelSize, dwModemVersionOffset, dwModemVersionSize, dwDialOptions, dwCallSetupFailTimer, dwInactivityTimeout;
    SET dwSpeakerVolume, dwSpeakerMode, dwModemOptions;
    INTEGER dwMaxDTERate, dwMaxDCERate;
    CHAR abVariablePortion[1];
  } WinApi_MODEMDEVCAPS;

typedef
  struct WinApi_MODEMSETTINGS {
    INTEGER dwActualSize, dwRequiredSize, dwDevSpecificOffset, dwDevSpecificSize, dwCallSetupFailTimer, dwInactivityTimeout;
    SET dwSpeakerVolume, dwSpeakerMode;
    INTEGER dwPreferredModemOptions, dwNegotiatedModemOptions, dwNegotiatedDCERate;
    CHAR abVariablePortion[1];
  } WinApi_MODEMSETTINGS;

typedef
  struct WinApi_MONCBSTRUCT {
    INTEGER cb, dwTime, hTask, dwRet, wType, wFmt, hConv, hsz1, hsz2, hData, dwData1, dwData2;
    WinApi_CONVCONTEXT cc;
    INTEGER cbData;
    INTEGER Data[8];
  } WinApi_MONCBSTRUCT;

typedef
  struct WinApi_MONCONVSTRUCT {
    INTEGER cb, fConnect, dwTime, hTask, hszSvc, hszTopic, hConvClient, hConvServer;
  } WinApi_MONCONVSTRUCT;

typedef
  struct WinApi_MONERRSTRUCT {
    INTEGER cb, wLastError, dwTime, hTask;
  } WinApi_MONERRSTRUCT;

typedef
  struct WinApi_MONHSZSTRUCTA {
    INTEGER cb, fsAction, dwTime, hsz, hTask;
    CHAR str[1];
  } WinApi_MONHSZSTRUCTA;

typedef
  struct WinApi_MONHSZSTRUCTW {
    INTEGER cb, fsAction, dwTime, hsz, hTask;
    LONGCHAR str[1];
  } WinApi_MONHSZSTRUCTW;

typedef
  struct WinApi_MONITOR_INFO_1A {
    WinApi_PtrSTR pName;
  } WinApi_MONITOR_INFO_1A;

typedef
  struct WinApi_MONITOR_INFO_1W {
    WinApi_PtrWSTR pName;
  } WinApi_MONITOR_INFO_1W;

typedef
  struct WinApi_MONITOR_INFO_2A {
    WinApi_PtrSTR pName, pEnvironment, pDLLName;
  } WinApi_MONITOR_INFO_2A;

typedef
  struct WinApi_MONITOR_INFO_2W {
    WinApi_PtrWSTR pName, pEnvironment, pDLLName;
  } WinApi_MONITOR_INFO_2W;

typedef
  struct WinApi_MONLINKSTRUCT {
    INTEGER cb, dwTime, hTask, fEstablished, fNoData, hszSvc, hszTopic, hszItem, wFmt, fServer, hConvServer, hConvClient;
  } WinApi_MONLINKSTRUCT;

typedef
  struct WinApi_MONMSGSTRUCT {
    INTEGER cb, hwndTo, dwTime, hTask, wMsg, wParam, lParam;
    WinApi_DDEML_MSG_HOOK_DATA dmhd;
  } WinApi_MONMSGSTRUCT;

typedef
  struct WinApi_MOUSEHOOKSTRUCT {
    WinApi_POINT pt;
    INTEGER hwnd, wHitTestCode, dwExtraInfo;
  } WinApi_MOUSEHOOKSTRUCT;

typedef
  struct WinApi_MOUSEINPUT {
    INTEGER dx, dy, mouseData;
    SET dwFlags;
    INTEGER time, dwExtraInfo;
  } WinApi_MOUSEINPUT;

typedef
  struct WinApi_MOUSEKEYS {
    INTEGER cbSize;
    SET dwFlags;
    INTEGER iMaxSpeed, iTimeToMaxSpeed, iCtrlSpeed, dwReserved1, dwReserved2;
  } WinApi_MOUSEKEYS;

typedef
  struct WinApi_MOUSE_EVENT_RECORD {
    WinApi_COORD dwMousePosition;
    SET dwButtonState, dwControlKeyState, dwEventFlags;
  } WinApi_MOUSE_EVENT_RECORD;

typedef
  struct WinApi_MSG {
    INTEGER hwnd, message, wParam, lParam, time;
    WinApi_POINT pt;
  } WinApi_MSG;

typedef
  void (__STDCALL *WinApi_MSGBOXCALLBACK)(WinApi_HELPINFO*);

typedef
  struct WinApi_MSGBOXPARAMSA {
    INTEGER cbSize, hwndOwner, hInstance;
    WinApi_PtrSTR lpszText, lpszCaption;
    SET dwStyle;
    WinApi_PtrSTR lpszIcon;
    INTEGER dwContextHelpId;
    WinApi_MSGBOXCALLBACK lpfnMsgBoxCallback;
    INTEGER dwLanguageId;
  } WinApi_MSGBOXPARAMSA;

typedef
  struct WinApi_MSGBOXPARAMSW {
    INTEGER cbSize, hwndOwner, hInstance;
    WinApi_PtrWSTR lpszText, lpszCaption;
    SET dwStyle;
    WinApi_PtrWSTR lpszIcon;
    INTEGER dwContextHelpId;
    WinApi_MSGBOXCALLBACK lpfnMsgBoxCallback;
    INTEGER dwLanguageId;
  } WinApi_MSGBOXPARAMSW;

typedef
  struct WinApi_MULTIKEYHELPA {
    INTEGER mkSize;
    CHAR mkKeylist;
    CHAR szKeyphrase[1];
  } WinApi_MULTIKEYHELPA;

typedef
  struct WinApi_MULTIKEYHELPW {
    INTEGER mkSize;
    LONGCHAR mkKeylist;
    LONGCHAR szKeyphrase[1];
  } WinApi_MULTIKEYHELPW;

typedef
  INTEGER (__STDCALL *WinApi_NAMEENUMPROCA)(void);

typedef
  INTEGER (__STDCALL *WinApi_NAMEENUMPROCW)(void);

typedef
  struct WinApi_WINDOWPOS *WinApi_PtrWINDOWPOS;

typedef
  struct WinApi_NCCALCSIZE_PARAMS {
    WinApi_RECT rgrc[3];
    WinApi_PtrWINDOWPOS lppos;
  } WinApi_NCCALCSIZE_PARAMS;

typedef
  INTEGER (__STDCALL *WinApi_NEARPROC)(void);

typedef
  INTEGER (__STDCALL *WinApi_NEWFONTENUMPROC)(WinApi_ENUMLOGFONTA*, WinApi_NEWTEXTMETRICA*, INTEGER, INTEGER);

typedef
  INTEGER (__STDCALL *WinApi_NEWFONTENUMPROCA)(WinApi_ENUMLOGFONTA*, WinApi_NEWTEXTMETRICA*, INTEGER, INTEGER);

typedef
  INTEGER (__STDCALL *WinApi_NEWFONTENUMPROCW)(WinApi_ENUMLOGFONTW*, WinApi_NEWTEXTMETRICW*, INTEGER, INTEGER);

typedef
  struct WinApi_NMHDR {
    INTEGER hwndFrom, idFrom, code;
  } WinApi_NMHDR;

typedef
  struct WinApi_NONCLIENTMETRICSA {
    INTEGER cbSize, iBorderWidth, iScrollWidth, iScrollHeight, iCaptionWidth, iCaptionHeight;
    WinApi_LOGFONTA lfCaptionFont;
    INTEGER iSmCaptionWidth, iSmCaptionHeight;
    WinApi_LOGFONTA lfSmCaptionFont;
    INTEGER iMenuWidth, iMenuHeight;
    WinApi_LOGFONTA lfMenuFont, lfStatusFont, lfMessageFont;
  } WinApi_NONCLIENTMETRICSA;

typedef
  struct WinApi_NONCLIENTMETRICSW {
    INTEGER cbSize, iBorderWidth, iScrollWidth, iScrollHeight, iCaptionWidth, iCaptionHeight;
    WinApi_LOGFONTW lfCaptionFont;
    INTEGER iSmCaptionWidth, iSmCaptionHeight;
    WinApi_LOGFONTW lfSmCaptionFont;
    INTEGER iMenuWidth, iMenuHeight;
    WinApi_LOGFONTW lfMenuFont, lfStatusFont, lfMessageFont;
  } WinApi_NONCLIENTMETRICSW;

typedef
  struct WinApi_NUMBERFMTA {
    INTEGER NumDigits, LeadingZero, Grouping;
    WinApi_PtrSTR lpDecimalSep, lpThousandSep;
    INTEGER NegativeOrder;
  } WinApi_NUMBERFMTA;

typedef
  struct WinApi_NUMBERFMTW {
    INTEGER NumDigits, LeadingZero, Grouping;
    WinApi_PtrWSTR lpDecimalSep, lpThousandSep;
    INTEGER NegativeOrder;
  } WinApi_NUMBERFMTW;

typedef
  struct WinApi_OFSTRUCT {
    CHAR cBytes, fFixedDisk;
    SHORTINT nErrCode, Reserved1, Reserved2;
    CHAR szPathName[128];
  } WinApi_OFSTRUCT;

typedef
  INTEGER (__STDCALL *WinApi_OLDFONTENUMPROC)(void);

typedef
  struct WinApi_OSVERSIONINFOA {
    INTEGER dwOSVersionInfoSize, dwMajorVersion, dwMinorVersion, dwBuildNumber, dwPlatformId;
    CHAR szCSDVersion[128];
  } WinApi_OSVERSIONINFOA;

typedef
  struct WinApi_OSVERSIONINFOW {
    INTEGER dwOSVersionInfoSize, dwMajorVersion, dwMinorVersion, dwBuildNumber, dwPlatformId;
    LONGCHAR szCSDVersion[128];
  } WinApi_OSVERSIONINFOW;

typedef
  struct WinApi_OUTLINETEXTMETRICA {
    INTEGER otmSize;
    WinApi_TEXTMETRICA otmTextMetrics;
    CHAR otmFiller;
    WinApi_PANOSE otmPanoseNumber;
    INTEGER otmfsSelection, otmfsType, otmsCharSlopeRise, otmsCharSlopeRun, otmItalicAngle, otmEMSquare, otmAscent, otmDescent, otmLineGap, otmsCapEmHeight, otmsXHeight;
    WinApi_RECT otmrcFontBox;
    INTEGER otmMacAscent, otmMacDescent, otmMacLineGap, otmusMinimumPPEM;
    WinApi_POINT otmptSubscriptSize, otmptSubscriptOffset, otmptSuperscriptSize, otmptSuperscriptOffset;
    INTEGER otmsStrikeoutSize, otmsStrikeoutPosition, otmsUnderscoreSize, otmsUnderscorePosition;
    WinApi_PtrSTR otmpFamilyName, otmpFaceName, otmpStyleName, otmpFullName;
  } WinApi_OUTLINETEXTMETRICA;

typedef
  struct WinApi_OUTLINETEXTMETRICW {
    INTEGER otmSize;
    WinApi_TEXTMETRICW otmTextMetrics;
    CHAR otmFiller;
    WinApi_PANOSE otmPanoseNumber;
    INTEGER otmfsSelection, otmfsType, otmsCharSlopeRise, otmsCharSlopeRun, otmItalicAngle, otmEMSquare, otmAscent, otmDescent, otmLineGap, otmsCapEmHeight, otmsXHeight;
    WinApi_RECT otmrcFontBox;
    INTEGER otmMacAscent, otmMacDescent, otmMacLineGap, otmusMinimumPPEM;
    WinApi_POINT otmptSubscriptSize, otmptSubscriptOffset, otmptSuperscriptSize, otmptSuperscriptOffset;
    INTEGER otmsStrikeoutSize, otmsStrikeoutPosition, otmsUnderscoreSize, otmsUnderscorePosition;
    WinApi_PtrSTR otmpFamilyName, otmpFaceName, otmpStyleName, otmpFullName;
  } WinApi_OUTLINETEXTMETRICW;

typedef
  struct WinApi_OUTPUT_DEBUG_STRING_INFO {
    WinApi_PtrSTR lpDebugStringData;
    SHORTINT fUnicode, nDebugStringLength;
  } WinApi_OUTPUT_DEBUG_STRING_INFO;

typedef
  struct WinApi_OVERLAPPED {
    INTEGER Internal, InternalHigh, Offset, OffsetHigh, hEvent;
  } WinApi_OVERLAPPED;

typedef
  void (__STDCALL *WinApi_OVERLAPPED_COMPLETION_ROUTINE)(INTEGER, INTEGER, WinApi_OVERLAPPED*);

typedef
  struct WinApi_PAINTSTRUCT {
    INTEGER hdc, fErase;
    WinApi_RECT rcPaint;
    INTEGER fRestore, fIncUpdate;
    CHAR rgbReserved[32];
  } WinApi_PAINTSTRUCT;

typedef
  struct WinApi_PELARRAY {
    INTEGER paXCount, paYCount, paXExt, paYExt;
    CHAR paRGBs;
  } WinApi_PELARRAY;

typedef
  struct WinApi_POINTFX {
    WinApi_FIXED x, y;
  } WinApi_POINTFX;

typedef
  struct WinApi_POLYTEXTA {
    INTEGER x, y, n;
    WinApi_PtrSTR lpstr;
    SET uiFlags;
    WinApi_RECT rcl;
    INTEGER *pdx;
  } WinApi_POLYTEXTA;

typedef
  struct WinApi_POLYTEXTW {
    INTEGER x, y, n;
    WinApi_PtrWSTR lpstr;
    SET uiFlags;
    WinApi_RECT rcl;
    INTEGER *pdx;
  } WinApi_POLYTEXTW;

typedef
  struct WinApi_PORT_INFO_1A {
    WinApi_PtrSTR pName;
  } WinApi_PORT_INFO_1A;

typedef
  struct WinApi_PORT_INFO_1W {
    WinApi_PtrWSTR pName;
  } WinApi_PORT_INFO_1W;

typedef
  struct WinApi_PORT_INFO_2A {
    WinApi_PtrSTR pPortName, pMonitorName, pDescription;
    INTEGER fPortType, Reserved;
  } WinApi_PORT_INFO_2A;

typedef
  struct WinApi_PORT_INFO_2W {
    WinApi_PtrWSTR pPortName, pMonitorName, pDescription;
    INTEGER fPortType, Reserved;
  } WinApi_PORT_INFO_2W;

typedef
  struct WinApi_PRINTER_DEFAULTSA {
    WinApi_PtrSTR pDatatype;
    WinApi_PtrDEVMODEA pDevMode;
    SET DesiredAccess;
  } WinApi_PRINTER_DEFAULTSA;

typedef
  struct WinApi_PRINTER_DEFAULTSW {
    WinApi_PtrWSTR pDatatype;
    WinApi_PtrDEVMODEW pDevMode;
    SET DesiredAccess;
  } WinApi_PRINTER_DEFAULTSW;

typedef
  struct WinApi_PRINTER_INFO_1A {
    SET Flags;
    WinApi_PtrSTR pDescription, pName, pComment;
  } WinApi_PRINTER_INFO_1A;

typedef
  struct WinApi_PRINTER_INFO_1W {
    SET Flags;
    WinApi_PtrWSTR pDescription, pName, pComment;
  } WinApi_PRINTER_INFO_1W;

typedef
  struct WinApi_PRINTER_INFO_2A {
    WinApi_PtrSTR pServerName, pPrinterName, pShareName, pPortName, pDriverName, pComment, pLocation;
    WinApi_PtrDEVMODEA pDevMode;
    WinApi_PtrSTR pSepFile, pPrintProcessor, pDatatype, pParameters;
    INTEGER pSecurityDescriptor;
    SET Attributes;
    INTEGER Priority, DefaultPriority, StartTime, UntilTime;
    SET Status;
    INTEGER cJobs, AveragePPM;
  } WinApi_PRINTER_INFO_2A;

typedef
  struct WinApi_PRINTER_INFO_2W {
    WinApi_PtrWSTR pServerName, pPrinterName, pShareName, pPortName, pDriverName, pComment, pLocation;
    WinApi_PtrDEVMODEW pDevMode;
    WinApi_PtrWSTR pSepFile, pPrintProcessor, pDatatype, pParameters;
    INTEGER pSecurityDescriptor;
    SET Attributes;
    INTEGER Priority, DefaultPriority, StartTime, UntilTime;
    SET Status;
    INTEGER cJobs, AveragePPM;
  } WinApi_PRINTER_INFO_2W;

typedef
  struct WinApi_PRINTER_INFO_3 {
    INTEGER pSecurityDescriptor;
  } WinApi_PRINTER_INFO_3;

typedef
  struct WinApi_PRINTER_INFO_4A {
    WinApi_PtrSTR pPrinterName, pServerName;
    SET Attributes;
  } WinApi_PRINTER_INFO_4A;

typedef
  struct WinApi_PRINTER_INFO_4W {
    WinApi_PtrWSTR pPrinterName, pServerName;
    SET Attributes;
  } WinApi_PRINTER_INFO_4W;

typedef
  struct WinApi_PRINTER_INFO_5A {
    WinApi_PtrSTR pPrinterName, pPortName;
    SET Attributes;
    INTEGER DeviceNotSelectedTimeout, TransmissionRetryTimeout;
  } WinApi_PRINTER_INFO_5A;

typedef
  struct WinApi_PRINTER_INFO_5W {
    WinApi_PtrWSTR pPrinterName, pPortName;
    SET Attributes;
    INTEGER DeviceNotSelectedTimeout, TransmissionRetryTimeout;
  } WinApi_PRINTER_INFO_5W;

typedef
  struct WinApi_PRINTER_INFO_6 {
    SET dwStatus;
  } WinApi_PRINTER_INFO_6;

typedef
  struct WinApi_PRINTER_NOTIFY_OPTIONS_TYPE *WinApi_PtrPRINTER_NOTIFY_OPTIONS_TYPE;

typedef
  struct WinApi_PRINTER_NOTIFY_OPTIONS {
    INTEGER Version;
    SET Flags;
    INTEGER Count;
    WinApi_PtrPRINTER_NOTIFY_OPTIONS_TYPE pTypes;
  } WinApi_PRINTER_NOTIFY_OPTIONS;

typedef
  struct WinApi_PRINTER_NOTIFY_OPTIONS_TYPE {
    SHORTINT Type, Reserved0;
    INTEGER Reserved1, Reserved2, Count;
    SHORTINT *pFields;
  } WinApi_PRINTER_NOTIFY_OPTIONS_TYPE;

typedef
  struct WinApi_PRINTPROCESSOR_INFO_1A {
    WinApi_PtrSTR pName;
  } WinApi_PRINTPROCESSOR_INFO_1A;

typedef
  struct WinApi_PRINTPROCESSOR_INFO_1W {
    WinApi_PtrWSTR pName;
  } WinApi_PRINTPROCESSOR_INFO_1W;

typedef
  struct WinApi_PRIVILEGE_SET {
    INTEGER PrivilegeCount, Control;
    WinApi_LUID_AND_ATTRIBUTES Privilege[1];
  } WinApi_PRIVILEGE_SET;

typedef
  struct WinApi_PROCESS_INFORMATION {
    INTEGER hProcess, hThread, dwProcessId, dwThreadId;
  } WinApi_PROCESS_INFORMATION;

typedef
  INTEGER (__STDCALL *WinApi_PROGRESS_ROUTINE)(LONGINT, LONGINT, LONGINT, LONGINT, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER);

typedef
  struct WinApi_PROVIDOR_INFO_1A {
    WinApi_PtrSTR pName, pEnvironment, pDLLName;
  } WinApi_PROVIDOR_INFO_1A;

typedef
  struct WinApi_PROVIDOR_INFO_1W {
    WinApi_PtrWSTR pName, pEnvironment, pDLLName;
  } WinApi_PROVIDOR_INFO_1W;

typedef
  struct WinApi_PSHNOTIFY {
    WinApi_NMHDR hdr;
    INTEGER lParam;
  } WinApi_PSHNOTIFY;

typedef
  struct WinApi_PVALUEA {
    WinApi_PtrSTR pv_valuename;
    INTEGER pv_valuelen, pv_value_context, pv_type;
  } WinApi_PVALUEA;

typedef
  struct WinApi_PVALUEW {
    WinApi_PtrWSTR pv_valuename;
    INTEGER pv_valuelen, pv_value_context, pv_type;
  } WinApi_PVALUEW;

typedef
  WinApi_ABC *WinApi_PtrABC;

typedef
  WinApi_ABCFLOAT *WinApi_PtrABCFLOAT;

typedef
  WinApi_ACCEL *WinApi_PtrACCEL;

typedef
  WinApi_ACCESSTIMEOUT *WinApi_PtrACCESSTIMEOUT;

typedef
  WinApi_ACCESS_ALLOWED_ACE *WinApi_PtrACCESS_ALLOWED_ACE;

typedef
  WinApi_ACCESS_DENIED_ACE *WinApi_PtrACCESS_DENIED_ACE;

typedef
  WinApi_ACE_HEADER *WinApi_PtrACE_HEADER;

typedef
  WinApi_ACL *WinApi_PtrACL;

typedef
  WinApi_ACL_REVISION_INFORMATION *WinApi_PtrACL_REVISION_INFORMATION;

typedef
  WinApi_ACL_SIZE_INFORMATION *WinApi_PtrACL_SIZE_INFORMATION;

typedef
  WinApi_ADDJOB_INFO_1A *WinApi_PtrADDJOB_INFO_1A;

typedef
  WinApi_ADDJOB_INFO_1W *WinApi_PtrADDJOB_INFO_1W;

typedef
  WinApi_ANIMATIONINFO *WinApi_PtrANIMATIONINFO;

typedef
  WinApi_BITMAP *WinApi_PtrBITMAP;

typedef
  WinApi_BITMAPCOREHEADER *WinApi_PtrBITMAPCOREHEADER;

typedef
  WinApi_BITMAPCOREINFO *WinApi_PtrBITMAPCOREINFO;

typedef
  WinApi_BITMAPINFO *WinApi_PtrBITMAPINFO;

typedef
  WinApi_BITMAPINFOHEADER *WinApi_PtrBITMAPINFOHEADER;

typedef
  WinApi_BITMAPV4HEADER *WinApi_PtrBITMAPV4HEADER;

typedef
  WinApi_BROADCASTSYSMSG *WinApi_PtrBROADCASTSYSMSG;

typedef
  WinApi_CBTACTIVATESTRUCT *WinApi_PtrCBTACTIVATESTRUCT;

typedef
  WinApi_CBT_CREATEWNDA *WinApi_PtrCBT_CREATEWNDA;

typedef
  WinApi_CBT_CREATEWNDW *WinApi_PtrCBT_CREATEWNDW;

typedef
  WinApi_CHARSETINFO *WinApi_PtrCHARSETINFO;

typedef
  WinApi_CIEXYZ *WinApi_PtrCIEXYZ;

typedef
  WinApi_CIEXYZTRIPLE *WinApi_PtrCIEXYZTRIPLE;

typedef
  WinApi_CLIENTCREATESTRUCT *WinApi_PtrCLIENTCREATESTRUCT;

typedef
  WinApi_COLORADJUSTMENT *WinApi_PtrCOLORADJUSTMENT;

typedef
  WinApi_COMMCONFIG *WinApi_PtrCOMMCONFIG;

typedef
  WinApi_COMMPROP *WinApi_PtrCOMMPROP;

typedef
  WinApi_COMMTIMEOUTS *WinApi_PtrCOMMTIMEOUTS;

typedef
  WinApi_COMPAREITEMSTRUCT *WinApi_PtrCOMPAREITEMSTRUCT;

typedef
  WinApi_COMPOUND_ACCESS_ALLOWED_ACE *WinApi_PtrCOMPOUND_ACCESS_ALLOWED_ACE;

typedef
  WinApi_COMSTAT *WinApi_PtrCOMSTAT;

typedef
  WinApi_CONSOLE_CURSOR_INFO *WinApi_PtrCONSOLE_CURSOR_INFO;

typedef
  WinApi_CONSOLE_SCREEN_BUFFER_INFO *WinApi_PtrCONSOLE_SCREEN_BUFFER_INFO;

typedef
  WinApi_CONVCONTEXT *WinApi_PtrCONVCONTEXT;

typedef
  WinApi_CONVINFO *WinApi_PtrCONVINFO;

typedef
  WinApi_COORD *WinApi_PtrCOORD;

typedef
  WinApi_COPYDATASTRUCT *WinApi_PtrCOPYDATASTRUCT;

typedef
  WinApi_CPINFO *WinApi_PtrCPINFO;

typedef
  WinApi_CREATE_PROCESS_DEBUG_INFO *WinApi_PtrCREATE_PROCESS_DEBUG_INFO;

typedef
  WinApi_CREATE_THREAD_DEBUG_INFO *WinApi_PtrCREATE_THREAD_DEBUG_INFO;

typedef
  WinApi_CURRENCYFMTA *WinApi_PtrCURRENCYFMTA;

typedef
  WinApi_CURRENCYFMTW *WinApi_PtrCURRENCYFMTW;

typedef
  WinApi_CURSORSHAPE *WinApi_PtrCURSORSHAPE;

typedef
  WinApi_CWPRETSTRUCT *WinApi_PtrCWPRETSTRUCT;

typedef
  WinApi_CWPSTRUCT *WinApi_PtrCWPSTRUCT;

typedef
  WinApi_DATATYPES_INFO_1A *WinApi_PtrDATATYPES_INFO_1A;

typedef
  WinApi_DATATYPES_INFO_1W *WinApi_PtrDATATYPES_INFO_1W;

typedef
  WinApi_DCB *WinApi_PtrDCB;

typedef
  WinApi_DDEML_MSG_HOOK_DATA *WinApi_PtrDDEML_MSG_HOOK_DATA;

typedef
  WinApi_DEBUGHOOKINFO *WinApi_PtrDEBUGHOOKINFO;

typedef
  WinApi_DELETEITEMSTRUCT *WinApi_PtrDELETEITEMSTRUCT;

typedef
  WinApi_DIBSECTION *WinApi_PtrDIBSECTION;

typedef
  WinApi_DOCINFOA *WinApi_PtrDOCINFOA;

typedef
  WinApi_DOCINFOW *WinApi_PtrDOCINFOW;

typedef
  WinApi_DOC_INFO_1A *WinApi_PtrDOC_INFO_1A;

typedef
  WinApi_DOC_INFO_1W *WinApi_PtrDOC_INFO_1W;

typedef
  WinApi_DOC_INFO_2A *WinApi_PtrDOC_INFO_2A;

typedef
  WinApi_DOC_INFO_2W *WinApi_PtrDOC_INFO_2W;

typedef
  WinApi_DRAWITEMSTRUCT *WinApi_PtrDRAWITEMSTRUCT;

typedef
  WinApi_DRAWTEXTPARAMS *WinApi_PtrDRAWTEXTPARAMS;

typedef
  WinApi_DRIVER_INFO_1A *WinApi_PtrDRIVER_INFO_1A;

typedef
  WinApi_DRIVER_INFO_1W *WinApi_PtrDRIVER_INFO_1W;

typedef
  WinApi_DRIVER_INFO_2A *WinApi_PtrDRIVER_INFO_2A;

typedef
  WinApi_DRIVER_INFO_2W *WinApi_PtrDRIVER_INFO_2W;

typedef
  WinApi_DRIVER_INFO_3A *WinApi_PtrDRIVER_INFO_3A;

typedef
  WinApi_DRIVER_INFO_3W *WinApi_PtrDRIVER_INFO_3W;

typedef
  WinApi_DROPSTRUCT *WinApi_PtrDROPSTRUCT;

typedef
  WinApi_EMR *WinApi_PtrEMR;

typedef
  WinApi_EMRABORTPATH *WinApi_PtrEMRABORTPATH;

typedef
  WinApi_EMRANGLEARC *WinApi_PtrEMRANGLEARC;

typedef
  WinApi_EMRARC *WinApi_PtrEMRARC;

typedef
  WinApi_EMRBITBLT *WinApi_PtrEMRBITBLT;

typedef
  WinApi_EMRCREATEBRUSHINDIRECT *WinApi_PtrEMRCREATEBRUSHINDIRECT;

typedef
  WinApi_EMRCREATECOLORSPACE *WinApi_PtrEMRCREATECOLORSPACE;

typedef
  WinApi_EMRCREATEDIBPATTERNBRUSHPT *WinApi_PtrEMRCREATEDIBPATTERNBRUSHPT;

typedef
  WinApi_EMRCREATEMONOBRUSH *WinApi_PtrEMRCREATEMONOBRUSH;

typedef
  WinApi_EMRCREATEPALETTE *WinApi_PtrEMRCREATEPALETTE;

typedef
  WinApi_EMRCREATEPEN *WinApi_PtrEMRCREATEPEN;

typedef
  WinApi_EMRSELECTCOLORSPACE *WinApi_PtrEMRSELECTCOLORSPACE;

typedef
  WinApi_EMRSELECTOBJECT *WinApi_PtrEMRSELECTOBJECT;

typedef
  WinApi_EMRELLIPSE *WinApi_PtrEMRELLIPSE;

typedef
  WinApi_EMREOF *WinApi_PtrEMREOF;

typedef
  WinApi_EMREXCLUDECLIPRECT *WinApi_PtrEMREXCLUDECLIPRECT;

typedef
  WinApi_EMREXTCREATEFONTINDIRECTW *WinApi_PtrEMREXTCREATEFONTINDIRECTW;

typedef
  WinApi_EMREXTCREATEPEN *WinApi_PtrEMREXTCREATEPEN;

typedef
  WinApi_EMREXTFLOODFILL *WinApi_PtrEMREXTFLOODFILL;

typedef
  WinApi_EMREXTSELECTCLIPRGN *WinApi_PtrEMREXTSELECTCLIPRGN;

typedef
  WinApi_EMREXTTEXTOUTA *WinApi_PtrEMREXTTEXTOUTA;

typedef
  WinApi_EMRFILLPATH *WinApi_PtrEMRFILLPATH;

typedef
  WinApi_EMRFILLRGN *WinApi_PtrEMRFILLRGN;

typedef
  WinApi_EMRFORMAT *WinApi_PtrEMRFORMAT;

typedef
  WinApi_EMRFRAMERGN *WinApi_PtrEMRFRAMERGN;

typedef
  WinApi_EMRGDICOMMENT *WinApi_PtrEMRGDICOMMENT;

typedef
  WinApi_EMRGLSBOUNDEDRECORD *WinApi_PtrEMRGLSBOUNDEDRECORD;

typedef
  WinApi_EMRGLSRECORD *WinApi_PtrEMRGLSRECORD;

typedef
  WinApi_EMRINVERTRGN *WinApi_PtrEMRINVERTRGN;

typedef
  WinApi_EMRLINETO *WinApi_PtrEMRLINETO;

typedef
  WinApi_EMRMASKBLT *WinApi_PtrEMRMASKBLT;

typedef
  WinApi_EMRMODIFYWORLDTRANSFORM *WinApi_PtrEMRMODIFYWORLDTRANSFORM;

typedef
  WinApi_EMROFFSETCLIPRGN *WinApi_PtrEMROFFSETCLIPRGN;

typedef
  WinApi_EMRPIXELFORMAT *WinApi_PtrEMRPIXELFORMAT;

typedef
  WinApi_EMRPLGBLT *WinApi_PtrEMRPLGBLT;

typedef
  WinApi_EMRPOLYLINE *WinApi_PtrEMRPOLYLINE;

typedef
  WinApi_EMRPOLYLINE16 *WinApi_PtrEMRPOLYLINE16;

typedef
  WinApi_EMRPOLYDRAW *WinApi_PtrEMRPOLYDRAW;

typedef
  WinApi_EMRPOLYDRAW16 *WinApi_PtrEMRPOLYDRAW16;

typedef
  WinApi_EMRPOLYPOLYLINE *WinApi_PtrEMRPOLYPOLYLINE;

typedef
  WinApi_EMRPOLYPOLYLINE16 *WinApi_PtrEMRPOLYPOLYLINE16;

typedef
  WinApi_EMRPOLYTEXTOUTA *WinApi_PtrEMRPOLYTEXTOUTA;

typedef
  WinApi_EMRRESIZEPALETTE *WinApi_PtrEMRRESIZEPALETTE;

typedef
  WinApi_EMRRESTOREDC *WinApi_PtrEMRRESTOREDC;

typedef
  WinApi_EMRROUNDRECT *WinApi_PtrEMRROUNDRECT;

typedef
  WinApi_EMRSCALEVIEWPORTEXTEX *WinApi_PtrEMRSCALEVIEWPORTEXTEX;

typedef
  WinApi_EMRSELECTCLIPPATH *WinApi_PtrEMRSELECTCLIPPATH;

typedef
  WinApi_EMRSELECTPALETTE *WinApi_PtrEMRSELECTPALETTE;

typedef
  WinApi_EMRSETARCDIRECTION *WinApi_PtrEMRSETARCDIRECTION;

typedef
  WinApi_EMRSETBKCOLOR *WinApi_PtrEMRSETBKCOLOR;

typedef
  WinApi_EMRSETVIEWPORTORGEX *WinApi_PtrEMRSETVIEWPORTORGEX;

typedef
  WinApi_EMRSETCOLORADJUSTMENT *WinApi_PtrEMRSETCOLORADJUSTMENT;

typedef
  WinApi_EMRSETDIBITSTODEVICE *WinApi_PtrEMRSETDIBITSTODEVICE;

typedef
  WinApi_EMRSETMAPPERFLAGS *WinApi_PtrEMRSETMAPPERFLAGS;

typedef
  WinApi_EMRSETMITERLIMIT *WinApi_PtrEMRSETMITERLIMIT;

typedef
  WinApi_EMRSETPALETTEENTRIES *WinApi_PtrEMRSETPALETTEENTRIES;

typedef
  WinApi_EMRSETPIXELV *WinApi_PtrEMRSETPIXELV;

typedef
  WinApi_EMRSETVIEWPORTEXTEX *WinApi_PtrEMRSETVIEWPORTEXTEX;

typedef
  WinApi_EMRSETWORLDTRANSFORM *WinApi_PtrEMRSETWORLDTRANSFORM;

typedef
  WinApi_EMRSTRETCHBLT *WinApi_PtrEMRSTRETCHBLT;

typedef
  WinApi_EMRSTRETCHDIBITS *WinApi_PtrEMRSTRETCHDIBITS;

typedef
  WinApi_EMRTEXT *WinApi_PtrEMRTEXT;

typedef
  WinApi_ENHMETAHEADER *WinApi_PtrENHMETAHEADER;

typedef
  WinApi_ENHMETARECORD *WinApi_PtrENHMETARECORD;

typedef
  WinApi_ENUMLOGFONTA *WinApi_PtrENUMLOGFONTA;

typedef
  WinApi_ENUMLOGFONTEXA *WinApi_PtrENUMLOGFONTEXA;

typedef
  WinApi_ENUMLOGFONTEXW *WinApi_PtrENUMLOGFONTEXW;

typedef
  WinApi_ENUMLOGFONTW *WinApi_PtrENUMLOGFONTW;

typedef
  WinApi_ENUM_SERVICE_STATUSA *WinApi_PtrENUM_SERVICE_STATUSA;

typedef
  WinApi_ENUM_SERVICE_STATUSW *WinApi_PtrENUM_SERVICE_STATUSW;

typedef
  WinApi_EVENTLOGRECORD *WinApi_PtrEVENTLOGRECORD;

typedef
  WinApi_EVENTMSG *WinApi_PtrEVENTMSG;

typedef
  WinApi_EXCEPTION_DEBUG_INFO *WinApi_PtrEXCEPTION_DEBUG_INFO;

typedef
  WinApi_EXCEPTION_POINTERS *WinApi_PtrEXCEPTION_POINTERS;

typedef
  WinApi_EXIT_PROCESS_DEBUG_INFO *WinApi_PtrEXIT_PROCESS_DEBUG_INFO;

typedef
  WinApi_EXIT_THREAD_DEBUG_INFO *WinApi_PtrEXIT_THREAD_DEBUG_INFO;

typedef
  WinApi_EXTLOGFONTA *WinApi_PtrEXTLOGFONTA;

typedef
  WinApi_EXTLOGFONTW *WinApi_PtrEXTLOGFONTW;

typedef
  WinApi_EXTLOGPEN *WinApi_PtrEXTLOGPEN;

typedef
  WinApi_FILETIME *WinApi_PtrFILETIME;

typedef
  WinApi_FILE_NOTIFY_INFORMATION *WinApi_PtrFILE_NOTIFY_INFORMATION;

typedef
  WinApi_FILTERKEYS *WinApi_PtrFILTERKEYS;

typedef
  WinApi_FLOATING_SAVE_AREA *WinApi_PtrFLOATING_SAVE_AREA;

typedef
  WinApi_FOCUS_EVENT_RECORD *WinApi_PtrFOCUS_EVENT_RECORD;

typedef
  WinApi_FONTSIGNATURE *WinApi_PtrFONTSIGNATURE;

typedef
  WinApi_FORM_INFO_1A *WinApi_PtrFORM_INFO_1A;

typedef
  WinApi_FORM_INFO_1W *WinApi_PtrFORM_INFO_1W;

typedef
  WinApi_GCP_RESULTSA *WinApi_PtrGCP_RESULTSA;

typedef
  WinApi_GCP_RESULTSW *WinApi_PtrGCP_RESULTSW;

typedef
  WinApi_GENERIC_MAPPING *WinApi_PtrGENERIC_MAPPING;

typedef
  WinApi_GLYPHMETRICS *WinApi_PtrGLYPHMETRICS;

typedef
  WinApi_GLYPHMETRICSFLOAT *WinApi_PtrGLYPHMETRICSFLOAT;

typedef
  WinApi_HANDLETABLE *WinApi_PtrHANDLETABLE;

typedef
  WinApi_HARDWAREHOOKSTRUCT *WinApi_PtrHARDWAREHOOKSTRUCT;

typedef
  WinApi_HARDWAREINPUT *WinApi_PtrHARDWAREINPUT;

typedef
  WinApi_HELPINFO *WinApi_PtrHELPINFO;

typedef
  WinApi_HELPWININFOA *WinApi_PtrHELPWININFOA;

typedef
  WinApi_HELPWININFOW *WinApi_PtrHELPWININFOW;

typedef
  WinApi_HIGHCONTRASTA *WinApi_PtrHIGHCONTRASTA;

typedef
  WinApi_HIGHCONTRASTW *WinApi_PtrHIGHCONTRASTW;

typedef
  WinApi_HSZPAIR *WinApi_PtrHSZPAIR;

typedef
  WinApi_HW_PROFILE_INFOA *WinApi_PtrHW_PROFILE_INFOA;

typedef
  WinApi_HW_PROFILE_INFOW *WinApi_PtrHW_PROFILE_INFOW;

typedef
  WinApi_ICONINFO *WinApi_PtrICONINFO;

typedef
  WinApi_ICONMETRICSA *WinApi_PtrICONMETRICSA;

typedef
  WinApi_ICONMETRICSW *WinApi_PtrICONMETRICSW;

typedef
  WinApi_IMAGE_ARCHIVE_MEMBER_HEADER *WinApi_PtrIMAGE_ARCHIVE_MEMBER_HEADER;

typedef
  WinApi_JOB_INFO_1A *WinApi_PtrJOB_INFO_1A;

typedef
  WinApi_JOB_INFO_1W *WinApi_PtrJOB_INFO_1W;

typedef
  WinApi_JOB_INFO_2A *WinApi_PtrJOB_INFO_2A;

typedef
  WinApi_JOB_INFO_2W *WinApi_PtrJOB_INFO_2W;

typedef
  WinApi_KERNINGPAIR *WinApi_PtrKERNINGPAIR;

typedef
  WinApi_KEYBDINPUT *WinApi_PtrKEYBDINPUT;

typedef
  WinApi_LAYERPLANEDESCRIPTOR *WinApi_PtrLAYERPLANEDESCRIPTOR;

typedef
  WinApi_LOAD_DLL_DEBUG_INFO *WinApi_PtrLOAD_DLL_DEBUG_INFO;

typedef
  WinApi_LOCALESIGNATURE *WinApi_PtrLOCALESIGNATURE;

typedef
  WinApi_LOGBRUSH *WinApi_PtrLOGBRUSH;

typedef
  WinApi_LOGCOLORSPACEA *WinApi_PtrLOGCOLORSPACEA;

typedef
  WinApi_LOGCOLORSPACEW *WinApi_PtrLOGCOLORSPACEW;

typedef
  WinApi_LOGFONTA *WinApi_PtrLOGFONTA;

typedef
  WinApi_LOGFONTW *WinApi_PtrLOGFONTW;

typedef
  WinApi_LOGPALETTE *WinApi_PtrLOGPALETTE;

typedef
  WinApi_LOGPEN *WinApi_PtrLOGPEN;

typedef
  WinApi_LUID_AND_ATTRIBUTES *WinApi_PtrLUID_AND_ATTRIBUTES;

typedef
  WinApi_LUID_AND_ATTRIBUTES_ARRAY *WinApi_PtrLUID_AND_ATTRIBUTES_ARRAY;

typedef
  WinApi_MAT2 *WinApi_PtrMAT2;

typedef
  WinApi_MDICREATESTRUCTA *WinApi_PtrMDICREATESTRUCTA;

typedef
  WinApi_MDICREATESTRUCTW *WinApi_PtrMDICREATESTRUCTW;

typedef
  WinApi_MDINEXTMENU *WinApi_PtrMDINEXTMENU;

typedef
  WinApi_MEASUREITEMSTRUCT *WinApi_PtrMEASUREITEMSTRUCT;

typedef
  WinApi_MEMORYSTATUS *WinApi_PtrMEMORYSTATUS;

typedef
  WinApi_MEMORY_BASIC_INFORMATION *WinApi_PtrMEMORY_BASIC_INFORMATION;

typedef
  WinApi_MENUITEMINFOA *WinApi_PtrMENUITEMINFOA;

typedef
  WinApi_MENUITEMINFOW *WinApi_PtrMENUITEMINFOW;

typedef
  WinApi_MENUITEMTEMPLATE *WinApi_PtrMENUITEMTEMPLATE;

typedef
  WinApi_MENUITEMTEMPLATEHEADER *WinApi_PtrMENUITEMTEMPLATEHEADER;

typedef
  WinApi_MENUTEMPLATE *WinApi_PtrMENUTEMPLATE;

typedef
  WinApi_MENUTEMPLATEA *WinApi_PtrMENUTEMPLATEA;

typedef
  WinApi_MENUTEMPLATEW *WinApi_PtrMENUTEMPLATEW;

typedef
  WinApi_MENU_EVENT_RECORD *WinApi_PtrMENU_EVENT_RECORD;

typedef
  WinApi_MESSAGE_RESOURCE_BLOCK *WinApi_PtrMESSAGE_RESOURCE_BLOCK;

typedef
  WinApi_MESSAGE_RESOURCE_DATA *WinApi_PtrMESSAGE_RESOURCE_DATA;

typedef
  WinApi_MESSAGE_RESOURCE_ENTRY *WinApi_PtrMESSAGE_RESOURCE_ENTRY;

typedef
  WinApi_METAFILEPICT *WinApi_PtrMETAFILEPICT;

typedef
  WinApi_METARECORD *WinApi_PtrMETARECORD;

typedef
  WinApi_MINIMIZEDMETRICS *WinApi_PtrMINIMIZEDMETRICS;

typedef
  WinApi_MINMAXINFO *WinApi_PtrMINMAXINFO;

typedef
  WinApi_MODEMDEVCAPS *WinApi_PtrMODEMDEVCAPS;

typedef
  WinApi_MODEMSETTINGS *WinApi_PtrMODEMSETTINGS;

typedef
  WinApi_MONCBSTRUCT *WinApi_PtrMONCBSTRUCT;

typedef
  WinApi_MONCONVSTRUCT *WinApi_PtrMONCONVSTRUCT;

typedef
  WinApi_MONERRSTRUCT *WinApi_PtrMONERRSTRUCT;

typedef
  WinApi_MONHSZSTRUCTA *WinApi_PtrMONHSZSTRUCTA;

typedef
  WinApi_MONHSZSTRUCTW *WinApi_PtrMONHSZSTRUCTW;

typedef
  WinApi_MONITOR_INFO_1A *WinApi_PtrMONITOR_INFO_1A;

typedef
  WinApi_MONITOR_INFO_1W *WinApi_PtrMONITOR_INFO_1W;

typedef
  WinApi_MONITOR_INFO_2A *WinApi_PtrMONITOR_INFO_2A;

typedef
  WinApi_MONITOR_INFO_2W *WinApi_PtrMONITOR_INFO_2W;

typedef
  WinApi_MONLINKSTRUCT *WinApi_PtrMONLINKSTRUCT;

typedef
  WinApi_MONMSGSTRUCT *WinApi_PtrMONMSGSTRUCT;

typedef
  WinApi_MOUSEHOOKSTRUCT *WinApi_PtrMOUSEHOOKSTRUCT;

typedef
  WinApi_MOUSEINPUT *WinApi_PtrMOUSEINPUT;

typedef
  WinApi_MOUSEKEYS *WinApi_PtrMOUSEKEYS;

typedef
  WinApi_MOUSE_EVENT_RECORD *WinApi_PtrMOUSE_EVENT_RECORD;

typedef
  WinApi_MSG *WinApi_PtrMSG;

typedef
  WinApi_MSGBOXPARAMSA *WinApi_PtrMSGBOXPARAMSA;

typedef
  WinApi_MSGBOXPARAMSW *WinApi_PtrMSGBOXPARAMSW;

typedef
  WinApi_MULTIKEYHELPA *WinApi_PtrMULTIKEYHELPA;

typedef
  WinApi_MULTIKEYHELPW *WinApi_PtrMULTIKEYHELPW;

typedef
  WinApi_NCCALCSIZE_PARAMS *WinApi_PtrNCCALCSIZE_PARAMS;

typedef
  WinApi_NEWTEXTMETRICA *WinApi_PtrNEWTEXTMETRICA;

typedef
  WinApi_NEWTEXTMETRICW *WinApi_PtrNEWTEXTMETRICW;

typedef
  WinApi_NMHDR *WinApi_PtrNMHDR;

typedef
  WinApi_NONCLIENTMETRICSA *WinApi_PtrNONCLIENTMETRICSA;

typedef
  WinApi_NONCLIENTMETRICSW *WinApi_PtrNONCLIENTMETRICSW;

typedef
  WinApi_NUMBERFMTA *WinApi_PtrNUMBERFMTA;

typedef
  WinApi_NUMBERFMTW *WinApi_PtrNUMBERFMTW;

typedef
  WinApi_OFSTRUCT *WinApi_PtrOFSTRUCT;

typedef
  WinApi_OSVERSIONINFOA *WinApi_PtrOSVERSIONINFOA;

typedef
  WinApi_OSVERSIONINFOW *WinApi_PtrOSVERSIONINFOW;

typedef
  WinApi_OUTLINETEXTMETRICA *WinApi_PtrOUTLINETEXTMETRICA;

typedef
  WinApi_OUTLINETEXTMETRICW *WinApi_PtrOUTLINETEXTMETRICW;

typedef
  WinApi_OUTPUT_DEBUG_STRING_INFO *WinApi_PtrOUTPUT_DEBUG_STRING_INFO;

typedef
  WinApi_OVERLAPPED *WinApi_PtrOVERLAPPED;

typedef
  WinApi_PAINTSTRUCT *WinApi_PtrPAINTSTRUCT;

typedef
  WinApi_PALETTEENTRY *WinApi_PtrPALETTEENTRY;

typedef
  WinApi_PANOSE *WinApi_PtrPANOSE;

typedef
  WinApi_PELARRAY *WinApi_PtrPELARRAY;

typedef
  WinApi_PIXELFORMATDESCRIPTOR *WinApi_PtrPIXELFORMATDESCRIPTOR;

typedef
  WinApi_POINT *WinApi_PtrPOINT;

typedef
  WinApi_POINTFLOAT *WinApi_PtrPOINTFLOAT;

typedef
  WinApi_POINTFX *WinApi_PtrPOINTFX;

typedef
  WinApi_POINTS *WinApi_PtrPOINTS;

typedef
  WinApi_POLYTEXTA *WinApi_PtrPOLYTEXTA;

typedef
  WinApi_POLYTEXTW *WinApi_PtrPOLYTEXTW;

typedef
  WinApi_PORT_INFO_1A *WinApi_PtrPORT_INFO_1A;

typedef
  WinApi_PORT_INFO_1W *WinApi_PtrPORT_INFO_1W;

typedef
  WinApi_PORT_INFO_2A *WinApi_PtrPORT_INFO_2A;

typedef
  WinApi_PORT_INFO_2W *WinApi_PtrPORT_INFO_2W;

typedef
  WinApi_PRINTER_DEFAULTSA *WinApi_PtrPRINTER_DEFAULTSA;

typedef
  WinApi_PRINTER_DEFAULTSW *WinApi_PtrPRINTER_DEFAULTSW;

typedef
  WinApi_PRINTER_INFO_1A *WinApi_PtrPRINTER_INFO_1A;

typedef
  WinApi_PRINTER_INFO_1W *WinApi_PtrPRINTER_INFO_1W;

typedef
  WinApi_PRINTER_INFO_2A *WinApi_PtrPRINTER_INFO_2A;

typedef
  WinApi_PRINTER_INFO_2W *WinApi_PtrPRINTER_INFO_2W;

typedef
  WinApi_PRINTER_INFO_3 *WinApi_PtrPRINTER_INFO_3;

typedef
  WinApi_PRINTER_INFO_4A *WinApi_PtrPRINTER_INFO_4A;

typedef
  WinApi_PRINTER_INFO_4W *WinApi_PtrPRINTER_INFO_4W;

typedef
  WinApi_PRINTER_INFO_5A *WinApi_PtrPRINTER_INFO_5A;

typedef
  WinApi_PRINTER_INFO_5W *WinApi_PtrPRINTER_INFO_5W;

typedef
  WinApi_PRINTER_INFO_6 *WinApi_PtrPRINTER_INFO_6;

typedef
  WinApi_PRINTER_NOTIFY_OPTIONS *WinApi_PtrPRINTER_NOTIFY_OPTIONS;

typedef
  WinApi_PRINTPROCESSOR_INFO_1A *WinApi_PtrPRINTPROCESSOR_INFO_1A;

typedef
  WinApi_PRINTPROCESSOR_INFO_1W *WinApi_PtrPRINTPROCESSOR_INFO_1W;

typedef
  WinApi_PRIVILEGE_SET *WinApi_PtrPRIVILEGE_SET;

typedef
  WinApi_PROCESS_INFORMATION *WinApi_PtrPROCESS_INFORMATION;

typedef
  WinApi_PROVIDOR_INFO_1A *WinApi_PtrPROVIDOR_INFO_1A;

typedef
  WinApi_PROVIDOR_INFO_1W *WinApi_PtrPROVIDOR_INFO_1W;

typedef
  WinApi_PSHNOTIFY *WinApi_PtrPSHNOTIFY;

typedef
  WinApi_PVALUEA *WinApi_PtrPVALUEA;

typedef
  WinApi_PVALUEW *WinApi_PtrPVALUEW;

typedef
  struct WinApi_QUERY_SERVICE_CONFIGA *WinApi_PtrQUERY_SERVICE_CONFIGA;

typedef
  struct WinApi_QUERY_SERVICE_CONFIGW *WinApi_PtrQUERY_SERVICE_CONFIGW;

typedef
  struct WinApi_QUERY_SERVICE_LOCK_STATUSA *WinApi_PtrQUERY_SERVICE_LOCK_STATUSA;

typedef
  struct WinApi_QUERY_SERVICE_LOCK_STATUSW *WinApi_PtrQUERY_SERVICE_LOCK_STATUSW;

typedef
  struct WinApi_RASTERIZER_STATUS *WinApi_PtrRASTERIZER_STATUS;

typedef
  WinApi_RECT *WinApi_PtrRECT;

typedef
  struct WinApi_REG_PROVIDER *WinApi_PtrREG_PROVIDER;

typedef
  WinApi_RGBQUAD *WinApi_PtrRGBQUAD;

typedef
  struct WinApi_RGNDATA *WinApi_PtrRGNDATA;

typedef
  struct WinApi_RGNDATAHEADER *WinApi_PtrRGNDATAHEADER;

typedef
  struct WinApi_RIP_INFO *WinApi_PtrRIP_INFO;

typedef
  struct WinApi_SCROLLINFO *WinApi_PtrSCROLLINFO;

typedef
  struct WinApi_SECURITY_ATTRIBUTES *WinApi_PtrSECURITY_ATTRIBUTES;

typedef
  struct WinApi_SECURITY_DESCRIPTOR *WinApi_PtrSECURITY_DESCRIPTOR;

typedef
  WinApi_SECURITY_QUALITY_OF_SERVICE *WinApi_PtrSECURITY_QUALITY_OF_SERVICE;

typedef
  struct WinApi_SERIALKEYSA *WinApi_PtrSERIALKEYSA;

typedef
  struct WinApi_SERIALKEYSW *WinApi_PtrSERIALKEYSW;

typedef
  WinApi_SERVICE_STATUS *WinApi_PtrSERVICE_STATUS;

typedef
  struct WinApi_SERVICE_TABLE_ENTRYA *WinApi_PtrSERVICE_TABLE_ENTRYA;

typedef
  struct WinApi_SERVICE_TABLE_ENTRYW *WinApi_PtrSERVICE_TABLE_ENTRYW;

typedef
  struct WinApi_SE_IMPERSONATION_STATE *WinApi_PtrSE_IMPERSONATION_STATE;

typedef
  struct WinApi_SID *WinApi_PtrSID;

typedef
  struct WinApi_SID_AND_ATTRIBUTES *WinApi_PtrSID_AND_ATTRIBUTES;

typedef
  struct WinApi_SID_AND_ATTRIBUTES {
    INTEGER Sid;
    SET Attributes;
  } WinApi_SID_AND_ATTRIBUTES;

typedef
  WinApi_SID_AND_ATTRIBUTES WinApi_SID_AND_ATTRIBUTES_ARRAY[1];

typedef
  WinApi_SID_AND_ATTRIBUTES_ARRAY *WinApi_PtrSID_AND_ATTRIBUTES_ARRAY;

typedef
  struct WinApi_SID_IDENTIFIER_AUTHORITY *WinApi_PtrSID_IDENTIFIER_AUTHORITY;

typedef
  struct WinApi_SINGLE_LIST_ENTRY *WinApi_PtrSINGLE_LIST_ENTRY;

typedef
  WinApi_SIZE *WinApi_PtrSIZE;

typedef
  WinApi_SMALL_RECT *WinApi_PtrSMALL_RECT;

typedef
  struct WinApi_SOUNDSENTRYA *WinApi_PtrSOUNDSENTRYA;

typedef
  struct WinApi_SOUNDSENTRYW *WinApi_PtrSOUNDSENTRYW;

typedef
  struct WinApi_STARTUPINFOA *WinApi_PtrSTARTUPINFOA;

typedef
  struct WinApi_STARTUPINFOW *WinApi_PtrSTARTUPINFOW;

typedef
  struct WinApi_STICKYKEYS *WinApi_PtrSTICKYKEYS;

typedef
  struct WinApi_STYLESTRUCT *WinApi_PtrSTYLESTRUCT;

typedef
  WinApi_SYSTEMTIME *WinApi_PtrSYSTEMTIME;

typedef
  struct WinApi_SYSTEM_ALARM_ACE *WinApi_PtrSYSTEM_ALARM_ACE;

typedef
  struct WinApi_SYSTEM_AUDIT_ACE *WinApi_PtrSYSTEM_AUDIT_ACE;

typedef
  struct WinApi_SYSTEM_POWER_STATUS *WinApi_PtrSYSTEM_POWER_STATUS;

typedef
  struct WinApi_TAPE_CREATE_PARTITION *WinApi_PtrTAPE_CREATE_PARTITION;

typedef
  struct WinApi_TAPE_ERASE *WinApi_PtrTAPE_ERASE;

typedef
  struct WinApi_TAPE_GET_DRIVE_PARAMETERS *WinApi_PtrTAPE_GET_DRIVE_PARAMETERS;

typedef
  struct WinApi_TAPE_PREPARE *WinApi_PtrTAPE_PREPARE;

typedef
  struct WinApi_TAPE_SET_DRIVE_PARAMETERS *WinApi_PtrTAPE_SET_DRIVE_PARAMETERS;

typedef
  struct WinApi_TAPE_SET_MEDIA_PARAMETERS *WinApi_PtrTAPE_SET_MEDIA_PARAMETERS;

typedef
  WinApi_TEXTMETRICA *WinApi_PtrTEXTMETRICA;

typedef
  WinApi_TEXTMETRICW *WinApi_PtrTEXTMETRICW;

typedef
  struct WinApi_TIME_ZONE_INFORMATION *WinApi_PtrTIME_ZONE_INFORMATION;

typedef
  struct WinApi_TOGGLEKEYS *WinApi_PtrTOGGLEKEYS;

typedef
  struct WinApi_TOKEN_DEFAULT_DACL *WinApi_PtrTOKEN_DEFAULT_DACL;

typedef
  struct WinApi_TOKEN_GROUPS *WinApi_PtrTOKEN_GROUPS;

typedef
  struct WinApi_TOKEN_OWNER *WinApi_PtrTOKEN_OWNER;

typedef
  struct WinApi_TOKEN_PRIMARY_GROUP *WinApi_PtrTOKEN_PRIMARY_GROUP;

typedef
  struct WinApi_TOKEN_PRIVILEGES *WinApi_PtrTOKEN_PRIVILEGES;

typedef
  struct WinApi_TOKEN_USER *WinApi_PtrTOKEN_USER;

typedef
  struct WinApi_TPMPARAMS *WinApi_PtrTPMPARAMS;

typedef
  struct WinApi_TTPOLYCURVE *WinApi_PtrTTPOLYCURVE;

typedef
  struct WinApi_TTPOLYGONHEADER *WinApi_PtrTTPOLYGONHEADER;

typedef
  struct WinApi_UNLOAD_DLL_DEBUG_INFO *WinApi_PtrUNLOAD_DLL_DEBUG_INFO;

typedef
  struct WinApi_USEROBJECTFLAGS *WinApi_PtrUSEROBJECTFLAGS;

typedef
  struct WinApi_VALENTA *WinApi_PtrVALENTA;

typedef
  struct WinApi_VALENTW *WinApi_PtrVALENTW;

typedef
  struct WinApi_WINDOWPLACEMENT *WinApi_PtrWINDOWPLACEMENT;

typedef
  struct WinApi_WINDOW_BUFFER_SIZE_RECORD *WinApi_PtrWINDOW_BUFFER_SIZE_RECORD;

typedef
  struct WinApi_WIN_CERTIFICATE *WinApi_PtrWIN_CERTIFICATE;

typedef
  struct WinApi_WIN_SPUB_TRUSTEDPUB_DATA *WinApi_PtrWIN_SPUB_TRUSTEDPUB_DATA;

typedef
  struct WinApi_WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT *WinApi_PtrWIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJE;

typedef
  struct WinApi_WIN_TRUST_ACTDATA_SUBJECT_ONLY *WinApi_PtrWIN_TRUST_ACTDATA_SUBJECT_ONLY;

typedef
  struct WinApi_WIN_TRUST_SUBJECT_FILE *WinApi_PtrWIN_TRUST_SUBJECT_FILE;

typedef
  struct WinApi_WNDCLASSA *WinApi_PtrWNDCLASSA;

typedef
  struct WinApi_WNDCLASSEXA *WinApi_PtrWNDCLASSEXA;

typedef
  struct WinApi_WNDCLASSEXW *WinApi_PtrWNDCLASSEXW;

typedef
  struct WinApi_WNDCLASSW *WinApi_PtrWNDCLASSW;

typedef
  WinApi_XFORM *WinApi_PtrXFORM;

typedef
  struct WinApi__EXCEPTION_REGISTRATION_RECORD *WinApi_Ptr_EXCEPTION_REGISTRATION_RECORD;

typedef
  struct WinApi_val_context *WinApi_Ptrval_context;

typedef
  struct WinApi_val_context {
    INTEGER valuelen, value_context, val_buff_ptr;
  } WinApi_val_context;

typedef
  INTEGER (*WinApi_QUERYHANDLER)(INTEGER, WinApi_val_context*, INTEGER, INTEGER, INTEGER*, INTEGER);

typedef
  struct WinApi_QUERY_SERVICE_CONFIGA {
    SET dwServiceType;
    INTEGER dwStartType, dwErrorControl;
    WinApi_PtrSTR lpBinaryPathName, lpLoadOrderGroup;
    INTEGER dwTagId;
    WinApi_PtrSTR lpDependencies, lpServiceStartName, lpDisplayName;
  } WinApi_QUERY_SERVICE_CONFIGA;

typedef
  struct WinApi_QUERY_SERVICE_CONFIGW {
    SET dwServiceType;
    INTEGER dwStartType, dwErrorControl;
    WinApi_PtrWSTR lpBinaryPathName, lpLoadOrderGroup;
    INTEGER dwTagId;
    WinApi_PtrWSTR lpDependencies, lpServiceStartName, lpDisplayName;
  } WinApi_QUERY_SERVICE_CONFIGW;

typedef
  struct WinApi_QUERY_SERVICE_LOCK_STATUSA {
    INTEGER fIsLocked;
    WinApi_PtrSTR lpLockOwner;
    INTEGER dwLockDuration;
  } WinApi_QUERY_SERVICE_LOCK_STATUSA;

typedef
  struct WinApi_QUERY_SERVICE_LOCK_STATUSW {
    INTEGER fIsLocked;
    WinApi_PtrWSTR lpLockOwner;
    INTEGER dwLockDuration;
  } WinApi_QUERY_SERVICE_LOCK_STATUSW;

typedef
  struct WinApi_RASTERIZER_STATUS {
    SHORTINT nSize, wFlags, nLanguageID;
  } WinApi_RASTERIZER_STATUS;

typedef
  struct WinApi_REG_PROVIDER {
    WinApi_QUERYHANDLER pi_R0_1val, pi_R0_allvals, pi_R3_1val, pi_R3_allvals;
    INTEGER pi_flags, pi_key_context;
  } WinApi_REG_PROVIDER;

typedef
  struct WinApi_RGNDATAHEADER {
    INTEGER dwSize, iType, nCount, nRgnSize;
    WinApi_RECT rcBound;
  } WinApi_RGNDATAHEADER;

typedef
  struct WinApi_RGNDATA {
    WinApi_RGNDATAHEADER rdh;
    CHAR Buffer[1];
  } WinApi_RGNDATA;

typedef
  struct WinApi_RIP_INFO {
    INTEGER dwError, dwType;
  } WinApi_RIP_INFO;

typedef
  INTEGER (__STDCALL *WinApi_ROC)(void);

typedef
  INTEGER (__STDCALL *WinApi_ROPENUMPROC)(void);

typedef
  INTEGER (__STDCALL *WinApi_ROPENUMPROCA)(void);

typedef
  INTEGER (__STDCALL *WinApi_ROPENUMPROCEX)(void);

typedef
  INTEGER (__STDCALL *WinApi_ROPENUMPROCEXA)(void);

typedef
  INTEGER (__STDCALL *WinApi_ROPENUMPROCEXW)(void);

typedef
  INTEGER (__STDCALL *WinApi_ROPENUMPROCW)(void);

typedef
  WinApi_PtrWSTR *WinApi_RetCommandLineToArgvW;

typedef
  CHAR *WinApi_RetDdeAccessData;

typedef
  INTEGER *WinApi_RetGetSidSubAuthority;

typedef
  struct WinApi_SCROLLINFO {
    INTEGER cbSize;
    SET fMask;
    INTEGER nMin, nMax, nPage, nPos, nTrackPos;
  } WinApi_SCROLLINFO;

typedef
  struct WinApi_SECURITY_ATTRIBUTES {
    INTEGER nLength, lpSecurityDescriptor, bInheritHandle;
  } WinApi_SECURITY_ATTRIBUTES;

typedef
  struct WinApi_SECURITY_DESCRIPTOR {
    CHAR Revision, Sbz1;
    SHORTINT Control;
    INTEGER Owner, Group;
    WinApi_PtrACL Sacl, Dacl;
  } WinApi_SECURITY_DESCRIPTOR;

typedef
  INTEGER (__STDCALL *WinApi_SENDASYNCPROC)(void);

typedef
  struct WinApi_SERIALKEYSA {
    INTEGER cbSize;
    SET dwFlags;
    WinApi_PtrSTR lpszActivePort, lpszPort;
    INTEGER iBaudRate, iPortState, iActive;
  } WinApi_SERIALKEYSA;

typedef
  struct WinApi_SERIALKEYSW {
    INTEGER cbSize;
    SET dwFlags;
    WinApi_PtrWSTR lpszActivePort, lpszPort;
    INTEGER iBaudRate, iPortState, iActive;
  } WinApi_SERIALKEYSW;

typedef
  void (__STDCALL *WinApi_SERVICE_MAIN_FUNCTIONA)(INTEGER, WinApi_PtrSTR*);

typedef
  void (__STDCALL *WinApi_SERVICE_MAIN_FUNCTIONW)(INTEGER, WinApi_PtrWSTR*);

typedef
  struct WinApi_SERVICE_TABLE_ENTRYA {
    WinApi_PtrSTR lpServiceName;
    WinApi_SERVICE_MAIN_FUNCTIONA lpServiceProc;
  } WinApi_SERVICE_TABLE_ENTRYA;

typedef
  struct WinApi_SERVICE_TABLE_ENTRYW {
    WinApi_PtrWSTR lpServiceName;
    WinApi_SERVICE_MAIN_FUNCTIONW lpServiceProc;
  } WinApi_SERVICE_TABLE_ENTRYW;

typedef
  struct WinApi_SE_IMPERSONATION_STATE {
    INTEGER Token;
    BOOLEAN CopyOnOpen, EffectiveOnly;
    INTEGER Level;
  } WinApi_SE_IMPERSONATION_STATE;

typedef
  struct WinApi_SID_IDENTIFIER_AUTHORITY {
    CHAR Value[6];
  } WinApi_SID_IDENTIFIER_AUTHORITY;

typedef
  struct WinApi_SID {
    CHAR Revision, SubAuthorityCount;
    WinApi_SID_IDENTIFIER_AUTHORITY IdentifierAuthority;
    INTEGER SubAuthority[1];
  } WinApi_SID;

typedef
  struct WinApi_SINGLE_LIST_ENTRY {
    WinApi_PtrSINGLE_LIST_ENTRY Next;
  } WinApi_SINGLE_LIST_ENTRY;

typedef
  struct WinApi_SOUNDSENTRYA {
    INTEGER cbSize;
    SET dwFlags;
    INTEGER iFSTextEffect, iFSTextEffectMSec, iFSTextEffectColorBits, iFSGrafEffect, iFSGrafEffectMSec, iFSGrafEffectColor, iWindowsEffect, iWindowsEffectMSec;
    WinApi_PtrSTR lpszWindowsEffectDLL;
    INTEGER iWindowsEffectOrdinal;
  } WinApi_SOUNDSENTRYA;

typedef
  struct WinApi_SOUNDSENTRYW {
    INTEGER cbSize;
    SET dwFlags;
    INTEGER iFSTextEffect, iFSTextEffectMSec, iFSTextEffectColorBits, iFSGrafEffect, iFSGrafEffectMSec, iFSGrafEffectColor, iWindowsEffect, iWindowsEffectMSec;
    WinApi_PtrWSTR lpszWindowsEffectDLL;
    INTEGER iWindowsEffectOrdinal;
  } WinApi_SOUNDSENTRYW;

typedef
  struct WinApi_STARTUPINFOA {
    INTEGER cb;
    WinApi_PtrSTR lpReserved, lpDesktop, lpTitle;
    INTEGER dwX, dwY, dwXSize, dwYSize, dwXCountChars, dwYCountChars, dwFillAttribute;
    SET dwFlags;
    SHORTINT wShowWindow, cbReserved2;
    CHAR *lpReserved2;
    INTEGER hStdInput, hStdOutput, hStdError;
  } WinApi_STARTUPINFOA;

typedef
  struct WinApi_STARTUPINFOW {
    INTEGER cb;
    WinApi_PtrWSTR lpReserved, lpDesktop, lpTitle;
    INTEGER dwX, dwY, dwXSize, dwYSize, dwXCountChars, dwYCountChars, dwFillAttribute;
    SET dwFlags;
    SHORTINT wShowWindow, cbReserved2;
    CHAR *lpReserved2;
    INTEGER hStdInput, hStdOutput, hStdError;
  } WinApi_STARTUPINFOW;

typedef
  struct WinApi_STICKYKEYS {
    INTEGER cbSize;
    SET dwFlags;
  } WinApi_STICKYKEYS;

typedef
  struct WinApi_STYLESTRUCT {
    SET styleOld, styleNew;
  } WinApi_STYLESTRUCT;

typedef
  struct WinApi_SYSTEM_ALARM_ACE {
    WinApi_ACE_HEADER Header;
    SET Mask;
    INTEGER SidStart;
  } WinApi_SYSTEM_ALARM_ACE;

typedef
  struct WinApi_SYSTEM_AUDIT_ACE {
    WinApi_ACE_HEADER Header;
    SET Mask;
    INTEGER SidStart;
  } WinApi_SYSTEM_AUDIT_ACE;

typedef
  struct WinApi_SYSTEM_POWER_STATUS {
    CHAR ACLineStatus, BatteryFlag, BatteryLifePercent, Reserved1;
    INTEGER BatteryLifeTime, BatteryFullLifeTime;
  } WinApi_SYSTEM_POWER_STATUS;

typedef
  struct WinApi_TAPE_CREATE_PARTITION {
    INTEGER Method, Count, Size;
  } WinApi_TAPE_CREATE_PARTITION;

typedef
  struct WinApi_TAPE_ERASE {
    INTEGER Type;
    BOOLEAN Immediate;
  } WinApi_TAPE_ERASE;

typedef
  struct WinApi_TAPE_GET_DRIVE_PARAMETERS {
    BOOLEAN ECC, Compression, DataPadding, ReportSetmarks;
    INTEGER DefaultBlockSize, MaximumBlockSize, MinimumBlockSize, MaximumPartitionCount;
    SET FeaturesLow, FeaturesHigh;
    INTEGER EOTWarningZoneSize;
  } WinApi_TAPE_GET_DRIVE_PARAMETERS;

typedef
  struct WinApi_TAPE_PREPARE {
    INTEGER Operation;
    BOOLEAN Immediate;
  } WinApi_TAPE_PREPARE;

typedef
  struct WinApi_TAPE_SET_DRIVE_PARAMETERS {
    BOOLEAN ECC, Compression, DataPadding, ReportSetmarks;
    INTEGER EOTWarningZoneSize;
  } WinApi_TAPE_SET_DRIVE_PARAMETERS;

typedef
  struct WinApi_TAPE_SET_MEDIA_PARAMETERS {
    INTEGER BlockSize;
  } WinApi_TAPE_SET_MEDIA_PARAMETERS;

typedef
  struct WinApi_TAPE_WRITE_MARKS {
    INTEGER Type, Count;
    BOOLEAN Immediate;
  } WinApi_TAPE_WRITE_MARKS;

typedef
  INTEGER (__STDCALL *WinApi_TIMEFMT_ENUMPROCA)(void);

typedef
  INTEGER (__STDCALL *WinApi_TIMEFMT_ENUMPROCW)(void);

typedef
  void (__STDCALL *WinApi_TIMERAPCROUTINE)(INTEGER, INTEGER, INTEGER);

typedef
  INTEGER (__STDCALL *WinApi_TIMERPROC)(void);

typedef
  struct WinApi_TIME_ZONE_INFORMATION {
    INTEGER Bias;
    LONGCHAR StandardName[32];
    WinApi_SYSTEMTIME StandardDate;
    INTEGER StandardBias;
    LONGCHAR DaylightName[32];
    WinApi_SYSTEMTIME DaylightDate;
    INTEGER DaylightBias;
  } WinApi_TIME_ZONE_INFORMATION;

typedef
  struct WinApi_TOGGLEKEYS {
    INTEGER cbSize;
    SET dwFlags;
  } WinApi_TOGGLEKEYS;

typedef
  struct WinApi_TOKEN_DEFAULT_DACL {
    WinApi_PtrACL DefaultDacl;
  } WinApi_TOKEN_DEFAULT_DACL;

typedef
  struct WinApi_TOKEN_GROUPS {
    INTEGER GroupCount;
    WinApi_SID_AND_ATTRIBUTES Groups[1];
  } WinApi_TOKEN_GROUPS;

typedef
  struct WinApi_TOKEN_OWNER {
    INTEGER Owner;
  } WinApi_TOKEN_OWNER;

typedef
  struct WinApi_TOKEN_PRIMARY_GROUP {
    INTEGER PrimaryGroup;
  } WinApi_TOKEN_PRIMARY_GROUP;

typedef
  struct WinApi_TOKEN_PRIVILEGES {
    INTEGER PrivilegeCount;
    WinApi_LUID_AND_ATTRIBUTES Privileges[1];
  } WinApi_TOKEN_PRIVILEGES;

typedef
  struct WinApi_TOKEN_USER {
    WinApi_SID_AND_ATTRIBUTES User;
  } WinApi_TOKEN_USER;

typedef
  INTEGER (__STDCALL *WinApi_TOP_LEVEL_EXCEPTION_FILTER)(WinApi_EXCEPTION_POINTERS*);

typedef
  struct WinApi_TPMPARAMS {
    INTEGER cbSize;
    WinApi_RECT rcExclude;
  } WinApi_TPMPARAMS;

typedef
  struct WinApi_TTPOLYCURVE {
    SHORTINT wType, cpfx;
    WinApi_POINTFX apfx[1];
  } WinApi_TTPOLYCURVE;

typedef
  struct WinApi_TTPOLYGONHEADER {
    INTEGER cb, dwType;
    WinApi_POINTFX pfxStart;
  } WinApi_TTPOLYGONHEADER;

typedef
  struct WinApi_UNLOAD_DLL_DEBUG_INFO {
    INTEGER lpBaseOfDll;
  } WinApi_UNLOAD_DLL_DEBUG_INFO;

typedef
  struct WinApi_USEROBJECTFLAGS {
    INTEGER fInherit, fReserved;
    SET dwFlags;
  } WinApi_USEROBJECTFLAGS;

typedef
  struct WinApi_VALENTA {
    WinApi_PtrSTR ve_valuename;
    INTEGER ve_valuelen, ve_valueptr, ve_type;
  } WinApi_VALENTA;

typedef
  struct WinApi_VALENTW {
    WinApi_PtrWSTR ve_valuename;
    INTEGER ve_valuelen, ve_valueptr, ve_type;
  } WinApi_VALENTW;

typedef
  struct WinApi_VS_FIXEDFILEINFO {
    INTEGER dwSignature, dwStrucVersion, dwFileVersionMS, dwFileVersionLS, dwProductVersionMS, dwProductVersionLS;
    SET dwFileFlagsMask, dwFileFlags, dwFileOS;
    INTEGER dwFileType, dwFileSubtype, dwFileDateMS, dwFileDateLS;
  } WinApi_VS_FIXEDFILEINFO;

typedef
  struct WinApi_WINDOWPLACEMENT {
    INTEGER length;
    SET flags;
    INTEGER showCmd;
    WinApi_POINT ptMinPosition, ptMaxPosition;
    WinApi_RECT rcNormalPosition;
  } WinApi_WINDOWPLACEMENT;

typedef
  struct WinApi_WINDOWPOS {
    INTEGER hwnd, hwndInsertAfter, x, y, cx, cy;
    SET flags;
  } WinApi_WINDOWPOS;

typedef
  struct WinApi_WINDOW_BUFFER_SIZE_RECORD {
    WinApi_COORD dwSize;
  } WinApi_WINDOW_BUFFER_SIZE_RECORD;

typedef
  INTEGER (__STDCALL *WinApi_WINSTAENUMPROC)(void);

typedef
  INTEGER (__STDCALL *WinApi_WINSTAENUMPROCA)(void);

typedef
  INTEGER (__STDCALL *WinApi_WINSTAENUMPROCW)(void);

typedef
  struct WinApi_WIN_CERTIFICATE {
    INTEGER dwLength;
    SHORTINT wRevision, wCertificateType;
    CHAR bCertificate[1];
  } WinApi_WIN_CERTIFICATE;

typedef
  struct WinApi_WIN_SPUB_TRUSTEDPUB_DATA {
    INTEGER hClientToken;
    WinApi_PtrWIN_CERTIFICATE lpCertificate;
  } WinApi_WIN_SPUB_TRUSTEDPUB_DATA;

typedef
  struct WinApi_WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT {
    INTEGER hClientToken, dwSubjectType, Subject;
  } WinApi_WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT;

typedef
  struct WinApi_WIN_TRUST_ACTDATA_SUBJECT_ONLY {
    INTEGER dwSubjectType, Subject;
  } WinApi_WIN_TRUST_ACTDATA_SUBJECT_ONLY;

typedef
  struct WinApi_WIN_TRUST_SUBJECT_FILE {
    INTEGER hFile;
    WinApi_PtrWSTR lpPath;
  } WinApi_WIN_TRUST_SUBJECT_FILE;

typedef
  INTEGER (__STDCALL *WinApi_WNDPROC)(INTEGER, INTEGER, INTEGER, INTEGER);

typedef
  struct WinApi_WNDCLASSA {
    SET style;
    WinApi_WNDPROC lpfnWndProc;
    INTEGER cbClsExtra, cbWndExtra, hInstance, hIcon, hCursor, hbrBackground;
    WinApi_PtrSTR lpszMenuName, lpszClassName;
  } WinApi_WNDCLASSA;

typedef
  struct WinApi_WNDCLASSEXA {
    INTEGER cbSize;
    SET style;
    WinApi_WNDPROC lpfnWndProc;
    INTEGER cbClsExtra, cbWndExtra, hInstance, hIcon, hCursor, hbrBackground;
    WinApi_PtrSTR lpszMenuName, lpszClassName;
    INTEGER hIconSm;
  } WinApi_WNDCLASSEXA;

typedef
  struct WinApi_WNDCLASSEXW {
    INTEGER cbSize;
    SET style;
    WinApi_WNDPROC lpfnWndProc;
    INTEGER cbClsExtra, cbWndExtra, hInstance, hIcon, hCursor, hbrBackground;
    WinApi_PtrWSTR lpszMenuName, lpszClassName;
    INTEGER hIconSm;
  } WinApi_WNDCLASSEXW;

typedef
  struct WinApi_WNDCLASSW {
    SET style;
    WinApi_WNDPROC lpfnWndProc;
    INTEGER cbClsExtra, cbWndExtra, hInstance, hIcon, hCursor, hbrBackground;
    WinApi_PtrWSTR lpszMenuName, lpszClassName;
  } WinApi_WNDCLASSW;

typedef
  INTEGER (__STDCALL *WinApi_WNDENUMPROC)(void);

typedef
  struct WinApi__EXCEPTION_REGISTRATION_RECORD {
    char _prvt0[1];
  } WinApi__EXCEPTION_REGISTRATION_RECORD;

typedef
  struct WinApi__POINTL {
    INTEGER x, y;
  } WinApi__POINTL;

typedef
  struct WinApi__RECTL {
    INTEGER left, top, right, bottom;
  } WinApi__RECTL;




__EXTERN INTEGER __STDCALL AbortDoc (INTEGER p0);
__EXTERN INTEGER __STDCALL AbortPath (INTEGER p0);
__EXTERN INTEGER __STDCALL AbortPrinter (INTEGER hPrinter);
__EXTERN INTEGER __STDCALL AbortSystemShutdownA (WinApi_PtrSTR lpMachineName);
__EXTERN INTEGER __STDCALL AbortSystemShutdownA (WinApi_PtrSTR lpMachineName);
__EXTERN INTEGER __STDCALL AbortSystemShutdownW (WinApi_PtrWSTR lpMachineName);
__EXTERN INTEGER __STDCALL AccessCheck (INTEGER pSecurityDescriptor, INTEGER ClientToken, SET DesiredAccess, WinApi_GENERIC_MAPPING *GenericMapping, WinApi_PRIVILEGE_SET *PrivilegeSet, INTEGER *PrivilegeSetLength, INTEGER *GrantedAccess, INTEGER *AccessStatus);
__EXTERN INTEGER __STDCALL AccessCheckAndAuditAlarmA (WinApi_PtrSTR SubsystemName, INTEGER HandleId, WinApi_PtrSTR ObjectTypeName, WinApi_PtrSTR ObjectName, INTEGER SecurityDescriptor, SET DesiredAccess, WinApi_GENERIC_MAPPING *GenericMapping, INTEGER ObjectCreation, INTEGER *GrantedAccess, INTEGER *AccessStatus, INTEGER *pfGenerateOnClose);
__EXTERN INTEGER __STDCALL AccessCheckAndAuditAlarmA (WinApi_PtrSTR SubsystemName, INTEGER HandleId, WinApi_PtrSTR ObjectTypeName, WinApi_PtrSTR ObjectName, INTEGER SecurityDescriptor, SET DesiredAccess, WinApi_GENERIC_MAPPING *GenericMapping, INTEGER ObjectCreation, INTEGER *GrantedAccess, INTEGER *AccessStatus, INTEGER *pfGenerateOnClose);
__EXTERN INTEGER __STDCALL AccessCheckAndAuditAlarmW (WinApi_PtrWSTR SubsystemName, INTEGER HandleId, WinApi_PtrWSTR ObjectTypeName, WinApi_PtrWSTR ObjectName, INTEGER SecurityDescriptor, SET DesiredAccess, WinApi_GENERIC_MAPPING *GenericMapping, INTEGER ObjectCreation, INTEGER *GrantedAccess, INTEGER *AccessStatus, INTEGER *pfGenerateOnClose);
__EXTERN INTEGER __STDCALL ActivateKeyboardLayout (INTEGER hkl, SET Flags);
__EXTERN INTEGER __STDCALL AddAccessAllowedAce (WinApi_ACL *pAcl, INTEGER dwAceRevision, INTEGER AccessMask, INTEGER pSid);
__EXTERN INTEGER __STDCALL AddAccessDeniedAce (WinApi_ACL *pAcl, INTEGER dwAceRevision, INTEGER AccessMask, INTEGER pSid);
__EXTERN INTEGER __STDCALL AddAce (WinApi_ACL *pAcl, INTEGER dwAceRevision, INTEGER dwStartingAceIndex, INTEGER pAceList, INTEGER nAceListLength);
__EXTERN SHORTINT __STDCALL AddAtomA (WinApi_PtrSTR lpString);
__EXTERN SHORTINT __STDCALL AddAtomA (WinApi_PtrSTR lpString);
__EXTERN SHORTINT __STDCALL AddAtomW (WinApi_PtrWSTR lpString);
__EXTERN INTEGER __STDCALL AddAuditAccessAce (WinApi_ACL *pAcl, INTEGER dwAceRevision, INTEGER dwAccessMask, INTEGER pSid, INTEGER bAuditSuccess, INTEGER bAuditFailure);
__EXTERN INTEGER __STDCALL AddFontResourceA (WinApi_PtrSTR p0);
__EXTERN INTEGER __STDCALL AddFontResourceA (WinApi_PtrSTR p0);
__EXTERN INTEGER __STDCALL AddFontResourceW (WinApi_PtrWSTR p0);
__EXTERN INTEGER __STDCALL AddFormA (INTEGER hPrinter, INTEGER Level, CHAR *pForm);
__EXTERN INTEGER __STDCALL AddFormA (INTEGER hPrinter, INTEGER Level, CHAR *pForm);
__EXTERN INTEGER __STDCALL AddFormW (INTEGER hPrinter, INTEGER Level, CHAR *pForm);
__EXTERN INTEGER __STDCALL AddJobA (INTEGER hPrinter, INTEGER Level, CHAR *pData, INTEGER cbBuf, INTEGER *pcbNeeded);
__EXTERN INTEGER __STDCALL AddJobA (INTEGER hPrinter, INTEGER Level, CHAR *pData, INTEGER cbBuf, INTEGER *pcbNeeded);
__EXTERN INTEGER __STDCALL AddJobW (INTEGER hPrinter, INTEGER Level, CHAR *pData, INTEGER cbBuf, INTEGER *pcbNeeded);
__EXTERN INTEGER __STDCALL AddMonitorA (WinApi_PtrSTR pName, INTEGER Level, CHAR *pMonitors);
__EXTERN INTEGER __STDCALL AddMonitorA (WinApi_PtrSTR pName, INTEGER Level, CHAR *pMonitors);
__EXTERN INTEGER __STDCALL AddMonitorW (WinApi_PtrWSTR pName, INTEGER Level, CHAR *pMonitors);
__EXTERN INTEGER __STDCALL AddPortA (WinApi_PtrSTR pName, INTEGER hWnd, WinApi_PtrSTR pMonitorName);
__EXTERN INTEGER __STDCALL AddPortA (WinApi_PtrSTR pName, INTEGER hWnd, WinApi_PtrSTR pMonitorName);
__EXTERN INTEGER __STDCALL AddPortW (WinApi_PtrWSTR pName, INTEGER hWnd, WinApi_PtrWSTR pMonitorName);
__EXTERN INTEGER __STDCALL AddPrintProcessorA (WinApi_PtrSTR pName, WinApi_PtrSTR pEnvironment, WinApi_PtrSTR pPathName, WinApi_PtrSTR pPrintProcessorName);
__EXTERN INTEGER __STDCALL AddPrintProcessorA (WinApi_PtrSTR pName, WinApi_PtrSTR pEnvironment, WinApi_PtrSTR pPathName, WinApi_PtrSTR pPrintProcessorName);
__EXTERN INTEGER __STDCALL AddPrintProcessorW (WinApi_PtrWSTR pName, WinApi_PtrWSTR pEnvironment, WinApi_PtrWSTR pPathName, WinApi_PtrWSTR pPrintProcessorName);
__EXTERN INTEGER __STDCALL AddPrintProvidorA (WinApi_PtrSTR pName, INTEGER level, CHAR *pProvidorInfo);
__EXTERN INTEGER __STDCALL AddPrintProvidorA (WinApi_PtrSTR pName, INTEGER level, CHAR *pProvidorInfo);
__EXTERN INTEGER __STDCALL AddPrintProvidorW (WinApi_PtrWSTR pName, INTEGER level, CHAR *pProvidorInfo);
__EXTERN INTEGER __STDCALL AddPrinterA (WinApi_PtrSTR pName, INTEGER Level, CHAR *pPrinter);
__EXTERN INTEGER __STDCALL AddPrinterA (WinApi_PtrSTR pName, INTEGER Level, CHAR *pPrinter);
__EXTERN INTEGER __STDCALL AddPrinterConnectionA (WinApi_PtrSTR pName);
__EXTERN INTEGER __STDCALL AddPrinterConnectionA (WinApi_PtrSTR pName);
__EXTERN INTEGER __STDCALL AddPrinterConnectionW (WinApi_PtrWSTR pName);
__EXTERN INTEGER __STDCALL AddPrinterDriverA (WinApi_PtrSTR pName, INTEGER Level, CHAR *pDriverInfo);
__EXTERN INTEGER __STDCALL AddPrinterDriverA (WinApi_PtrSTR pName, INTEGER Level, CHAR *pDriverInfo);
__EXTERN INTEGER __STDCALL AddPrinterDriverW (WinApi_PtrWSTR pName, INTEGER Level, CHAR *pDriverInfo);
__EXTERN INTEGER __STDCALL AddPrinterW (WinApi_PtrWSTR pName, INTEGER Level, CHAR *pPrinter);
__EXTERN INTEGER __STDCALL AdjustTokenGroups (INTEGER TokenHandle, INTEGER ResetToDefault, WinApi_TOKEN_GROUPS *NewState, INTEGER BufferLength, WinApi_TOKEN_GROUPS *PreviousState, INTEGER *ReturnLength);
__EXTERN INTEGER __STDCALL AdjustTokenPrivileges (INTEGER TokenHandle, INTEGER DisableAllPrivileges, WinApi_TOKEN_PRIVILEGES *NewState, INTEGER BufferLength, WinApi_TOKEN_PRIVILEGES *PreviousState, INTEGER *ReturnLength);
__EXTERN INTEGER __STDCALL AdjustWindowRect (WinApi_RECT *lpRect, SET dwStyle, INTEGER bMenu);
__EXTERN INTEGER __STDCALL AdjustWindowRectEx (WinApi_RECT *lpRect, SET dwStyle, INTEGER bMenu, SET dwExStyle);
__EXTERN INTEGER __STDCALL AdvancedDocumentPropertiesA (INTEGER hWnd, INTEGER hPrinter, WinApi_PtrSTR pDeviceName, WinApi_DEVMODEA *pDevModeOutput, WinApi_DEVMODEA *pDevModeInput);
__EXTERN INTEGER __STDCALL AdvancedDocumentPropertiesA (INTEGER hWnd, INTEGER hPrinter, WinApi_PtrSTR pDeviceName, WinApi_DEVMODEA *pDevModeOutput, WinApi_DEVMODEA *pDevModeInput);
__EXTERN INTEGER __STDCALL AdvancedDocumentPropertiesW (INTEGER hWnd, INTEGER hPrinter, WinApi_PtrWSTR pDeviceName, WinApi_DEVMODEW *pDevModeOutput, WinApi_DEVMODEW *pDevModeInput);
__EXTERN INTEGER __STDCALL AllocConsole (void);
__EXTERN INTEGER __STDCALL AllocateAndInitializeSid (WinApi_SID_IDENTIFIER_AUTHORITY *pIdentifierAuthority, CHAR nSubAuthorityCount, INTEGER nSubAuthority0, INTEGER nSubAuthority1, INTEGER nSubAuthority2, INTEGER nSubAuthority3, INTEGER nSubAuthority4, INTEGER nSubAuthority5, INTEGER nSubAuthority6, INTEGER nSubAuthority7, INTEGER *pSid);
__EXTERN INTEGER __STDCALL AllocateLocallyUniqueId (LONGINT *Luid);
__EXTERN INTEGER __STDCALL AngleArc (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, SHORTREAL p4, SHORTREAL p5);
__EXTERN INTEGER __STDCALL AnimatePalette (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_PALETTEENTRY *p3);
__EXTERN WinApi_PtrSTR __STDCALL CharLowerA (WinApi_PtrSTR lpsz);
__EXTERN INTEGER __STDCALL CharLowerBuffA (WinApi_PtrSTR lpsz, INTEGER cchLength);
__EXTERN WinApi_PtrSTR __STDCALL CharNextA (WinApi_PtrSTR lpsz);
__EXTERN WinApi_PtrSTR __STDCALL CharPrevA (WinApi_PtrSTR lpszStart, WinApi_PtrSTR lpszCurrent);
__EXTERN INTEGER __STDCALL CharToOemA (WinApi_PtrSTR lpszSrc, WinApi_PtrSTR lpszDst);
__EXTERN INTEGER __STDCALL CharToOemBuffA (WinApi_PtrSTR lpszSrc, WinApi_PtrSTR lpszDst, INTEGER cchDstLength);
__EXTERN WinApi_PtrSTR __STDCALL CharUpperA (WinApi_PtrSTR lpsz);
__EXTERN INTEGER __STDCALL CharUpperBuffA (WinApi_PtrSTR lpsz, INTEGER cchLength);
__EXTERN INTEGER __STDCALL AnyPopup (void);
__EXTERN INTEGER __STDCALL AppendMenuA (INTEGER hMenu, SET uFlags, INTEGER uIDNewItem, WinApi_PtrSTR lpNewItem);
__EXTERN INTEGER __STDCALL AppendMenuA (INTEGER hMenu, SET uFlags, INTEGER uIDNewItem, WinApi_PtrSTR lpNewItem);
__EXTERN INTEGER __STDCALL AppendMenuW (INTEGER hMenu, SET uFlags, INTEGER uIDNewItem, WinApi_PtrWSTR lpNewItem);
__EXTERN INTEGER __STDCALL Arc (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4, INTEGER p5, INTEGER p6, INTEGER p7, INTEGER p8);
__EXTERN INTEGER __STDCALL ArcTo (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4, INTEGER p5, INTEGER p6, INTEGER p7, INTEGER p8);
__EXTERN INTEGER __STDCALL AreAllAccessesGranted (INTEGER GrantedAccess, SET DesiredAccess);
__EXTERN INTEGER __STDCALL AreAnyAccessesGranted (INTEGER GrantedAccess, SET DesiredAccess);
__EXTERN INTEGER __STDCALL AreFileApisANSI (void);
__EXTERN INTEGER __STDCALL ArrangeIconicWindows (INTEGER hWnd);
__EXTERN INTEGER __STDCALL AttachThreadInput (INTEGER idAttach, INTEGER idAttachTo, INTEGER fAttach);
__EXTERN INTEGER __STDCALL BackupEventLogA (INTEGER hEventLog, WinApi_PtrSTR lpBackupFileName);
__EXTERN INTEGER __STDCALL BackupEventLogA (INTEGER hEventLog, WinApi_PtrSTR lpBackupFileName);
__EXTERN INTEGER __STDCALL BackupEventLogW (INTEGER hEventLog, WinApi_PtrWSTR lpBackupFileName);
__EXTERN INTEGER __STDCALL BackupRead (INTEGER hFile, CHAR *lpBuffer, INTEGER nNumberOfBytesToRead, INTEGER *lpNumberOfBytesRead, INTEGER bAbort, INTEGER bProcessSecurity, INTEGER *lpContext);
__EXTERN INTEGER __STDCALL BackupSeek (INTEGER hFile, INTEGER dwLowBytesToSeek, INTEGER dwHighBytesToSeek, INTEGER *lpdwLowByteSeeked, INTEGER *lpdwHighByteSeeked, INTEGER *lpContext);
__EXTERN INTEGER __STDCALL BackupWrite (INTEGER hFile, CHAR *lpBuffer, INTEGER nNumberOfBytesToWrite, INTEGER *lpNumberOfBytesWritten, INTEGER bAbort, INTEGER bProcessSecurity, INTEGER *lpContext);
__EXTERN INTEGER __STDCALL Beep (INTEGER dwFreq, INTEGER dwDuration);
__EXTERN INTEGER __STDCALL BeginDeferWindowPos (INTEGER nNumWindows);
__EXTERN INTEGER __STDCALL BeginPaint (INTEGER hWnd, WinApi_PAINTSTRUCT *lpPaint);
__EXTERN INTEGER __STDCALL BeginPath (INTEGER p0);
__EXTERN INTEGER __STDCALL BeginUpdateResourceA (WinApi_PtrSTR pFileName, INTEGER bDeleteExistingResources);
__EXTERN INTEGER __STDCALL BeginUpdateResourceA (WinApi_PtrSTR pFileName, INTEGER bDeleteExistingResources);
__EXTERN INTEGER __STDCALL BeginUpdateResourceW (WinApi_PtrWSTR pFileName, INTEGER bDeleteExistingResources);
__EXTERN INTEGER __STDCALL BitBlt (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4, INTEGER p5, INTEGER p6, INTEGER p7, INTEGER p8);
__EXTERN INTEGER __STDCALL BringWindowToTop (INTEGER hWnd);
__EXTERN INTEGER __STDCALL BroadcastSystemMessageA (SET p0, SET *p1, INTEGER p2, INTEGER p3, INTEGER p4);
__EXTERN INTEGER __STDCALL BroadcastSystemMessageA (SET p0, SET *p1, INTEGER p2, INTEGER p3, INTEGER p4);
__EXTERN INTEGER __STDCALL BroadcastSystemMessageW (SET p0, SET *p1, INTEGER p2, INTEGER p3, INTEGER p4);
__EXTERN INTEGER __STDCALL BuildCommDCBA (WinApi_PtrSTR lpDef, WinApi_DCB *lpDCB);
__EXTERN INTEGER __STDCALL BuildCommDCBA (WinApi_PtrSTR lpDef, WinApi_DCB *lpDCB);
__EXTERN INTEGER __STDCALL BuildCommDCBAndTimeoutsA (WinApi_PtrSTR lpDef, WinApi_DCB *lpDCB, WinApi_COMMTIMEOUTS *lpCommTimeouts);
__EXTERN INTEGER __STDCALL BuildCommDCBAndTimeoutsA (WinApi_PtrSTR lpDef, WinApi_DCB *lpDCB, WinApi_COMMTIMEOUTS *lpCommTimeouts);
__EXTERN INTEGER __STDCALL BuildCommDCBAndTimeoutsW (WinApi_PtrWSTR lpDef, WinApi_DCB *lpDCB, WinApi_COMMTIMEOUTS *lpCommTimeouts);
__EXTERN INTEGER __STDCALL BuildCommDCBW (WinApi_PtrWSTR lpDef, WinApi_DCB *lpDCB);
__EXTERN INTEGER __STDCALL CallMsgFilterA (WinApi_MSG *lpMsg, INTEGER nCode);
__EXTERN INTEGER __STDCALL CallMsgFilterA (WinApi_MSG *lpMsg, INTEGER nCode);
__EXTERN INTEGER __STDCALL CallMsgFilterW (WinApi_MSG *lpMsg, INTEGER nCode);
__EXTERN INTEGER __STDCALL CallNamedPipeA (WinApi_PtrSTR lpNamedPipeName, INTEGER lpInBuffer, INTEGER nInBufferSize, INTEGER lpOutBuffer, INTEGER nOutBufferSize, INTEGER *lpBytesRead, INTEGER nTimeOut);
__EXTERN INTEGER __STDCALL CallNamedPipeA (WinApi_PtrSTR lpNamedPipeName, INTEGER lpInBuffer, INTEGER nInBufferSize, INTEGER lpOutBuffer, INTEGER nOutBufferSize, INTEGER *lpBytesRead, INTEGER nTimeOut);
__EXTERN INTEGER __STDCALL CallNamedPipeW (WinApi_PtrWSTR lpNamedPipeName, INTEGER lpInBuffer, INTEGER nInBufferSize, INTEGER lpOutBuffer, INTEGER nOutBufferSize, INTEGER *lpBytesRead, INTEGER nTimeOut);
__EXTERN INTEGER __STDCALL CallNextHookEx (INTEGER hhk, INTEGER nCode, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL CallWindowProcA (WinApi_FARPROC lpPrevWndFunc, INTEGER hWnd, INTEGER Msg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL CallWindowProcA (WinApi_FARPROC lpPrevWndFunc, INTEGER hWnd, INTEGER Msg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL CallWindowProcW (WinApi_FARPROC lpPrevWndFunc, INTEGER hWnd, INTEGER Msg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL CancelDC (INTEGER p0);
__EXTERN INTEGER __STDCALL CancelWaitableTimer (INTEGER hTimer);
__EXTERN SHORTINT __STDCALL CascadeWindows (INTEGER hwndParent, INTEGER wHow, WinApi_RECT *lpRect, INTEGER cKids, INTEGER *lpKids);
__EXTERN INTEGER __STDCALL ChangeClipboardChain (INTEGER hWndRemove, INTEGER hWndNewNext);
__EXTERN INTEGER __STDCALL ChangeDisplaySettingsA (WinApi_DEVMODEA *lpDevMode, SET dwFlags);
__EXTERN INTEGER __STDCALL ChangeDisplaySettingsA (WinApi_DEVMODEA *lpDevMode, SET dwFlags);
__EXTERN INTEGER __STDCALL ChangeDisplaySettingsW (WinApi_DEVMODEW *lpDevMode, SET dwFlags);
__EXTERN INTEGER __STDCALL ChangeMenuA (INTEGER hMenu, INTEGER cmd, WinApi_PtrSTR lpszNewItem, INTEGER cmdInsert, SET flags);
__EXTERN INTEGER __STDCALL ChangeMenuA (INTEGER hMenu, INTEGER cmd, WinApi_PtrSTR lpszNewItem, INTEGER cmdInsert, SET flags);
__EXTERN INTEGER __STDCALL ChangeMenuW (INTEGER hMenu, INTEGER cmd, WinApi_PtrWSTR lpszNewItem, INTEGER cmdInsert, SET flags);
__EXTERN INTEGER __STDCALL ChangeServiceConfigA (INTEGER hService, SET dwServiceType, INTEGER dwStartType, INTEGER dwErrorControl, WinApi_PtrSTR lpBinaryPathName, WinApi_PtrSTR lpLoadOrderGroup, INTEGER *lpdwTagId, WinApi_PtrSTR lpDependencies, WinApi_PtrSTR lpServiceStartName, WinApi_PtrSTR lpPassword, WinApi_PtrSTR lpDisplayName);
__EXTERN INTEGER __STDCALL ChangeServiceConfigA (INTEGER hService, SET dwServiceType, INTEGER dwStartType, INTEGER dwErrorControl, WinApi_PtrSTR lpBinaryPathName, WinApi_PtrSTR lpLoadOrderGroup, INTEGER *lpdwTagId, WinApi_PtrSTR lpDependencies, WinApi_PtrSTR lpServiceStartName, WinApi_PtrSTR lpPassword, WinApi_PtrSTR lpDisplayName);
__EXTERN INTEGER __STDCALL ChangeServiceConfigW (INTEGER hService, SET dwServiceType, INTEGER dwStartType, INTEGER dwErrorControl, WinApi_PtrWSTR lpBinaryPathName, WinApi_PtrWSTR lpLoadOrderGroup, INTEGER *lpdwTagId, WinApi_PtrWSTR lpDependencies, WinApi_PtrWSTR lpServiceStartName, WinApi_PtrWSTR lpPassword, WinApi_PtrWSTR lpDisplayName);
__EXTERN WinApi_PtrSTR __STDCALL CharLowerA (WinApi_PtrSTR lpsz);
__EXTERN WinApi_PtrSTR __STDCALL CharLowerA (WinApi_PtrSTR lpsz);
__EXTERN INTEGER __STDCALL CharLowerBuffA (WinApi_PtrSTR lpsz, INTEGER cchLength);
__EXTERN INTEGER __STDCALL CharLowerBuffA (WinApi_PtrSTR lpsz, INTEGER cchLength);
__EXTERN INTEGER __STDCALL CharLowerBuffW (WinApi_PtrWSTR lpsz, INTEGER cchLength);
__EXTERN WinApi_PtrWSTR __STDCALL CharLowerW (WinApi_PtrWSTR lpsz);
__EXTERN WinApi_PtrSTR __STDCALL CharNextA (WinApi_PtrSTR lpsz);
__EXTERN WinApi_PtrSTR __STDCALL CharNextA (WinApi_PtrSTR lpsz);
__EXTERN WinApi_PtrSTR __STDCALL CharNextExA (SHORTINT CodePage, WinApi_PtrSTR lpCurrentChar, SET dwFlags);
__EXTERN WinApi_PtrWSTR __STDCALL CharNextW (WinApi_PtrWSTR lpsz);
__EXTERN WinApi_PtrSTR __STDCALL CharPrevA (WinApi_PtrSTR lpszStart, WinApi_PtrSTR lpszCurrent);
__EXTERN WinApi_PtrSTR __STDCALL CharPrevA (WinApi_PtrSTR lpszStart, WinApi_PtrSTR lpszCurrent);
__EXTERN WinApi_PtrSTR __STDCALL CharPrevExA (SHORTINT CodePage, WinApi_PtrSTR lpStart, WinApi_PtrSTR lpCurrentChar, SET dwFlags);
__EXTERN WinApi_PtrWSTR __STDCALL CharPrevW (WinApi_PtrWSTR lpszStart, WinApi_PtrWSTR lpszCurrent);
__EXTERN INTEGER __STDCALL CharToOemA (WinApi_PtrSTR lpszSrc, WinApi_PtrSTR lpszDst);
__EXTERN INTEGER __STDCALL CharToOemA (WinApi_PtrSTR lpszSrc, WinApi_PtrSTR lpszDst);
__EXTERN INTEGER __STDCALL CharToOemBuffA (WinApi_PtrSTR lpszSrc, WinApi_PtrSTR lpszDst, INTEGER cchDstLength);
__EXTERN INTEGER __STDCALL CharToOemBuffA (WinApi_PtrSTR lpszSrc, WinApi_PtrSTR lpszDst, INTEGER cchDstLength);
__EXTERN INTEGER __STDCALL CharToOemBuffW (WinApi_PtrWSTR lpszSrc, WinApi_PtrSTR lpszDst, INTEGER cchDstLength);
__EXTERN INTEGER __STDCALL CharToOemW (WinApi_PtrWSTR lpszSrc, WinApi_PtrSTR lpszDst);
__EXTERN WinApi_PtrSTR __STDCALL CharUpperA (WinApi_PtrSTR lpsz);
__EXTERN WinApi_PtrSTR __STDCALL CharUpperA (WinApi_PtrSTR lpsz);
__EXTERN INTEGER __STDCALL CharUpperBuffA (WinApi_PtrSTR lpsz, INTEGER cchLength);
__EXTERN INTEGER __STDCALL CharUpperBuffA (WinApi_PtrSTR lpsz, INTEGER cchLength);
__EXTERN INTEGER __STDCALL CharUpperBuffW (WinApi_PtrWSTR lpsz, INTEGER cchLength);
__EXTERN WinApi_PtrWSTR __STDCALL CharUpperW (WinApi_PtrWSTR lpsz);
__EXTERN INTEGER __STDCALL CheckColorsInGamut (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3);
__EXTERN INTEGER __STDCALL CheckDlgButton (INTEGER hDlg, INTEGER nIDButton, SET uCheck);
__EXTERN INTEGER __STDCALL CheckMenuItem (INTEGER hMenu, INTEGER uIDCheckItem, SET uCheck);
__EXTERN INTEGER __STDCALL CheckMenuRadioItem (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4);
__EXTERN INTEGER __STDCALL CheckRadioButton (INTEGER hDlg, INTEGER nIDFirstButton, INTEGER nIDLastButton, INTEGER nIDCheckButton);
__EXTERN INTEGER __STDCALL ChildWindowFromPoint (INTEGER hWndParent, WinApi_POINT Point);
__EXTERN INTEGER __STDCALL ChildWindowFromPointEx (INTEGER p0, WinApi_POINT p1, SET p2);
__EXTERN INTEGER __STDCALL ChoosePixelFormat (INTEGER p0, WinApi_PIXELFORMATDESCRIPTOR *p1);
__EXTERN INTEGER __STDCALL Chord (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4, INTEGER p5, INTEGER p6, INTEGER p7, INTEGER p8);
__EXTERN INTEGER __STDCALL ClearCommBreak (INTEGER hFile);
__EXTERN INTEGER __STDCALL ClearCommError (INTEGER hFile, SET *lpErrors, WinApi_COMSTAT *lpStat);
__EXTERN INTEGER __STDCALL ClearEventLogA (INTEGER hEventLog, WinApi_PtrSTR lpBackupFileName);
__EXTERN INTEGER __STDCALL ClearEventLogA (INTEGER hEventLog, WinApi_PtrSTR lpBackupFileName);
__EXTERN INTEGER __STDCALL ClearEventLogW (INTEGER hEventLog, WinApi_PtrWSTR lpBackupFileName);
__EXTERN INTEGER __STDCALL ClientToScreen (INTEGER hWnd, WinApi_POINT *lpPoint);
__EXTERN INTEGER __STDCALL ClipCursor (WinApi_RECT *lpRect);
__EXTERN INTEGER __STDCALL CloseClipboard (void);
__EXTERN INTEGER __STDCALL CloseDesktop (INTEGER hDesktop);
__EXTERN INTEGER __STDCALL CloseEnhMetaFile (INTEGER p0);
__EXTERN INTEGER __STDCALL CloseEventLog (INTEGER hEventLog);
__EXTERN INTEGER __STDCALL CloseFigure (INTEGER p0);
__EXTERN INTEGER __STDCALL CloseHandle (INTEGER hObject);
__EXTERN INTEGER __STDCALL CloseMetaFile (INTEGER p0);
__EXTERN INTEGER __STDCALL ClosePrinter (INTEGER hPrinter);
__EXTERN INTEGER __STDCALL CloseServiceHandle (INTEGER hSCObject);
__EXTERN INTEGER __STDCALL CloseWindow (INTEGER hWnd);
__EXTERN INTEGER __STDCALL CloseWindowStation (INTEGER hWinSta);
__EXTERN INTEGER __STDCALL ColorMatchToTarget (INTEGER p0, INTEGER p1, INTEGER p2);
__EXTERN INTEGER __STDCALL CombineRgn (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3);
__EXTERN INTEGER __STDCALL CombineTransform (WinApi_XFORM *p0, WinApi_XFORM *p1, WinApi_XFORM *p2);
__EXTERN INTEGER __STDCALL CommConfigDialogA (WinApi_PtrSTR lpszName, INTEGER hWnd, WinApi_COMMCONFIG *lpCC);
__EXTERN INTEGER __STDCALL CommConfigDialogA (WinApi_PtrSTR lpszName, INTEGER hWnd, WinApi_COMMCONFIG *lpCC);
__EXTERN INTEGER __STDCALL CommConfigDialogW (WinApi_PtrWSTR lpszName, INTEGER hWnd, WinApi_COMMCONFIG *lpCC);
__EXTERN WinApi_RetCommandLineToArgvW __STDCALL CommandLineToArgvW (WinApi_PtrWSTR lpCmdLine, INTEGER *pNumArgs);
__EXTERN INTEGER __STDCALL CompareFileTime (WinApi_FILETIME *lpFileTime1, WinApi_FILETIME *lpFileTime2);
__EXTERN INTEGER __STDCALL CompareStringA (INTEGER Locale, SET dwCmpFlags, WinApi_PtrSTR lpString1, INTEGER cchCount1, WinApi_PtrSTR lpString2, INTEGER cchCount2);
__EXTERN INTEGER __STDCALL CompareStringA (INTEGER Locale, SET dwCmpFlags, WinApi_PtrSTR lpString1, INTEGER cchCount1, WinApi_PtrSTR lpString2, INTEGER cchCount2);
__EXTERN INTEGER __STDCALL CompareStringW (INTEGER Locale, SET dwCmpFlags, WinApi_PtrWSTR lpString1, INTEGER cchCount1, WinApi_PtrWSTR lpString2, INTEGER cchCount2);
__EXTERN INTEGER __STDCALL ConfigurePortA (WinApi_PtrSTR pName, INTEGER hWnd, WinApi_PtrSTR pPortName);
__EXTERN INTEGER __STDCALL ConfigurePortA (WinApi_PtrSTR pName, INTEGER hWnd, WinApi_PtrSTR pPortName);
__EXTERN INTEGER __STDCALL ConfigurePortW (WinApi_PtrWSTR pName, INTEGER hWnd, WinApi_PtrWSTR pPortName);
__EXTERN INTEGER __STDCALL ConnectNamedPipe (INTEGER hNamedPipe, WinApi_OVERLAPPED *lpOverlapped);
__EXTERN INTEGER __STDCALL ConnectToPrinterDlg (INTEGER hwnd, SET Flags);
__EXTERN INTEGER __STDCALL ContinueDebugEvent (INTEGER dwProcessId, INTEGER dwThreadId, SET dwContinueStatus);
__EXTERN INTEGER __STDCALL ControlService (INTEGER hService, INTEGER dwControl, WinApi_SERVICE_STATUS *lpServiceStatus);
__EXTERN INTEGER __STDCALL ConvertDefaultLocale (INTEGER Locale);
__EXTERN INTEGER __STDCALL ConvertFiberToThread (void);
__EXTERN INTEGER __STDCALL ConvertThreadToFiber (INTEGER lpParameter);
__EXTERN INTEGER __STDCALL CopyAcceleratorTableA (INTEGER hAccelSrc, WinApi_ACCEL *lpAccelDst, INTEGER cAccelEntries);
__EXTERN INTEGER __STDCALL CopyAcceleratorTableA (INTEGER hAccelSrc, WinApi_ACCEL *lpAccelDst, INTEGER cAccelEntries);
__EXTERN INTEGER __STDCALL CopyAcceleratorTableW (INTEGER hAccelSrc, WinApi_ACCEL *lpAccelDst, INTEGER cAccelEntries);
__EXTERN INTEGER __STDCALL CopyEnhMetaFileA (INTEGER p0, WinApi_PtrSTR p1);
__EXTERN INTEGER __STDCALL CopyEnhMetaFileA (INTEGER p0, WinApi_PtrSTR p1);
__EXTERN INTEGER __STDCALL CopyEnhMetaFileW (INTEGER p0, WinApi_PtrWSTR p1);
__EXTERN INTEGER __STDCALL CopyFileA (WinApi_PtrSTR lpExistingFileName, WinApi_PtrSTR lpNewFileName, INTEGER bFailIfExists);
__EXTERN INTEGER __STDCALL CopyFileA (WinApi_PtrSTR lpExistingFileName, WinApi_PtrSTR lpNewFileName, INTEGER bFailIfExists);
__EXTERN INTEGER __STDCALL CopyFileExA (WinApi_PtrSTR lpExistingFileName, WinApi_PtrSTR lpNewFileName, WinApi_PROGRESS_ROUTINE lpProgressRoutine, INTEGER lpData, INTEGER *pbCancel, INTEGER dwCopyFlags);
__EXTERN INTEGER __STDCALL CopyFileExA (WinApi_PtrSTR lpExistingFileName, WinApi_PtrSTR lpNewFileName, WinApi_PROGRESS_ROUTINE lpProgressRoutine, INTEGER lpData, INTEGER *pbCancel, INTEGER dwCopyFlags);
__EXTERN INTEGER __STDCALL CopyFileExW (WinApi_PtrWSTR lpExistingFileName, WinApi_PtrWSTR lpNewFileName, WinApi_PROGRESS_ROUTINE lpProgressRoutine, INTEGER lpData, INTEGER *pbCancel, INTEGER dwCopyFlags);
__EXTERN INTEGER __STDCALL CopyFileW (WinApi_PtrWSTR lpExistingFileName, WinApi_PtrWSTR lpNewFileName, INTEGER bFailIfExists);
__EXTERN INTEGER __STDCALL CopyIcon (INTEGER hIcon);
__EXTERN INTEGER __STDCALL CopyImage (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4);
__EXTERN INTEGER __STDCALL CopyLZFile (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL CopyMetaFileA (INTEGER p0, WinApi_PtrSTR p1);
__EXTERN INTEGER __STDCALL CopyMetaFileA (INTEGER p0, WinApi_PtrSTR p1);
__EXTERN INTEGER __STDCALL CopyMetaFileW (INTEGER p0, WinApi_PtrWSTR p1);
__EXTERN INTEGER __STDCALL CopyRect (WinApi_RECT *lprcDst, WinApi_RECT *lprcSrc);
__EXTERN INTEGER __STDCALL CopySid (INTEGER nDestinationSidLength, INTEGER pDestinationSid, INTEGER pSourceSid);
__EXTERN INTEGER __STDCALL CountClipboardFormats (void);
__EXTERN INTEGER __STDCALL CreateAcceleratorTableA (WinApi_ACCEL *p0, INTEGER p1);
__EXTERN INTEGER __STDCALL CreateAcceleratorTableA (WinApi_ACCEL *p0, INTEGER p1);
__EXTERN INTEGER __STDCALL CreateAcceleratorTableW (WinApi_ACCEL *p0, INTEGER p1);
__EXTERN INTEGER __STDCALL CreateBitmap (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4);
__EXTERN INTEGER __STDCALL CreateBitmapIndirect (WinApi_BITMAP *p0);
__EXTERN INTEGER __STDCALL CreateBrushIndirect (WinApi_LOGBRUSH *p0);
__EXTERN INTEGER __STDCALL CreateCaret (INTEGER hWnd, INTEGER hBitmap, INTEGER nWidth, INTEGER nHeight);
__EXTERN INTEGER __STDCALL CreateColorSpaceA (WinApi_LOGCOLORSPACEA *p0);
__EXTERN INTEGER __STDCALL CreateColorSpaceA (WinApi_LOGCOLORSPACEA *p0);
__EXTERN INTEGER __STDCALL CreateColorSpaceW (WinApi_LOGCOLORSPACEW *p0);
__EXTERN INTEGER __STDCALL CreateCompatibleBitmap (INTEGER p0, INTEGER p1, INTEGER p2);
__EXTERN INTEGER __STDCALL CreateCompatibleDC (INTEGER p0);
__EXTERN INTEGER __STDCALL CreateConsoleScreenBuffer (SET dwDesiredAccess, SET dwShareMode, WinApi_SECURITY_ATTRIBUTES *lpSecurityAttributes, SET dwFlags, INTEGER lpScreenBufferData);
__EXTERN INTEGER __STDCALL CreateCursor (INTEGER hInst, INTEGER xHotSpot, INTEGER yHotSpot, INTEGER nWidth, INTEGER nHeight, INTEGER pvANDPlane, INTEGER pvXORPlane);
__EXTERN INTEGER __STDCALL CreateDCA (WinApi_PtrSTR p0, WinApi_PtrSTR p1, WinApi_PtrSTR p2, WinApi_DEVMODEA *p3);
__EXTERN INTEGER __STDCALL CreateDCA (WinApi_PtrSTR p0, WinApi_PtrSTR p1, WinApi_PtrSTR p2, WinApi_DEVMODEA *p3);
__EXTERN INTEGER __STDCALL CreateDCW (WinApi_PtrWSTR p0, WinApi_PtrWSTR p1, WinApi_PtrWSTR p2, WinApi_DEVMODEW *p3);
__EXTERN INTEGER __STDCALL CreateDIBPatternBrush (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL CreateDIBPatternBrushPt (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL CreateDIBSection (INTEGER p0, WinApi_BITMAPINFO *p1, INTEGER p2, INTEGER *p3, INTEGER p4, INTEGER p5);
__EXTERN INTEGER __STDCALL CreateDIBitmap (INTEGER p0, WinApi_BITMAPINFOHEADER *p1, INTEGER p2, INTEGER p3, WinApi_BITMAPINFO *p4, INTEGER p5);
__EXTERN INTEGER __STDCALL CreateDesktopA (WinApi_PtrSTR lpszDesktop, WinApi_PtrSTR lpszDevice, WinApi_DEVMODEA *pDevmode, SET dwFlags, SET dwDesiredAccess, WinApi_SECURITY_ATTRIBUTES *lpsa);
__EXTERN INTEGER __STDCALL CreateDesktopA (WinApi_PtrSTR lpszDesktop, WinApi_PtrSTR lpszDevice, WinApi_DEVMODEA *pDevmode, SET dwFlags, SET dwDesiredAccess, WinApi_SECURITY_ATTRIBUTES *lpsa);
__EXTERN INTEGER __STDCALL CreateDesktopW (WinApi_PtrWSTR lpszDesktop, WinApi_PtrWSTR lpszDevice, WinApi_DEVMODEW *pDevmode, SET dwFlags, SET dwDesiredAccess, WinApi_SECURITY_ATTRIBUTES *lpsa);
__EXTERN INTEGER __STDCALL CreateDialogParamA (INTEGER hInstance, WinApi_PtrSTR lpTemplateName, INTEGER hWndParent, WinApi_DLGPROC lpDialogFunc, INTEGER dwInitParam);
__EXTERN INTEGER __STDCALL CreateDialogParamA (INTEGER hInstance, WinApi_PtrSTR lpTemplateName, INTEGER hWndParent, WinApi_DLGPROC lpDialogFunc, INTEGER dwInitParam);
__EXTERN INTEGER __STDCALL CreateDialogParamW (INTEGER hInstance, WinApi_PtrWSTR lpTemplateName, INTEGER hWndParent, WinApi_DLGPROC lpDialogFunc, INTEGER dwInitParam);
__EXTERN INTEGER __STDCALL CreateDirectoryA (WinApi_PtrSTR lpPathName, WinApi_SECURITY_ATTRIBUTES *lpSecurityAttributes);
__EXTERN INTEGER __STDCALL CreateDirectoryA (WinApi_PtrSTR lpPathName, WinApi_SECURITY_ATTRIBUTES *lpSecurityAttributes);
__EXTERN INTEGER __STDCALL CreateDirectoryExA (WinApi_PtrSTR lpTemplateDirectory, WinApi_PtrSTR lpNewDirectory, WinApi_SECURITY_ATTRIBUTES *lpSecurityAttributes);
__EXTERN INTEGER __STDCALL CreateDirectoryExA (WinApi_PtrSTR lpTemplateDirectory, WinApi_PtrSTR lpNewDirectory, WinApi_SECURITY_ATTRIBUTES *lpSecurityAttributes);
__EXTERN INTEGER __STDCALL CreateDirectoryExW (WinApi_PtrWSTR lpTemplateDirectory, WinApi_PtrWSTR lpNewDirectory, WinApi_SECURITY_ATTRIBUTES *lpSecurityAttributes);
__EXTERN INTEGER __STDCALL CreateDirectoryW (WinApi_PtrWSTR lpPathName, WinApi_SECURITY_ATTRIBUTES *lpSecurityAttributes);
__EXTERN INTEGER __STDCALL CreateDiscardableBitmap (INTEGER p0, INTEGER p1, INTEGER p2);
__EXTERN INTEGER __STDCALL CreateEllipticRgn (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3);
__EXTERN INTEGER __STDCALL CreateEllipticRgnIndirect (WinApi_RECT *p0);
__EXTERN INTEGER __STDCALL CreateEnhMetaFileA (INTEGER p0, WinApi_PtrSTR p1, WinApi_RECT *p2, WinApi_PtrSTR p3);
__EXTERN INTEGER __STDCALL CreateEnhMetaFileA (INTEGER p0, WinApi_PtrSTR p1, WinApi_RECT *p2, WinApi_PtrSTR p3);
__EXTERN INTEGER __STDCALL CreateEnhMetaFileW (INTEGER p0, WinApi_PtrWSTR p1, WinApi_RECT *p2, WinApi_PtrWSTR p3);
__EXTERN INTEGER __STDCALL CreateEventA (WinApi_SECURITY_ATTRIBUTES *lpEventAttributes, INTEGER bManualReset, INTEGER bInitialState, WinApi_PtrSTR lpName);
__EXTERN INTEGER __STDCALL CreateEventA (WinApi_SECURITY_ATTRIBUTES *lpEventAttributes, INTEGER bManualReset, INTEGER bInitialState, WinApi_PtrSTR lpName);
__EXTERN INTEGER __STDCALL CreateEventW (WinApi_SECURITY_ATTRIBUTES *lpEventAttributes, INTEGER bManualReset, INTEGER bInitialState, WinApi_PtrWSTR lpName);
__EXTERN INTEGER __STDCALL CreateFiber (INTEGER dwStackSize, WinApi_FIBER_START_ROUTINE lpStartAddress, INTEGER lpParameter);
__EXTERN INTEGER __STDCALL CreateFiberEx (INTEGER dwStackCommitSize, INTEGER dwStackReserveSize, SET dwFlags, WinApi_FIBER_START_ROUTINE lpStartAddress, INTEGER lpParameter);
__EXTERN INTEGER __STDCALL CreateFileA (WinApi_PtrSTR lpFileName, SET dwDesiredAccess, SET dwShareMode, WinApi_SECURITY_ATTRIBUTES *lpSecurityAttributes, INTEGER dwCreationDisposition, SET dwFlagsAndAttributes, INTEGER hTemplateFile);
__EXTERN INTEGER __STDCALL CreateFileA (WinApi_PtrSTR lpFileName, SET dwDesiredAccess, SET dwShareMode, WinApi_SECURITY_ATTRIBUTES *lpSecurityAttributes, INTEGER dwCreationDisposition, SET dwFlagsAndAttributes, INTEGER hTemplateFile);
__EXTERN INTEGER __STDCALL CreateFileMappingA (INTEGER hFile, WinApi_SECURITY_ATTRIBUTES *lpFileMappingAttributes, SET flProtect, INTEGER dwMaximumSizeHigh, INTEGER dwMaximumSizeLow, WinApi_PtrSTR lpName);
__EXTERN INTEGER __STDCALL CreateFileMappingA (INTEGER hFile, WinApi_SECURITY_ATTRIBUTES *lpFileMappingAttributes, SET flProtect, INTEGER dwMaximumSizeHigh, INTEGER dwMaximumSizeLow, WinApi_PtrSTR lpName);
__EXTERN INTEGER __STDCALL CreateFileMappingW (INTEGER hFile, WinApi_SECURITY_ATTRIBUTES *lpFileMappingAttributes, SET flProtect, INTEGER dwMaximumSizeHigh, INTEGER dwMaximumSizeLow, WinApi_PtrWSTR lpName);
__EXTERN INTEGER __STDCALL CreateFileW (WinApi_PtrWSTR lpFileName, SET dwDesiredAccess, SET dwShareMode, WinApi_SECURITY_ATTRIBUTES *lpSecurityAttributes, INTEGER dwCreationDisposition, SET dwFlagsAndAttributes, INTEGER hTemplateFile);
__EXTERN INTEGER __STDCALL CreateFontA (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4, INTEGER p5, INTEGER p6, INTEGER p7, INTEGER p8, INTEGER p9, INTEGER p10, INTEGER p11, INTEGER p12, WinApi_PtrSTR p13);
__EXTERN INTEGER __STDCALL CreateFontA (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4, INTEGER p5, INTEGER p6, INTEGER p7, INTEGER p8, INTEGER p9, INTEGER p10, INTEGER p11, INTEGER p12, WinApi_PtrSTR p13);
__EXTERN INTEGER __STDCALL CreateFontIndirectA (WinApi_LOGFONTA *p0);
__EXTERN INTEGER __STDCALL CreateFontIndirectA (WinApi_LOGFONTA *p0);
__EXTERN INTEGER __STDCALL CreateFontIndirectW (WinApi_LOGFONTW *p0);
__EXTERN INTEGER __STDCALL CreateFontW (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4, INTEGER p5, INTEGER p6, INTEGER p7, INTEGER p8, INTEGER p9, INTEGER p10, INTEGER p11, INTEGER p12, WinApi_PtrWSTR p13);
__EXTERN INTEGER __STDCALL CreateHalftonePalette (INTEGER p0);
__EXTERN INTEGER __STDCALL CreateHatchBrush (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL CreateICA (WinApi_PtrSTR p0, WinApi_PtrSTR p1, WinApi_PtrSTR p2, WinApi_DEVMODEA *p3);
__EXTERN INTEGER __STDCALL CreateICA (WinApi_PtrSTR p0, WinApi_PtrSTR p1, WinApi_PtrSTR p2, WinApi_DEVMODEA *p3);
__EXTERN INTEGER __STDCALL CreateICW (WinApi_PtrWSTR p0, WinApi_PtrWSTR p1, WinApi_PtrWSTR p2, WinApi_DEVMODEW *p3);
__EXTERN INTEGER __STDCALL CreateIcon (INTEGER hInstance, INTEGER nWidth, INTEGER nHeight, CHAR cPlanes, CHAR cBitsPixel, CHAR *lpbANDbits, CHAR *lpbXORbits);
__EXTERN INTEGER __STDCALL CreateIconFromResource (CHAR *presbits, INTEGER dwResSize, INTEGER fIcon, INTEGER dwVer);
__EXTERN INTEGER __STDCALL CreateIconFromResourceEx (CHAR *presbits, INTEGER dwResSize, INTEGER fIcon, INTEGER dwVer, INTEGER cxDesired, INTEGER cyDesired, SET Flags);
__EXTERN INTEGER __STDCALL CreateIconIndirect (WinApi_ICONINFO *piconinfo);
__EXTERN INTEGER __STDCALL CreateIoCompletionPort (INTEGER FileHandle, INTEGER ExistingCompletionPort, INTEGER CompletionKey, INTEGER NumberOfConcurrentThreads);
__EXTERN INTEGER __STDCALL CreateMDIWindowA (WinApi_PtrSTR lpClassName, WinApi_PtrSTR lpWindowName, SET dwStyle, INTEGER X, INTEGER Y, INTEGER nWidth, INTEGER nHeight, INTEGER hWndParent, INTEGER hInstance, INTEGER lParam);
__EXTERN INTEGER __STDCALL CreateMDIWindowA (WinApi_PtrSTR lpClassName, WinApi_PtrSTR lpWindowName, SET dwStyle, INTEGER X, INTEGER Y, INTEGER nWidth, INTEGER nHeight, INTEGER hWndParent, INTEGER hInstance, INTEGER lParam);
__EXTERN INTEGER __STDCALL CreateMDIWindowW (WinApi_PtrWSTR lpClassName, WinApi_PtrWSTR lpWindowName, SET dwStyle, INTEGER X, INTEGER Y, INTEGER nWidth, INTEGER nHeight, INTEGER hWndParent, INTEGER hInstance, INTEGER lParam);
__EXTERN INTEGER __STDCALL CreateMailslotA (WinApi_PtrSTR lpName, INTEGER nMaxMessageSize, INTEGER lReadTimeout, WinApi_SECURITY_ATTRIBUTES *lpSecurityAttributes);
__EXTERN INTEGER __STDCALL CreateMailslotA (WinApi_PtrSTR lpName, INTEGER nMaxMessageSize, INTEGER lReadTimeout, WinApi_SECURITY_ATTRIBUTES *lpSecurityAttributes);
__EXTERN INTEGER __STDCALL CreateMailslotW (WinApi_PtrWSTR lpName, INTEGER nMaxMessageSize, INTEGER lReadTimeout, WinApi_SECURITY_ATTRIBUTES *lpSecurityAttributes);
__EXTERN INTEGER __STDCALL CreateMenu (void);
__EXTERN INTEGER __STDCALL CreateMetaFileA (WinApi_PtrSTR p0);
__EXTERN INTEGER __STDCALL CreateMetaFileA (WinApi_PtrSTR p0);
__EXTERN INTEGER __STDCALL CreateMetaFileW (WinApi_PtrWSTR p0);
__EXTERN INTEGER __STDCALL CreateMutexA (WinApi_SECURITY_ATTRIBUTES *lpMutexAttributes, INTEGER bInitialOwner, WinApi_PtrSTR lpName);
__EXTERN INTEGER __STDCALL CreateMutexA (WinApi_SECURITY_ATTRIBUTES *lpMutexAttributes, INTEGER bInitialOwner, WinApi_PtrSTR lpName);
__EXTERN INTEGER __STDCALL CreateMutexW (WinApi_SECURITY_ATTRIBUTES *lpMutexAttributes, INTEGER bInitialOwner, WinApi_PtrWSTR lpName);
__EXTERN INTEGER __STDCALL CreateNamedPipeA (WinApi_PtrSTR lpName, INTEGER dwOpenMode, INTEGER dwPipeMode, INTEGER nMaxInstances, INTEGER nOutBufferSize, INTEGER nInBufferSize, INTEGER nDefaultTimeOut, WinApi_SECURITY_ATTRIBUTES *lpSecurityAttributes);
__EXTERN INTEGER __STDCALL CreateNamedPipeA (WinApi_PtrSTR lpName, INTEGER dwOpenMode, INTEGER dwPipeMode, INTEGER nMaxInstances, INTEGER nOutBufferSize, INTEGER nInBufferSize, INTEGER nDefaultTimeOut, WinApi_SECURITY_ATTRIBUTES *lpSecurityAttributes);
__EXTERN INTEGER __STDCALL CreateNamedPipeW (WinApi_PtrWSTR lpName, INTEGER dwOpenMode, INTEGER dwPipeMode, INTEGER nMaxInstances, INTEGER nOutBufferSize, INTEGER nInBufferSize, INTEGER nDefaultTimeOut, WinApi_SECURITY_ATTRIBUTES *lpSecurityAttributes);
__EXTERN INTEGER __STDCALL CreatePalette (WinApi_LOGPALETTE *p0);
__EXTERN INTEGER __STDCALL CreatePatternBrush (INTEGER p0);
__EXTERN INTEGER __STDCALL CreatePen (INTEGER p0, INTEGER p1, INTEGER p2);
__EXTERN INTEGER __STDCALL CreatePenIndirect (WinApi_LOGPEN *p0);
__EXTERN INTEGER __STDCALL CreatePipe (INTEGER *hReadPipe, INTEGER *hWritePipe, WinApi_SECURITY_ATTRIBUTES *lpPipeAttributes, INTEGER nSize);
__EXTERN INTEGER __STDCALL CreatePolyPolygonRgn (WinApi_POINT *p0, INTEGER *p1, INTEGER p2, INTEGER p3);
__EXTERN INTEGER __STDCALL CreatePolygonRgn (WinApi_POINT *p0, INTEGER p1, INTEGER p2);
__EXTERN INTEGER __STDCALL CreatePopupMenu (void);
__EXTERN INTEGER __STDCALL CreatePrivateObjectSecurity (INTEGER ParentDescriptor, INTEGER CreatorDescriptor, INTEGER *NewDescriptor, INTEGER IsDirectoryObject, INTEGER Token, WinApi_GENERIC_MAPPING *GenericMapping);
__EXTERN INTEGER __STDCALL CreateProcessA (WinApi_PtrSTR lpApplicationName, WinApi_PtrSTR lpCommandLine, WinApi_SECURITY_ATTRIBUTES *lpProcessAttributes, WinApi_SECURITY_ATTRIBUTES *lpThreadAttributes, INTEGER bInheritHandles, SET dwCreationFlags, INTEGER lpEnvironment, WinApi_PtrSTR lpCurrentDirectory, WinApi_STARTUPINFOA *lpStartupInfo, WinApi_PROCESS_INFORMATION *lpProcessInformation);
__EXTERN INTEGER __STDCALL CreateProcessA (WinApi_PtrSTR lpApplicationName, WinApi_PtrSTR lpCommandLine, WinApi_SECURITY_ATTRIBUTES *lpProcessAttributes, WinApi_SECURITY_ATTRIBUTES *lpThreadAttributes, INTEGER bInheritHandles, SET dwCreationFlags, INTEGER lpEnvironment, WinApi_PtrSTR lpCurrentDirectory, WinApi_STARTUPINFOA *lpStartupInfo, WinApi_PROCESS_INFORMATION *lpProcessInformation);
__EXTERN INTEGER __STDCALL CreateProcessAsUserA (INTEGER hToken, WinApi_PtrSTR lpApplicationName, WinApi_PtrSTR lpCommandLine, WinApi_SECURITY_ATTRIBUTES *lpProcessAttributes, WinApi_SECURITY_ATTRIBUTES *lpThreadAttributes, INTEGER bInheritHandles, SET dwCreationFlags, INTEGER lpEnvironment, WinApi_PtrSTR lpCurrentDirectory, WinApi_STARTUPINFOA *lpStartupInfo, WinApi_PROCESS_INFORMATION *lpProcessInformation);
__EXTERN INTEGER __STDCALL CreateProcessAsUserA (INTEGER hToken, WinApi_PtrSTR lpApplicationName, WinApi_PtrSTR lpCommandLine, WinApi_SECURITY_ATTRIBUTES *lpProcessAttributes, WinApi_SECURITY_ATTRIBUTES *lpThreadAttributes, INTEGER bInheritHandles, SET dwCreationFlags, INTEGER lpEnvironment, WinApi_PtrSTR lpCurrentDirectory, WinApi_STARTUPINFOA *lpStartupInfo, WinApi_PROCESS_INFORMATION *lpProcessInformation);
__EXTERN INTEGER __STDCALL CreateProcessAsUserW (INTEGER hToken, WinApi_PtrWSTR lpApplicationName, WinApi_PtrWSTR lpCommandLine, WinApi_SECURITY_ATTRIBUTES *lpProcessAttributes, WinApi_SECURITY_ATTRIBUTES *lpThreadAttributes, INTEGER bInheritHandles, SET dwCreationFlags, INTEGER lpEnvironment, WinApi_PtrWSTR lpCurrentDirectory, WinApi_STARTUPINFOW *lpStartupInfo, WinApi_PROCESS_INFORMATION *lpProcessInformation);
__EXTERN INTEGER __STDCALL CreateProcessW (WinApi_PtrWSTR lpApplicationName, WinApi_PtrWSTR lpCommandLine, WinApi_SECURITY_ATTRIBUTES *lpProcessAttributes, WinApi_SECURITY_ATTRIBUTES *lpThreadAttributes, INTEGER bInheritHandles, SET dwCreationFlags, INTEGER lpEnvironment, WinApi_PtrWSTR lpCurrentDirectory, WinApi_STARTUPINFOW *lpStartupInfo, WinApi_PROCESS_INFORMATION *lpProcessInformation);
__EXTERN INTEGER __STDCALL CreateRectRgn (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3);
__EXTERN INTEGER __STDCALL CreateRectRgnIndirect (WinApi_RECT *p0);
__EXTERN INTEGER __STDCALL CreateRemoteThread (INTEGER hProcess, WinApi_SECURITY_ATTRIBUTES *lpThreadAttributes, INTEGER dwStackSize, WinApi_THREAD_START_ROUTINE lpStartAddress, INTEGER lpParameter, SET dwCreationFlags, INTEGER *lpThreadId);
__EXTERN INTEGER __STDCALL CreateRoundRectRgn (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4, INTEGER p5);
__EXTERN INTEGER __STDCALL CreateScalableFontResourceA (INTEGER p0, WinApi_PtrSTR p1, WinApi_PtrSTR p2, WinApi_PtrSTR p3);
__EXTERN INTEGER __STDCALL CreateScalableFontResourceA (INTEGER p0, WinApi_PtrSTR p1, WinApi_PtrSTR p2, WinApi_PtrSTR p3);
__EXTERN INTEGER __STDCALL CreateScalableFontResourceW (INTEGER p0, WinApi_PtrWSTR p1, WinApi_PtrWSTR p2, WinApi_PtrWSTR p3);
__EXTERN INTEGER __STDCALL CreateSemaphoreA (WinApi_SECURITY_ATTRIBUTES *lpSemaphoreAttributes, INTEGER lInitialCount, INTEGER lMaximumCount, WinApi_PtrSTR lpName);
__EXTERN INTEGER __STDCALL CreateSemaphoreA (WinApi_SECURITY_ATTRIBUTES *lpSemaphoreAttributes, INTEGER lInitialCount, INTEGER lMaximumCount, WinApi_PtrSTR lpName);
__EXTERN INTEGER __STDCALL CreateSemaphoreW (WinApi_SECURITY_ATTRIBUTES *lpSemaphoreAttributes, INTEGER lInitialCount, INTEGER lMaximumCount, WinApi_PtrWSTR lpName);
__EXTERN INTEGER __STDCALL CreateServiceA (INTEGER hSCManager, WinApi_PtrSTR lpServiceName, WinApi_PtrSTR lpDisplayName, SET dwDesiredAccess, SET dwServiceType, INTEGER dwStartType, INTEGER dwErrorControl, WinApi_PtrSTR lpBinaryPathName, WinApi_PtrSTR lpLoadOrderGroup, INTEGER *lpdwTagId, WinApi_PtrSTR lpDependencies, WinApi_PtrSTR lpServiceStartName, WinApi_PtrSTR lpPassword);
__EXTERN INTEGER __STDCALL CreateServiceA (INTEGER hSCManager, WinApi_PtrSTR lpServiceName, WinApi_PtrSTR lpDisplayName, SET dwDesiredAccess, SET dwServiceType, INTEGER dwStartType, INTEGER dwErrorControl, WinApi_PtrSTR lpBinaryPathName, WinApi_PtrSTR lpLoadOrderGroup, INTEGER *lpdwTagId, WinApi_PtrSTR lpDependencies, WinApi_PtrSTR lpServiceStartName, WinApi_PtrSTR lpPassword);
__EXTERN INTEGER __STDCALL CreateServiceW (INTEGER hSCManager, WinApi_PtrWSTR lpServiceName, WinApi_PtrWSTR lpDisplayName, SET dwDesiredAccess, SET dwServiceType, INTEGER dwStartType, INTEGER dwErrorControl, WinApi_PtrWSTR lpBinaryPathName, WinApi_PtrWSTR lpLoadOrderGroup, INTEGER *lpdwTagId, WinApi_PtrWSTR lpDependencies, WinApi_PtrWSTR lpServiceStartName, WinApi_PtrWSTR lpPassword);
__EXTERN INTEGER __STDCALL CreateSolidBrush (INTEGER p0);
__EXTERN INTEGER __STDCALL CreateTapePartition (INTEGER hDevice, INTEGER dwPartitionMethod, INTEGER dwCount, INTEGER dwSize);
__EXTERN INTEGER __STDCALL CreateThread (WinApi_SECURITY_ATTRIBUTES *lpThreadAttributes, INTEGER dwStackSize, WinApi_THREAD_START_ROUTINE lpStartAddress, INTEGER lpParameter, SET dwCreationFlags, INTEGER *lpThreadId);
__EXTERN INTEGER __STDCALL CreateWaitableTimerA (WinApi_SECURITY_ATTRIBUTES *lpTimerAttributes, INTEGER bManualReset, WinApi_PtrSTR lpTimerName);
__EXTERN INTEGER __STDCALL CreateWaitableTimerA (WinApi_SECURITY_ATTRIBUTES *lpTimerAttributes, INTEGER bManualReset, WinApi_PtrSTR lpTimerName);
__EXTERN INTEGER __STDCALL CreateWaitableTimerW (WinApi_SECURITY_ATTRIBUTES *lpTimerAttributes, INTEGER bManualReset, WinApi_PtrWSTR lpTimerName);
__EXTERN INTEGER __STDCALL CreateWindowExA (SET dwExStyle, WinApi_PtrSTR lpClassName, WinApi_PtrSTR lpWindowName, SET dwStyle, INTEGER X, INTEGER Y, INTEGER nWidth, INTEGER nHeight, INTEGER hWndParent, INTEGER hMenu, INTEGER hInstance, INTEGER lpParam);
__EXTERN INTEGER __STDCALL CreateWindowExA (SET dwExStyle, WinApi_PtrSTR lpClassName, WinApi_PtrSTR lpWindowName, SET dwStyle, INTEGER X, INTEGER Y, INTEGER nWidth, INTEGER nHeight, INTEGER hWndParent, INTEGER hMenu, INTEGER hInstance, INTEGER lpParam);
__EXTERN INTEGER __STDCALL CreateWindowExW (SET dwExStyle, WinApi_PtrWSTR lpClassName, WinApi_PtrWSTR lpWindowName, SET dwStyle, INTEGER X, INTEGER Y, INTEGER nWidth, INTEGER nHeight, INTEGER hWndParent, INTEGER hMenu, INTEGER hInstance, INTEGER lpParam);
__EXTERN INTEGER __STDCALL CreateWindowStationA (WinApi_PtrSTR lpwinsta, INTEGER dwReserved, SET dwDesiredAccess, WinApi_SECURITY_ATTRIBUTES *lpsa);
__EXTERN INTEGER __STDCALL CreateWindowStationA (WinApi_PtrSTR lpwinsta, INTEGER dwReserved, SET dwDesiredAccess, WinApi_SECURITY_ATTRIBUTES *lpsa);
__EXTERN INTEGER __STDCALL CreateWindowStationW (WinApi_PtrWSTR lpwinsta, INTEGER dwReserved, SET dwDesiredAccess, WinApi_SECURITY_ATTRIBUTES *lpsa);
__EXTERN INTEGER __STDCALL DPtoLP (INTEGER p0, WinApi_POINT *p1, INTEGER p2);
__EXTERN INTEGER __STDCALL DdeAbandonTransaction (INTEGER idInst, INTEGER hConv, INTEGER idTransaction);
__EXTERN WinApi_RetDdeAccessData __STDCALL DdeAccessData (INTEGER hData, INTEGER *pcbDataSize);
__EXTERN INTEGER __STDCALL DdeAddData (INTEGER hData, CHAR *pSrc, INTEGER cb, INTEGER cbOff);
__EXTERN INTEGER __STDCALL DdeClientTransaction (CHAR *pData, INTEGER cbData, INTEGER hConv, INTEGER hszItem, INTEGER wFmt, INTEGER wType, INTEGER dwTimeout, INTEGER *pdwResult);
__EXTERN INTEGER __STDCALL DdeCmpStringHandles (INTEGER hsz1, INTEGER hsz2);
__EXTERN INTEGER __STDCALL DdeConnect (INTEGER idInst, INTEGER hszService, INTEGER hszTopic, WinApi_CONVCONTEXT *pCC);
__EXTERN INTEGER __STDCALL DdeConnectList (INTEGER idInst, INTEGER hszService, INTEGER hszTopic, INTEGER hConvList, WinApi_CONVCONTEXT *pCC);
__EXTERN INTEGER __STDCALL DdeCreateDataHandle (INTEGER idInst, CHAR *pSrc, INTEGER cb, INTEGER cbOff, INTEGER hszItem, INTEGER wFmt, INTEGER afCmd);
__EXTERN INTEGER __STDCALL DdeCreateStringHandleA (INTEGER idInst, WinApi_PtrSTR psz, INTEGER iCodePage);
__EXTERN INTEGER __STDCALL DdeCreateStringHandleA (INTEGER idInst, WinApi_PtrSTR psz, INTEGER iCodePage);
__EXTERN INTEGER __STDCALL DdeCreateStringHandleW (INTEGER idInst, WinApi_PtrWSTR psz, INTEGER iCodePage);
__EXTERN INTEGER __STDCALL DdeDisconnect (INTEGER hConv);
__EXTERN INTEGER __STDCALL DdeDisconnectList (INTEGER hConvList);
__EXTERN INTEGER __STDCALL DdeEnableCallback (INTEGER idInst, INTEGER hConv, INTEGER wCmd);
__EXTERN INTEGER __STDCALL DdeFreeDataHandle (INTEGER hData);
__EXTERN INTEGER __STDCALL DdeFreeStringHandle (INTEGER idInst, INTEGER hsz);
__EXTERN INTEGER __STDCALL DdeGetData (INTEGER hData, CHAR *pDst, INTEGER cbMax, INTEGER cbOff);
__EXTERN INTEGER __STDCALL DdeGetLastError (INTEGER idInst);
__EXTERN INTEGER __STDCALL DdeImpersonateClient (INTEGER hConv);
__EXTERN INTEGER __STDCALL DdeInitializeA (INTEGER *pidInst, WinApi_FNCALLBACK pfnCallback, INTEGER afCmd, INTEGER ulRes);
__EXTERN INTEGER __STDCALL DdeInitializeA (INTEGER *pidInst, WinApi_FNCALLBACK pfnCallback, INTEGER afCmd, INTEGER ulRes);
__EXTERN INTEGER __STDCALL DdeInitializeW (INTEGER *pidInst, WinApi_FNCALLBACK pfnCallback, INTEGER afCmd, INTEGER ulRes);
__EXTERN INTEGER __STDCALL DdeKeepStringHandle (INTEGER idInst, INTEGER hsz);
__EXTERN INTEGER __STDCALL DdeNameService (INTEGER idInst, INTEGER hsz1, INTEGER hsz2, INTEGER afCmd);
__EXTERN INTEGER __STDCALL DdePostAdvise (INTEGER idInst, INTEGER hszTopic, INTEGER hszItem);
__EXTERN INTEGER __STDCALL DdeQueryConvInfo (INTEGER hConv, INTEGER idTransaction, WinApi_CONVINFO *pConvInfo);
__EXTERN INTEGER __STDCALL DdeQueryNextServer (INTEGER hConvList, INTEGER hConvPrev);
__EXTERN INTEGER __STDCALL DdeQueryStringA (INTEGER idInst, INTEGER hsz, WinApi_PtrSTR psz, INTEGER cchMax, INTEGER iCodePage);
__EXTERN INTEGER __STDCALL DdeQueryStringA (INTEGER idInst, INTEGER hsz, WinApi_PtrSTR psz, INTEGER cchMax, INTEGER iCodePage);
__EXTERN INTEGER __STDCALL DdeQueryStringW (INTEGER idInst, INTEGER hsz, WinApi_PtrWSTR psz, INTEGER cchMax, INTEGER iCodePage);
__EXTERN INTEGER __STDCALL DdeReconnect (INTEGER hConv);
__EXTERN INTEGER __STDCALL DdeSetQualityOfService (INTEGER hwndClient, WinApi_SECURITY_QUALITY_OF_SERVICE *pqosNew, WinApi_SECURITY_QUALITY_OF_SERVICE *pqosPrev);
__EXTERN INTEGER __STDCALL DdeSetUserHandle (INTEGER hConv, INTEGER id, INTEGER hUser);
__EXTERN INTEGER __STDCALL DdeUnaccessData (INTEGER hData);
__EXTERN INTEGER __STDCALL DdeUninitialize (INTEGER idInst);
__EXTERN INTEGER __STDCALL DebugActiveProcess (INTEGER dwProcessId);
__EXTERN INTEGER __STDCALL DebugActiveProcessStop (INTEGER dwProcessId);
__EXTERN void __STDCALL DebugBreak (void);
__EXTERN INTEGER __STDCALL DebugBreakProcess (INTEGER hProcess);
__EXTERN INTEGER __STDCALL DebugSetProcessKillOnExit (INTEGER killOnExit);
__EXTERN INTEGER __STDCALL DefDlgProcA (INTEGER hDlg, INTEGER Msg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL DefDlgProcA (INTEGER hDlg, INTEGER Msg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL DefDlgProcW (INTEGER hDlg, INTEGER Msg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL DefFrameProcA (INTEGER hWnd, INTEGER hWndMDIClient, INTEGER uMsg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL DefFrameProcA (INTEGER hWnd, INTEGER hWndMDIClient, INTEGER uMsg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL DefFrameProcW (INTEGER hWnd, INTEGER hWndMDIClient, INTEGER uMsg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL DefMDIChildProcA (INTEGER hWnd, INTEGER uMsg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL DefMDIChildProcA (INTEGER hWnd, INTEGER uMsg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL DefMDIChildProcW (INTEGER hWnd, INTEGER uMsg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL DefWindowProcA (INTEGER hWnd, INTEGER Msg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL DefWindowProcA (INTEGER hWnd, INTEGER Msg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL DefWindowProcW (INTEGER hWnd, INTEGER Msg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL DeferWindowPos (INTEGER hWinPosInfo, INTEGER hWnd, INTEGER hWndInsertAfter, INTEGER x, INTEGER y, INTEGER cx, INTEGER cy, SET uFlags);
__EXTERN INTEGER __STDCALL DefineDosDeviceA (SET dwFlags, WinApi_PtrSTR lpDeviceName, WinApi_PtrSTR lpTargetPath);
__EXTERN INTEGER __STDCALL DefineDosDeviceA (SET dwFlags, WinApi_PtrSTR lpDeviceName, WinApi_PtrSTR lpTargetPath);
__EXTERN INTEGER __STDCALL DefineDosDeviceW (SET dwFlags, WinApi_PtrWSTR lpDeviceName, WinApi_PtrWSTR lpTargetPath);
__EXTERN INTEGER __STDCALL DeleteAce (WinApi_ACL *pAcl, INTEGER dwAceIndex);
__EXTERN SHORTINT __STDCALL DeleteAtom (SHORTINT nAtom);
__EXTERN INTEGER __STDCALL DeleteColorSpace (INTEGER p0);
__EXTERN void __STDCALL DeleteCriticalSection (WinApi_RTL_CRITICAL_SECTION *lpCriticalSection);
__EXTERN INTEGER __STDCALL DeleteDC (INTEGER p0);
__EXTERN INTEGER __STDCALL DeleteEnhMetaFile (INTEGER p0);
__EXTERN void __STDCALL DeleteFiber (INTEGER lpFiber);
__EXTERN INTEGER __STDCALL DeleteFileA (WinApi_PtrSTR lpFileName);
__EXTERN INTEGER __STDCALL DeleteFileA (WinApi_PtrSTR lpFileName);
__EXTERN INTEGER __STDCALL DeleteFileW (WinApi_PtrWSTR lpFileName);
__EXTERN INTEGER __STDCALL DeleteFormA (INTEGER hPrinter, WinApi_PtrSTR pFormName);
__EXTERN INTEGER __STDCALL DeleteFormA (INTEGER hPrinter, WinApi_PtrSTR pFormName);
__EXTERN INTEGER __STDCALL DeleteFormW (INTEGER hPrinter, WinApi_PtrWSTR pFormName);
__EXTERN INTEGER __STDCALL DeleteMenu (INTEGER hMenu, INTEGER uPosition, SET uFlags);
__EXTERN INTEGER __STDCALL DeleteMetaFile (INTEGER p0);
__EXTERN INTEGER __STDCALL DeleteMonitorA (WinApi_PtrSTR pName, WinApi_PtrSTR pEnvironment, WinApi_PtrSTR pMonitorName);
__EXTERN INTEGER __STDCALL DeleteMonitorA (WinApi_PtrSTR pName, WinApi_PtrSTR pEnvironment, WinApi_PtrSTR pMonitorName);
__EXTERN INTEGER __STDCALL DeleteMonitorW (WinApi_PtrWSTR pName, WinApi_PtrWSTR pEnvironment, WinApi_PtrWSTR pMonitorName);
__EXTERN INTEGER __STDCALL DeleteObject (INTEGER p0);
__EXTERN INTEGER __STDCALL DeletePortA (WinApi_PtrSTR pName, INTEGER hWnd, WinApi_PtrSTR pPortName);
__EXTERN INTEGER __STDCALL DeletePortA (WinApi_PtrSTR pName, INTEGER hWnd, WinApi_PtrSTR pPortName);
__EXTERN INTEGER __STDCALL DeletePortW (WinApi_PtrWSTR pName, INTEGER hWnd, WinApi_PtrWSTR pPortName);
__EXTERN INTEGER __STDCALL DeletePrintProcessorA (WinApi_PtrSTR pName, WinApi_PtrSTR pEnvironment, WinApi_PtrSTR pPrintProcessorName);
__EXTERN INTEGER __STDCALL DeletePrintProcessorA (WinApi_PtrSTR pName, WinApi_PtrSTR pEnvironment, WinApi_PtrSTR pPrintProcessorName);
__EXTERN INTEGER __STDCALL DeletePrintProcessorW (WinApi_PtrWSTR pName, WinApi_PtrWSTR pEnvironment, WinApi_PtrWSTR pPrintProcessorName);
__EXTERN INTEGER __STDCALL DeletePrintProvidorA (WinApi_PtrSTR pName, WinApi_PtrSTR pEnvironment, WinApi_PtrSTR pPrintProvidorName);
__EXTERN INTEGER __STDCALL DeletePrintProvidorA (WinApi_PtrSTR pName, WinApi_PtrSTR pEnvironment, WinApi_PtrSTR pPrintProvidorName);
__EXTERN INTEGER __STDCALL DeletePrintProvidorW (WinApi_PtrWSTR pName, WinApi_PtrWSTR pEnvironment, WinApi_PtrWSTR pPrintProvidorName);
__EXTERN INTEGER __STDCALL DeletePrinter (INTEGER hPrinter);
__EXTERN INTEGER __STDCALL DeletePrinterConnectionA (WinApi_PtrSTR pName);
__EXTERN INTEGER __STDCALL DeletePrinterConnectionA (WinApi_PtrSTR pName);
__EXTERN INTEGER __STDCALL DeletePrinterConnectionW (WinApi_PtrWSTR pName);
__EXTERN INTEGER __STDCALL DeletePrinterDriverA (WinApi_PtrSTR pName, WinApi_PtrSTR pEnvironment, WinApi_PtrSTR pDriverName);
__EXTERN INTEGER __STDCALL DeletePrinterDriverA (WinApi_PtrSTR pName, WinApi_PtrSTR pEnvironment, WinApi_PtrSTR pDriverName);
__EXTERN INTEGER __STDCALL DeletePrinterDriverW (WinApi_PtrWSTR pName, WinApi_PtrWSTR pEnvironment, WinApi_PtrWSTR pDriverName);
__EXTERN INTEGER __STDCALL DeleteService (INTEGER hService);
__EXTERN INTEGER __STDCALL DeregisterEventSource (INTEGER hEventLog);
__EXTERN INTEGER __STDCALL DescribePixelFormat (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_PIXELFORMATDESCRIPTOR *p3);
__EXTERN INTEGER __STDCALL DestroyAcceleratorTable (INTEGER hAccel);
__EXTERN INTEGER __STDCALL DestroyCaret (void);
__EXTERN INTEGER __STDCALL DestroyCursor (INTEGER hCursor);
__EXTERN INTEGER __STDCALL DestroyIcon (INTEGER hIcon);
__EXTERN INTEGER __STDCALL DestroyMenu (INTEGER hMenu);
__EXTERN INTEGER __STDCALL DestroyPrivateObjectSecurity (INTEGER *ObjectDescriptor);
__EXTERN INTEGER __STDCALL DestroyWindow (INTEGER hWnd);
__EXTERN INTEGER __STDCALL DeviceCapabilitiesA (WinApi_PtrSTR p0, WinApi_PtrSTR p1, SHORTINT p2, WinApi_PtrSTR p3, WinApi_DEVMODEA *p4);
__EXTERN INTEGER __STDCALL DeviceCapabilitiesA (WinApi_PtrSTR p0, WinApi_PtrSTR p1, SHORTINT p2, WinApi_PtrSTR p3, WinApi_DEVMODEA *p4);
__EXTERN INTEGER __STDCALL DeviceCapabilitiesW (WinApi_PtrWSTR p0, WinApi_PtrWSTR p1, SHORTINT p2, WinApi_PtrWSTR p3, WinApi_DEVMODEW *p4);
__EXTERN INTEGER __STDCALL DeviceIoControl (INTEGER hDevice, INTEGER dwIoControlCode, INTEGER lpInBuffer, INTEGER nInBufferSize, INTEGER lpOutBuffer, INTEGER nOutBufferSize, INTEGER *lpBytesReturned, WinApi_OVERLAPPED *lpOverlapped);
__EXTERN INTEGER __STDCALL DialogBoxParamA (INTEGER hInstance, WinApi_PtrSTR lpTemplateName, INTEGER hWndParent, WinApi_DLGPROC lpDialogFunc, INTEGER dwInitParam);
__EXTERN INTEGER __STDCALL DialogBoxParamA (INTEGER hInstance, WinApi_PtrSTR lpTemplateName, INTEGER hWndParent, WinApi_DLGPROC lpDialogFunc, INTEGER dwInitParam);
__EXTERN INTEGER __STDCALL DialogBoxParamW (INTEGER hInstance, WinApi_PtrWSTR lpTemplateName, INTEGER hWndParent, WinApi_DLGPROC lpDialogFunc, INTEGER dwInitParam);
__EXTERN INTEGER __STDCALL DisableThreadLibraryCalls (INTEGER hLibModule);
__EXTERN INTEGER __STDCALL DisconnectNamedPipe (INTEGER hNamedPipe);
__EXTERN INTEGER __STDCALL DispatchMessageA (WinApi_MSG *lpMsg);
__EXTERN INTEGER __STDCALL DispatchMessageA (WinApi_MSG *lpMsg);
__EXTERN INTEGER __STDCALL DispatchMessageW (WinApi_MSG *lpMsg);
__EXTERN INTEGER __STDCALL DlgDirListA (INTEGER hDlg, WinApi_PtrSTR lpPathSpec, INTEGER nIDListBox, INTEGER nIDStaticPath, SET uFileType);
__EXTERN INTEGER __STDCALL DlgDirListA (INTEGER hDlg, WinApi_PtrSTR lpPathSpec, INTEGER nIDListBox, INTEGER nIDStaticPath, SET uFileType);
__EXTERN INTEGER __STDCALL DlgDirListComboBoxA (INTEGER hDlg, WinApi_PtrSTR lpPathSpec, INTEGER nIDComboBox, INTEGER nIDStaticPath, INTEGER uFiletype);
__EXTERN INTEGER __STDCALL DlgDirListComboBoxA (INTEGER hDlg, WinApi_PtrSTR lpPathSpec, INTEGER nIDComboBox, INTEGER nIDStaticPath, INTEGER uFiletype);
__EXTERN INTEGER __STDCALL DlgDirListComboBoxW (INTEGER hDlg, WinApi_PtrWSTR lpPathSpec, INTEGER nIDComboBox, INTEGER nIDStaticPath, INTEGER uFiletype);
__EXTERN INTEGER __STDCALL DlgDirListW (INTEGER hDlg, WinApi_PtrWSTR lpPathSpec, INTEGER nIDListBox, INTEGER nIDStaticPath, SET uFileType);
__EXTERN INTEGER __STDCALL DlgDirSelectComboBoxExA (INTEGER hDlg, WinApi_PtrSTR lpString, INTEGER nCount, INTEGER nIDComboBox);
__EXTERN INTEGER __STDCALL DlgDirSelectComboBoxExA (INTEGER hDlg, WinApi_PtrSTR lpString, INTEGER nCount, INTEGER nIDComboBox);
__EXTERN INTEGER __STDCALL DlgDirSelectComboBoxExW (INTEGER hDlg, WinApi_PtrWSTR lpString, INTEGER nCount, INTEGER nIDComboBox);
__EXTERN INTEGER __STDCALL DlgDirSelectExA (INTEGER hDlg, WinApi_PtrSTR lpString, INTEGER nCount, INTEGER nIDListBox);
__EXTERN INTEGER __STDCALL DlgDirSelectExA (INTEGER hDlg, WinApi_PtrSTR lpString, INTEGER nCount, INTEGER nIDListBox);
__EXTERN INTEGER __STDCALL DlgDirSelectExW (INTEGER hDlg, WinApi_PtrWSTR lpString, INTEGER nCount, INTEGER nIDListBox);
__EXTERN INTEGER __STDCALL DoEnvironmentSubstA (WinApi_PtrSTR szString, INTEGER cbString);
__EXTERN INTEGER __STDCALL DoEnvironmentSubstA (WinApi_PtrSTR szString, INTEGER cbString);
__EXTERN INTEGER __STDCALL DoEnvironmentSubstW (WinApi_PtrWSTR szString, INTEGER cbString);
__EXTERN INTEGER __STDCALL DocumentPropertiesA (INTEGER hWnd, INTEGER hPrinter, WinApi_PtrSTR pDeviceName, WinApi_DEVMODEA *pDevModeOutput, WinApi_DEVMODEA *pDevModeInput, SET fMode);
__EXTERN INTEGER __STDCALL DocumentPropertiesA (INTEGER hWnd, INTEGER hPrinter, WinApi_PtrSTR pDeviceName, WinApi_DEVMODEA *pDevModeOutput, WinApi_DEVMODEA *pDevModeInput, SET fMode);
__EXTERN INTEGER __STDCALL DocumentPropertiesW (INTEGER hWnd, INTEGER hPrinter, WinApi_PtrWSTR pDeviceName, WinApi_DEVMODEW *pDevModeOutput, WinApi_DEVMODEW *pDevModeInput, SET fMode);
__EXTERN INTEGER __STDCALL DosDateTimeToFileTime (SHORTINT wFatDate, SHORTINT wFatTime, WinApi_FILETIME *lpFileTime);
__EXTERN void __STDCALL DragAcceptFiles (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL DragDetect (INTEGER p0, WinApi_POINT p1);
__EXTERN void __STDCALL DragFinish (INTEGER p0);
__EXTERN INTEGER __STDCALL DragObject (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4);
__EXTERN INTEGER __STDCALL DragQueryFileA (INTEGER p0, INTEGER p1, WinApi_PtrSTR p2, INTEGER p3);
__EXTERN INTEGER __STDCALL DragQueryFileA (INTEGER p0, INTEGER p1, WinApi_PtrSTR p2, INTEGER p3);
__EXTERN INTEGER __STDCALL DragQueryFileW (INTEGER p0, INTEGER p1, WinApi_PtrWSTR p2, INTEGER p3);
__EXTERN INTEGER __STDCALL DragQueryPoint (INTEGER p0, WinApi_POINT *p1);
__EXTERN INTEGER __STDCALL DrawAnimatedRects (INTEGER hwnd, INTEGER idAni, WinApi_RECT *lprcFrom, WinApi_RECT *lprcTo);
__EXTERN INTEGER __STDCALL DrawCaption (INTEGER p0, INTEGER p1, WinApi_RECT *p2, INTEGER p3);
__EXTERN INTEGER __STDCALL DrawEdge (INTEGER hdc, WinApi_RECT *qrc, SET edge, SET grfFlags);
__EXTERN INTEGER __STDCALL DrawEscape (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_PtrSTR p3);
__EXTERN INTEGER __STDCALL DrawFocusRect (INTEGER hDC, WinApi_RECT *lprc);
__EXTERN INTEGER __STDCALL DrawFrameControl (INTEGER p0, WinApi_RECT *p1, INTEGER p2, SET p3);
__EXTERN INTEGER __STDCALL DrawIcon (INTEGER hDC, INTEGER X, INTEGER Y, INTEGER hIcon);
__EXTERN INTEGER __STDCALL DrawIconEx (INTEGER hdc, INTEGER xLeft, INTEGER yTop, INTEGER hIcon, INTEGER cxWidth, INTEGER cyWidth, INTEGER istepIfAniCur, INTEGER hbrFlickerFreeDraw, SET diFlags);
__EXTERN INTEGER __STDCALL DrawMenuBar (INTEGER hWnd);
__EXTERN INTEGER __STDCALL DrawStateA (INTEGER p0, INTEGER p1, WinApi_DRAWSTATEPROC p2, INTEGER p3, INTEGER p4, INTEGER p5, INTEGER p6, INTEGER p7, INTEGER p8, SET p9);
__EXTERN INTEGER __STDCALL DrawStateA (INTEGER p0, INTEGER p1, WinApi_DRAWSTATEPROC p2, INTEGER p3, INTEGER p4, INTEGER p5, INTEGER p6, INTEGER p7, INTEGER p8, SET p9);
__EXTERN INTEGER __STDCALL DrawStateW (INTEGER p0, INTEGER p1, WinApi_DRAWSTATEPROC p2, INTEGER p3, INTEGER p4, INTEGER p5, INTEGER p6, INTEGER p7, INTEGER p8, SET p9);
__EXTERN INTEGER __STDCALL DrawTextA (INTEGER hDC, WinApi_PtrSTR lpString, INTEGER nCount, WinApi_RECT *lpRect, SET uFormat);
__EXTERN INTEGER __STDCALL DrawTextA (INTEGER hDC, WinApi_PtrSTR lpString, INTEGER nCount, WinApi_RECT *lpRect, SET uFormat);
__EXTERN INTEGER __STDCALL DrawTextExA (INTEGER p0, WinApi_PtrSTR p1, INTEGER p2, WinApi_RECT *p3, INTEGER p4, WinApi_DRAWTEXTPARAMS *p5);
__EXTERN INTEGER __STDCALL DrawTextExA (INTEGER p0, WinApi_PtrSTR p1, INTEGER p2, WinApi_RECT *p3, INTEGER p4, WinApi_DRAWTEXTPARAMS *p5);
__EXTERN INTEGER __STDCALL DrawTextExW (INTEGER p0, WinApi_PtrWSTR p1, INTEGER p2, WinApi_RECT *p3, INTEGER p4, WinApi_DRAWTEXTPARAMS *p5);
__EXTERN INTEGER __STDCALL DrawTextW (INTEGER hDC, WinApi_PtrWSTR lpString, INTEGER nCount, WinApi_RECT *lpRect, SET uFormat);
__EXTERN INTEGER __STDCALL DuplicateHandle (INTEGER hSourceProcessHandle, INTEGER hSourceHandle, INTEGER hTargetProcessHandle, INTEGER *lpTargetHandle, SET dwDesiredAccess, INTEGER bInheritHandle, SET dwOptions);
__EXTERN INTEGER __STDCALL DuplicateIcon (INTEGER hInst, INTEGER hIcon);
__EXTERN INTEGER __STDCALL DuplicateToken (INTEGER ExistingTokenHandle, INTEGER ImpersonationLevel, INTEGER *DuplicateTokenHandle);
__EXTERN INTEGER __STDCALL Ellipse (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4);
__EXTERN INTEGER __STDCALL EmptyClipboard (void);
__EXTERN INTEGER __STDCALL EnableMenuItem (INTEGER hMenu, INTEGER uIDEnableItem, SET uEnable);
__EXTERN INTEGER __STDCALL EnableScrollBar (INTEGER hWnd, INTEGER wSBflags, INTEGER wArrows);
__EXTERN INTEGER __STDCALL EnableWindow (INTEGER hWnd, INTEGER bEnable);
__EXTERN INTEGER __STDCALL EndDeferWindowPos (INTEGER hWinPosInfo);
__EXTERN INTEGER __STDCALL EndDialog (INTEGER hDlg, INTEGER nResult);
__EXTERN INTEGER __STDCALL EndDoc (INTEGER p0);
__EXTERN INTEGER __STDCALL EndDocPrinter (INTEGER hPrinter);
__EXTERN INTEGER __STDCALL EndPage (INTEGER p0);
__EXTERN INTEGER __STDCALL EndPagePrinter (INTEGER hPrinter);
__EXTERN INTEGER __STDCALL EndPaint (INTEGER hWnd, WinApi_PAINTSTRUCT *lpPaint);
__EXTERN INTEGER __STDCALL EndPath (INTEGER p0);
__EXTERN INTEGER __STDCALL EndUpdateResourceA (INTEGER hUpdate, INTEGER fDiscard);
__EXTERN INTEGER __STDCALL EndUpdateResourceA (INTEGER hUpdate, INTEGER fDiscard);
__EXTERN INTEGER __STDCALL EndUpdateResourceW (INTEGER hUpdate, INTEGER fDiscard);
__EXTERN void __STDCALL EnterCriticalSection (WinApi_RTL_CRITICAL_SECTION *lpCriticalSection);
__EXTERN INTEGER __STDCALL EnumCalendarInfoA (WinApi_CALINFO_ENUMPROCA lpCalInfoEnumProc, INTEGER Locale, INTEGER Calendar, INTEGER CalType);
__EXTERN INTEGER __STDCALL EnumCalendarInfoA (WinApi_CALINFO_ENUMPROCA lpCalInfoEnumProc, INTEGER Locale, INTEGER Calendar, INTEGER CalType);
__EXTERN INTEGER __STDCALL EnumCalendarInfoW (WinApi_CALINFO_ENUMPROCW lpCalInfoEnumProc, INTEGER Locale, INTEGER Calendar, INTEGER CalType);
__EXTERN INTEGER __STDCALL EnumChildWindows (INTEGER hWndParent, WinApi_WNDENUMPROC lpEnumFunc, INTEGER lParam);
__EXTERN INTEGER __STDCALL EnumClipboardFormats (INTEGER format);
__EXTERN INTEGER __STDCALL EnumDateFormatsA (WinApi_DATEFMT_ENUMPROCA lpDateFmtEnumProc, INTEGER Locale, SET dwFlags);
__EXTERN INTEGER __STDCALL EnumDateFormatsA (WinApi_DATEFMT_ENUMPROCA lpDateFmtEnumProc, INTEGER Locale, SET dwFlags);
__EXTERN INTEGER __STDCALL EnumDateFormatsW (WinApi_DATEFMT_ENUMPROCW lpDateFmtEnumProc, INTEGER Locale, SET dwFlags);
__EXTERN INTEGER __STDCALL EnumDependentServicesA (INTEGER hService, INTEGER dwServiceState, WinApi_ENUM_SERVICE_STATUSA *lpServices, INTEGER cbBufSize, INTEGER *pcbBytesNeeded, INTEGER *lpServicesReturned);
__EXTERN INTEGER __STDCALL EnumDependentServicesA (INTEGER hService, INTEGER dwServiceState, WinApi_ENUM_SERVICE_STATUSA *lpServices, INTEGER cbBufSize, INTEGER *pcbBytesNeeded, INTEGER *lpServicesReturned);
__EXTERN INTEGER __STDCALL EnumDependentServicesW (INTEGER hService, INTEGER dwServiceState, WinApi_ENUM_SERVICE_STATUSW *lpServices, INTEGER cbBufSize, INTEGER *pcbBytesNeeded, INTEGER *lpServicesReturned);
__EXTERN INTEGER __STDCALL EnumDesktopWindows (INTEGER hDesktop, WinApi_WNDENUMPROC lpfn, INTEGER lParam);
__EXTERN INTEGER __STDCALL EnumDesktopsA (INTEGER hwinsta, WinApi_DESKTOPENUMPROCA lpEnumFunc, INTEGER lParam);
__EXTERN INTEGER __STDCALL EnumDesktopsA (INTEGER hwinsta, WinApi_DESKTOPENUMPROCA lpEnumFunc, INTEGER lParam);
__EXTERN INTEGER __STDCALL EnumDesktopsW (INTEGER hwinsta, WinApi_DESKTOPENUMPROCW lpEnumFunc, INTEGER lParam);
__EXTERN INTEGER __STDCALL EnumDisplaySettingsA (WinApi_PtrSTR lpszDeviceName, INTEGER iModeNum, WinApi_DEVMODEA *lpDevMode);
__EXTERN INTEGER __STDCALL EnumDisplaySettingsA (WinApi_PtrSTR lpszDeviceName, INTEGER iModeNum, WinApi_DEVMODEA *lpDevMode);
__EXTERN INTEGER __STDCALL EnumDisplaySettingsW (WinApi_PtrWSTR lpszDeviceName, INTEGER iModeNum, WinApi_DEVMODEW *lpDevMode);
__EXTERN INTEGER __STDCALL EnumEnhMetaFile (INTEGER p0, INTEGER p1, WinApi_ENHMFENUMPROC p2, INTEGER p3, WinApi_RECT *p4);
__EXTERN INTEGER __STDCALL EnumFontFamiliesA (INTEGER p0, WinApi_PtrSTR p1, WinApi_NEWFONTENUMPROCA p2, INTEGER p3);
__EXTERN INTEGER __STDCALL EnumFontFamiliesA (INTEGER p0, WinApi_PtrSTR p1, WinApi_NEWFONTENUMPROCA p2, INTEGER p3);
__EXTERN INTEGER __STDCALL EnumFontFamiliesExA (INTEGER p0, WinApi_LOGFONTA *p1, WinApi_FONTENUMPROCEXA p2, INTEGER p3, INTEGER p4);
__EXTERN INTEGER __STDCALL EnumFontFamiliesExA (INTEGER p0, WinApi_LOGFONTA *p1, WinApi_FONTENUMPROCEXA p2, INTEGER p3, INTEGER p4);
__EXTERN INTEGER __STDCALL EnumFontFamiliesExW (INTEGER p0, WinApi_LOGFONTW *p1, WinApi_FONTENUMPROCEXW p2, INTEGER p3, INTEGER p4);
__EXTERN INTEGER __STDCALL EnumFontFamiliesW (INTEGER p0, WinApi_PtrWSTR p1, WinApi_NEWFONTENUMPROCW p2, INTEGER p3);
__EXTERN INTEGER __STDCALL EnumFontsA (INTEGER p0, WinApi_PtrSTR p1, WinApi_FONTENUMPROCA p2, INTEGER p3);
__EXTERN INTEGER __STDCALL EnumFontsA (INTEGER p0, WinApi_PtrSTR p1, WinApi_FONTENUMPROCA p2, INTEGER p3);
__EXTERN INTEGER __STDCALL EnumFontsW (INTEGER p0, WinApi_PtrWSTR p1, WinApi_FONTENUMPROCW p2, INTEGER p3);
__EXTERN INTEGER __STDCALL EnumFormsA (INTEGER hPrinter, INTEGER Level, CHAR *pForm, INTEGER cbBuf, INTEGER *pcbNeeded, INTEGER *pcReturned);
__EXTERN INTEGER __STDCALL EnumFormsA (INTEGER hPrinter, INTEGER Level, CHAR *pForm, INTEGER cbBuf, INTEGER *pcbNeeded, INTEGER *pcReturned);
__EXTERN INTEGER __STDCALL EnumFormsW (INTEGER hPrinter, INTEGER Level, CHAR *pForm, INTEGER cbBuf, INTEGER *pcbNeeded, INTEGER *pcReturned);
__EXTERN INTEGER __STDCALL EnumICMProfilesA (INTEGER p0, WinApi_ICMENUMPROCA p1, INTEGER p2);
__EXTERN INTEGER __STDCALL EnumICMProfilesA (INTEGER p0, WinApi_ICMENUMPROCA p1, INTEGER p2);
__EXTERN INTEGER __STDCALL EnumICMProfilesW (INTEGER p0, WinApi_ICMENUMPROCW p1, INTEGER p2);
__EXTERN INTEGER __STDCALL EnumJobsA (INTEGER hPrinter, INTEGER FirstJob, INTEGER NoJobs, INTEGER Level, CHAR *pJob, INTEGER cbBuf, INTEGER *pcbNeeded, INTEGER *pcReturned);
__EXTERN INTEGER __STDCALL EnumJobsA (INTEGER hPrinter, INTEGER FirstJob, INTEGER NoJobs, INTEGER Level, CHAR *pJob, INTEGER cbBuf, INTEGER *pcbNeeded, INTEGER *pcReturned);
__EXTERN INTEGER __STDCALL EnumJobsW (INTEGER hPrinter, INTEGER FirstJob, INTEGER NoJobs, INTEGER Level, CHAR *pJob, INTEGER cbBuf, INTEGER *pcbNeeded, INTEGER *pcReturned);
__EXTERN INTEGER __STDCALL EnumMetaFile (INTEGER p0, INTEGER p1, WinApi_MFENUMPROC p2, INTEGER p3);
__EXTERN INTEGER __STDCALL EnumMonitorsA (WinApi_PtrSTR pName, INTEGER Level, CHAR *pMonitors, INTEGER cbBuf, INTEGER *pcbNeeded, INTEGER *pcReturned);
__EXTERN INTEGER __STDCALL EnumMonitorsA (WinApi_PtrSTR pName, INTEGER Level, CHAR *pMonitors, INTEGER cbBuf, INTEGER *pcbNeeded, INTEGER *pcReturned);
__EXTERN INTEGER __STDCALL EnumMonitorsW (WinApi_PtrWSTR pName, INTEGER Level, CHAR *pMonitors, INTEGER cbBuf, INTEGER *pcbNeeded, INTEGER *pcReturned);
__EXTERN INTEGER __STDCALL EnumObjects (INTEGER p0, INTEGER p1, WinApi_GOBJENUMPROC p2, INTEGER p3);
__EXTERN INTEGER __STDCALL EnumPortsA (WinApi_PtrSTR pName, INTEGER Level, CHAR *pPorts, INTEGER cbBuf, INTEGER *pcbNeeded, INTEGER *pcReturned);
__EXTERN INTEGER __STDCALL EnumPortsA (WinApi_PtrSTR pName, INTEGER Level, CHAR *pPorts, INTEGER cbBuf, INTEGER *pcbNeeded, INTEGER *pcReturned);
__EXTERN INTEGER __STDCALL EnumPortsW (WinApi_PtrWSTR pName, INTEGER Level, CHAR *pPorts, INTEGER cbBuf, INTEGER *pcbNeeded, INTEGER *pcReturned);
__EXTERN INTEGER __STDCALL EnumPrintProcessorDatatypesA (WinApi_PtrSTR pName, WinApi_PtrSTR pPrintProcessorName, INTEGER Level, CHAR *pDatatypes, INTEGER cbBuf, INTEGER *pcbNeeded, INTEGER *pcReturned);
__EXTERN INTEGER __STDCALL EnumPrintProcessorDatatypesA (WinApi_PtrSTR pName, WinApi_PtrSTR pPrintProcessorName, INTEGER Level, CHAR *pDatatypes, INTEGER cbBuf, INTEGER *pcbNeeded, INTEGER *pcReturned);
__EXTERN INTEGER __STDCALL EnumPrintProcessorDatatypesW (WinApi_PtrWSTR pName, WinApi_PtrWSTR pPrintProcessorName, INTEGER Level, CHAR *pDatatypes, INTEGER cbBuf, INTEGER *pcbNeeded, INTEGER *pcReturned);
__EXTERN INTEGER __STDCALL EnumPrintProcessorsA (WinApi_PtrSTR pName, WinApi_PtrSTR pEnvironment, INTEGER Level, CHAR *pPrintProcessorInfo, INTEGER cbBuf, INTEGER *pcbNeeded, INTEGER *pcReturned);
__EXTERN INTEGER __STDCALL EnumPrintProcessorsA (WinApi_PtrSTR pName, WinApi_PtrSTR pEnvironment, INTEGER Level, CHAR *pPrintProcessorInfo, INTEGER cbBuf, INTEGER *pcbNeeded, INTEGER *pcReturned);
__EXTERN INTEGER __STDCALL EnumPrintProcessorsW (WinApi_PtrWSTR pName, WinApi_PtrWSTR pEnvironment, INTEGER Level, CHAR *pPrintProcessorInfo, INTEGER cbBuf, INTEGER *pcbNeeded, INTEGER *pcReturned);
__EXTERN INTEGER __STDCALL EnumPrinterDriversA (WinApi_PtrSTR pName, WinApi_PtrSTR pEnvironment, INTEGER Level, CHAR *pDriverInfo, INTEGER cbBuf, INTEGER *pcbNeeded, INTEGER *pcReturned);
__EXTERN INTEGER __STDCALL EnumPrinterDriversA (WinApi_PtrSTR pName, WinApi_PtrSTR pEnvironment, INTEGER Level, CHAR *pDriverInfo, INTEGER cbBuf, INTEGER *pcbNeeded, INTEGER *pcReturned);
__EXTERN INTEGER __STDCALL EnumPrinterDriversW (WinApi_PtrWSTR pName, WinApi_PtrWSTR pEnvironment, INTEGER Level, CHAR *pDriverInfo, INTEGER cbBuf, INTEGER *pcbNeeded, INTEGER *pcReturned);
__EXTERN INTEGER __STDCALL EnumPrintersA (SET Flags, WinApi_PtrSTR Name, INTEGER Level, CHAR *pPrinterEnum, INTEGER cbBuf, INTEGER *pcbNeeded, INTEGER *pcReturned);
__EXTERN INTEGER __STDCALL EnumPrintersA (SET Flags, WinApi_PtrSTR Name, INTEGER Level, CHAR *pPrinterEnum, INTEGER cbBuf, INTEGER *pcbNeeded, INTEGER *pcReturned);
__EXTERN INTEGER __STDCALL EnumPrintersW (SET Flags, WinApi_PtrWSTR Name, INTEGER Level, CHAR *pPrinterEnum, INTEGER cbBuf, INTEGER *pcbNeeded, INTEGER *pcReturned);
__EXTERN INTEGER __STDCALL EnumPropsA (INTEGER hWnd, WinApi_ROPENUMPROCA lpEnumFunc);
__EXTERN INTEGER __STDCALL EnumPropsA (INTEGER hWnd, WinApi_ROPENUMPROCA lpEnumFunc);
__EXTERN INTEGER __STDCALL EnumPropsExA (INTEGER hWnd, WinApi_ROPENUMPROCEXA lpEnumFunc, INTEGER lParam);
__EXTERN INTEGER __STDCALL EnumPropsExA (INTEGER hWnd, WinApi_ROPENUMPROCEXA lpEnumFunc, INTEGER lParam);
__EXTERN INTEGER __STDCALL EnumPropsExW (INTEGER hWnd, WinApi_ROPENUMPROCEXW lpEnumFunc, INTEGER lParam);
__EXTERN INTEGER __STDCALL EnumPropsW (INTEGER hWnd, WinApi_ROPENUMPROCW lpEnumFunc);
__EXTERN INTEGER __STDCALL EnumResourceLanguagesA (INTEGER hModule, WinApi_PtrSTR lpType, WinApi_PtrSTR lpName, WinApi_ENUMRESLANGPROC lpEnumFunc, INTEGER lParam);
__EXTERN INTEGER __STDCALL EnumResourceLanguagesA (INTEGER hModule, WinApi_PtrSTR lpType, WinApi_PtrSTR lpName, WinApi_ENUMRESLANGPROC lpEnumFunc, INTEGER lParam);
__EXTERN INTEGER __STDCALL EnumResourceLanguagesW (INTEGER hModule, WinApi_PtrWSTR lpType, WinApi_PtrWSTR lpName, WinApi_ENUMRESLANGPROC lpEnumFunc, INTEGER lParam);
__EXTERN INTEGER __STDCALL EnumResourceNamesA (INTEGER hModule, WinApi_PtrSTR lpType, WinApi_ENUMRESNAMEPROC lpEnumFunc, INTEGER lParam);
__EXTERN INTEGER __STDCALL EnumResourceNamesA (INTEGER hModule, WinApi_PtrSTR lpType, WinApi_ENUMRESNAMEPROC lpEnumFunc, INTEGER lParam);
__EXTERN INTEGER __STDCALL EnumResourceNamesW (INTEGER hModule, WinApi_PtrWSTR lpType, WinApi_ENUMRESNAMEPROC lpEnumFunc, INTEGER lParam);
__EXTERN INTEGER __STDCALL EnumResourceTypesA (INTEGER hModule, WinApi_ENUMRESTYPEPROC lpEnumFunc, INTEGER lParam);
__EXTERN INTEGER __STDCALL EnumResourceTypesA (INTEGER hModule, WinApi_ENUMRESTYPEPROC lpEnumFunc, INTEGER lParam);
__EXTERN INTEGER __STDCALL EnumResourceTypesW (INTEGER hModule, WinApi_ENUMRESTYPEPROC lpEnumFunc, INTEGER lParam);
__EXTERN INTEGER __STDCALL EnumServicesStatusA (INTEGER hSCManager, SET dwServiceType, INTEGER dwServiceState, WinApi_ENUM_SERVICE_STATUSA *lpServices, INTEGER cbBufSize, INTEGER *pcbBytesNeeded, INTEGER *lpServicesReturned, INTEGER *lpResumeHandle);
__EXTERN INTEGER __STDCALL EnumServicesStatusA (INTEGER hSCManager, SET dwServiceType, INTEGER dwServiceState, WinApi_ENUM_SERVICE_STATUSA *lpServices, INTEGER cbBufSize, INTEGER *pcbBytesNeeded, INTEGER *lpServicesReturned, INTEGER *lpResumeHandle);
__EXTERN INTEGER __STDCALL EnumServicesStatusW (INTEGER hSCManager, SET dwServiceType, INTEGER dwServiceState, WinApi_ENUM_SERVICE_STATUSW *lpServices, INTEGER cbBufSize, INTEGER *pcbBytesNeeded, INTEGER *lpServicesReturned, INTEGER *lpResumeHandle);
__EXTERN INTEGER __STDCALL EnumSystemCodePagesA (WinApi_CODEPAGE_ENUMPROCA lpCodePageEnumProc, SET dwFlags);
__EXTERN INTEGER __STDCALL EnumSystemCodePagesA (WinApi_CODEPAGE_ENUMPROCA lpCodePageEnumProc, SET dwFlags);
__EXTERN INTEGER __STDCALL EnumSystemCodePagesW (WinApi_CODEPAGE_ENUMPROCW lpCodePageEnumProc, SET dwFlags);
__EXTERN INTEGER __STDCALL EnumSystemLocalesA (WinApi_LOCALE_ENUMPROCA lpLocaleEnumProc, SET dwFlags);
__EXTERN INTEGER __STDCALL EnumSystemLocalesA (WinApi_LOCALE_ENUMPROCA lpLocaleEnumProc, SET dwFlags);
__EXTERN INTEGER __STDCALL EnumSystemLocalesW (WinApi_LOCALE_ENUMPROCW lpLocaleEnumProc, SET dwFlags);
__EXTERN INTEGER __STDCALL EnumThreadWindows (INTEGER dwThreadId, WinApi_WNDENUMPROC lpfn, INTEGER lParam);
__EXTERN INTEGER __STDCALL EnumTimeFormatsA (WinApi_TIMEFMT_ENUMPROCA lpTimeFmtEnumProc, INTEGER Locale, SET dwFlags);
__EXTERN INTEGER __STDCALL EnumTimeFormatsA (WinApi_TIMEFMT_ENUMPROCA lpTimeFmtEnumProc, INTEGER Locale, SET dwFlags);
__EXTERN INTEGER __STDCALL EnumTimeFormatsW (WinApi_TIMEFMT_ENUMPROCW lpTimeFmtEnumProc, INTEGER Locale, SET dwFlags);
__EXTERN INTEGER __STDCALL EnumWindowStationsA (WinApi_WINSTAENUMPROCA lpEnumFunc, INTEGER lParam);
__EXTERN INTEGER __STDCALL EnumWindowStationsA (WinApi_WINSTAENUMPROCA lpEnumFunc, INTEGER lParam);
__EXTERN INTEGER __STDCALL EnumWindowStationsW (WinApi_WINSTAENUMPROCW lpEnumFunc, INTEGER lParam);
__EXTERN INTEGER __STDCALL EnumWindows (WinApi_WNDENUMPROC lpEnumFunc, INTEGER lParam);
__EXTERN INTEGER __STDCALL EqualPrefixSid (INTEGER pSid1, INTEGER pSid2);
__EXTERN INTEGER __STDCALL EqualRect (WinApi_RECT *lprc1, WinApi_RECT *lprc2);
__EXTERN INTEGER __STDCALL EqualRgn (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL EqualSid (INTEGER pSid1, INTEGER pSid2);
__EXTERN INTEGER __STDCALL EraseTape (INTEGER hDevice, INTEGER dwEraseType, INTEGER bImmediate);
__EXTERN INTEGER __STDCALL Escape (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_PtrSTR p3, INTEGER p4);
__EXTERN INTEGER __STDCALL EscapeCommFunction (INTEGER hFile, INTEGER dwFunc);
__EXTERN INTEGER __STDCALL ExcludeClipRect (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4);
__EXTERN INTEGER __STDCALL ExcludeUpdateRgn (INTEGER hDC, INTEGER hWnd);
__EXTERN void __STDCALL ExitProcess (INTEGER uExitCode);
__EXTERN void __STDCALL ExitThread (INTEGER dwExitCode);
__EXTERN INTEGER __STDCALL ExitWindowsEx (SET uFlags, INTEGER dwReserved);
__EXTERN INTEGER __STDCALL ExpandEnvironmentStringsA (WinApi_PtrSTR lpSrc, WinApi_PtrSTR lpDst, INTEGER nSize);
__EXTERN INTEGER __STDCALL ExpandEnvironmentStringsA (WinApi_PtrSTR lpSrc, WinApi_PtrSTR lpDst, INTEGER nSize);
__EXTERN INTEGER __STDCALL ExpandEnvironmentStringsW (WinApi_PtrWSTR lpSrc, WinApi_PtrWSTR lpDst, INTEGER nSize);
__EXTERN INTEGER __STDCALL ExtCreatePen (INTEGER p0, INTEGER p1, WinApi_LOGBRUSH *p2, INTEGER p3, INTEGER *p4);
__EXTERN INTEGER __STDCALL ExtCreateRegion (WinApi_XFORM *p0, INTEGER p1, WinApi_RGNDATA *p2);
__EXTERN INTEGER __STDCALL ExtEscape (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_PtrSTR p3, INTEGER p4, WinApi_PtrSTR p5);
__EXTERN INTEGER __STDCALL ExtFloodFill (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4);
__EXTERN INTEGER __STDCALL ExtSelectClipRgn (INTEGER p0, INTEGER p1, INTEGER p2);
__EXTERN INTEGER __STDCALL ExtTextOutA (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, WinApi_RECT *p4, WinApi_PtrSTR p5, INTEGER p6, INTEGER *p7);
__EXTERN INTEGER __STDCALL ExtTextOutA (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, WinApi_RECT *p4, WinApi_PtrSTR p5, INTEGER p6, INTEGER *p7);
__EXTERN INTEGER __STDCALL ExtTextOutW (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, WinApi_RECT *p4, WinApi_PtrWSTR p5, INTEGER p6, INTEGER *p7);
__EXTERN INTEGER __STDCALL ExtractAssociatedIconA (INTEGER hInst, WinApi_PtrSTR lpIconPath, SHORTINT *lpiIcon);
__EXTERN INTEGER __STDCALL ExtractAssociatedIconA (INTEGER hInst, WinApi_PtrSTR lpIconPath, SHORTINT *lpiIcon);
__EXTERN INTEGER __STDCALL ExtractAssociatedIconW (INTEGER hInst, WinApi_PtrWSTR lpIconPath, SHORTINT *lpiIcon);
__EXTERN INTEGER __STDCALL ExtractIconA (INTEGER hInst, WinApi_PtrSTR lpszExeFileName, INTEGER nIconIndex);
__EXTERN INTEGER __STDCALL ExtractIconA (INTEGER hInst, WinApi_PtrSTR lpszExeFileName, INTEGER nIconIndex);
__EXTERN INTEGER __STDCALL ExtractIconExA (WinApi_PtrSTR lpszFile, INTEGER nIconIndex, INTEGER *phiconLarge, INTEGER *phiconSmall, INTEGER nIcons);
__EXTERN INTEGER __STDCALL ExtractIconExA (WinApi_PtrSTR lpszFile, INTEGER nIconIndex, INTEGER *phiconLarge, INTEGER *phiconSmall, INTEGER nIcons);
__EXTERN INTEGER __STDCALL ExtractIconExW (WinApi_PtrWSTR lpszFile, INTEGER nIconIndex, INTEGER *phiconLarge, INTEGER *phiconSmall, INTEGER nIcons);
__EXTERN INTEGER __STDCALL ExtractIconW (INTEGER hInst, WinApi_PtrWSTR lpszExeFileName, INTEGER nIconIndex);
__EXTERN void __STDCALL FatalAppExitA (INTEGER uAction, WinApi_PtrSTR lpMessageText);
__EXTERN void __STDCALL FatalAppExitA (INTEGER uAction, WinApi_PtrSTR lpMessageText);
__EXTERN void __STDCALL FatalAppExitW (INTEGER uAction, WinApi_PtrWSTR lpMessageText);
__EXTERN void __STDCALL FatalExit (INTEGER ExitCode);
__EXTERN INTEGER __STDCALL FileTimeToDosDateTime (WinApi_FILETIME *lpFileTime, SHORTINT *lpFatDate, SHORTINT *lpFatTime);
__EXTERN INTEGER __STDCALL FileTimeToLocalFileTime (WinApi_FILETIME *lpFileTime, WinApi_FILETIME *lpLocalFileTime);
__EXTERN INTEGER __STDCALL FileTimeToSystemTime (WinApi_FILETIME *lpFileTime, WinApi_SYSTEMTIME *lpSystemTime);
__EXTERN INTEGER __STDCALL FillConsoleOutputAttribute (INTEGER hConsoleOutput, SHORTINT wAttribute, INTEGER nLength, WinApi_COORD dwWriteCoord, INTEGER *lpNumberOfAttrsWritten);
__EXTERN INTEGER __STDCALL FillConsoleOutputCharacterA (INTEGER hConsoleOutput, CHAR cCharacter, INTEGER nLength, WinApi_COORD dwWriteCoord, INTEGER *lpNumberOfCharsWritten);
__EXTERN INTEGER __STDCALL FillConsoleOutputCharacterA (INTEGER hConsoleOutput, CHAR cCharacter, INTEGER nLength, WinApi_COORD dwWriteCoord, INTEGER *lpNumberOfCharsWritten);
__EXTERN INTEGER __STDCALL FillConsoleOutputCharacterW (INTEGER hConsoleOutput, LONGCHAR cCharacter, INTEGER nLength, WinApi_COORD dwWriteCoord, INTEGER *lpNumberOfCharsWritten);
__EXTERN INTEGER __STDCALL FillPath (INTEGER p0);
__EXTERN INTEGER __STDCALL FillRect (INTEGER hDC, WinApi_RECT *lprc, INTEGER hbr);
__EXTERN INTEGER __STDCALL FillRgn (INTEGER p0, INTEGER p1, INTEGER p2);
__EXTERN SHORTINT __STDCALL FindAtomA (WinApi_PtrSTR lpString);
__EXTERN SHORTINT __STDCALL FindAtomA (WinApi_PtrSTR lpString);
__EXTERN SHORTINT __STDCALL FindAtomW (WinApi_PtrWSTR lpString);
__EXTERN INTEGER __STDCALL FindClose (INTEGER hFindFile);
__EXTERN INTEGER __STDCALL FindCloseChangeNotification (INTEGER hChangeHandle);
__EXTERN INTEGER __STDCALL FindClosePrinterChangeNotification (INTEGER hChange);
__EXTERN INTEGER __STDCALL FindExecutableA (WinApi_PtrSTR lpFile, WinApi_PtrSTR lpDirectory, WinApi_PtrSTR lpResult);
__EXTERN INTEGER __STDCALL FindExecutableA (WinApi_PtrSTR lpFile, WinApi_PtrSTR lpDirectory, WinApi_PtrSTR lpResult);
__EXTERN INTEGER __STDCALL FindExecutableW (WinApi_PtrWSTR lpFile, WinApi_PtrWSTR lpDirectory, WinApi_PtrWSTR lpResult);
__EXTERN INTEGER __STDCALL FindFirstChangeNotificationA (WinApi_PtrSTR lpPathName, INTEGER bWatchSubtree, SET dwNotifyFilter);
__EXTERN INTEGER __STDCALL FindFirstChangeNotificationA (WinApi_PtrSTR lpPathName, INTEGER bWatchSubtree, SET dwNotifyFilter);
__EXTERN INTEGER __STDCALL FindFirstChangeNotificationW (WinApi_PtrWSTR lpPathName, INTEGER bWatchSubtree, SET dwNotifyFilter);
__EXTERN INTEGER __STDCALL FindFirstFileExA (WinApi_PtrSTR lpFileName, INTEGER fInfoLevelId, INTEGER lpFindFileData, INTEGER fSearchOp, INTEGER lpSearchFilter, INTEGER dwAdditionalFlags);
__EXTERN INTEGER __STDCALL FindFirstFileExA (WinApi_PtrSTR lpFileName, INTEGER fInfoLevelId, INTEGER lpFindFileData, INTEGER fSearchOp, INTEGER lpSearchFilter, INTEGER dwAdditionalFlags);
__EXTERN INTEGER __STDCALL FindFirstFileExW (WinApi_PtrWSTR lpFileName, INTEGER fInfoLevelId, INTEGER lpFindFileData, INTEGER fSearchOp, INTEGER lpSearchFilter, INTEGER dwAdditionalFlags);
__EXTERN INTEGER __STDCALL FindFirstFreeAce (WinApi_ACL *pAcl, INTEGER *pAce);
__EXTERN INTEGER __STDCALL FindFirstPrinterChangeNotification (INTEGER hPrinter, SET fdwFlags, INTEGER fdwOptions, INTEGER pPrinterNotifyOptions);
__EXTERN INTEGER __STDCALL FindNextChangeNotification (INTEGER hChangeHandle);
__EXTERN INTEGER __STDCALL FindNextPrinterChangeNotification (INTEGER hChange, INTEGER *pdwChange, INTEGER pvReserved, INTEGER *ppPrinterNotifyInfo);
__EXTERN INTEGER __STDCALL FindResourceA (INTEGER hModule, WinApi_PtrSTR lpName, WinApi_PtrSTR lpType);
__EXTERN INTEGER __STDCALL FindResourceA (INTEGER hModule, WinApi_PtrSTR lpName, WinApi_PtrSTR lpType);
__EXTERN INTEGER __STDCALL FindResourceExA (INTEGER hModule, WinApi_PtrSTR lpType, WinApi_PtrSTR lpName, SHORTINT wLanguage);
__EXTERN INTEGER __STDCALL FindResourceExA (INTEGER hModule, WinApi_PtrSTR lpType, WinApi_PtrSTR lpName, SHORTINT wLanguage);
__EXTERN INTEGER __STDCALL FindResourceExW (INTEGER hModule, WinApi_PtrWSTR lpType, WinApi_PtrWSTR lpName, SHORTINT wLanguage);
__EXTERN INTEGER __STDCALL FindResourceW (INTEGER hModule, WinApi_PtrWSTR lpName, WinApi_PtrWSTR lpType);
__EXTERN INTEGER __STDCALL FindWindowA (WinApi_PtrSTR lpClassName, WinApi_PtrSTR lpWindowName);
__EXTERN INTEGER __STDCALL FindWindowA (WinApi_PtrSTR lpClassName, WinApi_PtrSTR lpWindowName);
__EXTERN INTEGER __STDCALL FindWindowExA (INTEGER p0, INTEGER p1, WinApi_PtrSTR p2, WinApi_PtrSTR p3);
__EXTERN INTEGER __STDCALL FindWindowExA (INTEGER p0, INTEGER p1, WinApi_PtrSTR p2, WinApi_PtrSTR p3);
__EXTERN INTEGER __STDCALL FindWindowExW (INTEGER p0, INTEGER p1, WinApi_PtrWSTR p2, WinApi_PtrWSTR p3);
__EXTERN INTEGER __STDCALL FindWindowW (WinApi_PtrWSTR lpClassName, WinApi_PtrWSTR lpWindowName);
__EXTERN INTEGER __STDCALL FixBrushOrgEx (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_POINT *p3);
__EXTERN INTEGER __STDCALL FlashWindow (INTEGER hWnd, INTEGER bInvert);
__EXTERN INTEGER __STDCALL FlattenPath (INTEGER p0);
__EXTERN INTEGER __STDCALL FloodFill (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3);
__EXTERN INTEGER __STDCALL FlushConsoleInputBuffer (INTEGER hConsoleInput);
__EXTERN INTEGER __STDCALL FlushFileBuffers (INTEGER hFile);
__EXTERN INTEGER __STDCALL FlushInstructionCache (INTEGER hProcess, INTEGER lpBaseAddress, INTEGER dwSize);
__EXTERN INTEGER __STDCALL FlushViewOfFile (INTEGER lpBaseAddress, INTEGER dwNumberOfBytesToFlush);
__EXTERN INTEGER __STDCALL FoldStringA (SET dwMapFlags, WinApi_PtrSTR lpSrcStr, INTEGER cchSrc, WinApi_PtrSTR lpDestStr, INTEGER cchDest);
__EXTERN INTEGER __STDCALL FoldStringA (SET dwMapFlags, WinApi_PtrSTR lpSrcStr, INTEGER cchSrc, WinApi_PtrSTR lpDestStr, INTEGER cchDest);
__EXTERN INTEGER __STDCALL FoldStringW (SET dwMapFlags, WinApi_PtrWSTR lpSrcStr, INTEGER cchSrc, WinApi_PtrWSTR lpDestStr, INTEGER cchDest);
__EXTERN INTEGER __STDCALL FormatMessageA (SET dwFlags, INTEGER lpSource, INTEGER dwMessageId, INTEGER dwLanguageId, WinApi_PtrSTR lpBuffer, INTEGER nSize, WinApi_PtrSTR *Arguments);
__EXTERN INTEGER __STDCALL FormatMessageA (SET dwFlags, INTEGER lpSource, INTEGER dwMessageId, INTEGER dwLanguageId, WinApi_PtrSTR lpBuffer, INTEGER nSize, WinApi_PtrSTR *Arguments);
__EXTERN INTEGER __STDCALL FormatMessageW (SET dwFlags, INTEGER lpSource, INTEGER dwMessageId, INTEGER dwLanguageId, WinApi_PtrWSTR lpBuffer, INTEGER nSize, WinApi_PtrWSTR *Arguments);
__EXTERN INTEGER __STDCALL FrameRect (INTEGER hDC, WinApi_RECT *lprc, INTEGER hbr);
__EXTERN INTEGER __STDCALL FrameRgn (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4);
__EXTERN INTEGER __STDCALL FreeConsole (void);
__EXTERN INTEGER __STDCALL FreeDDElParam (INTEGER msg, INTEGER lParam);
__EXTERN INTEGER __STDCALL FreeEnvironmentStringsA (WinApi_PtrSTR p0);
__EXTERN INTEGER __STDCALL FreeEnvironmentStringsA (WinApi_PtrSTR p0);
__EXTERN INTEGER __STDCALL FreeEnvironmentStringsW (WinApi_PtrWSTR p0);
__EXTERN INTEGER __STDCALL FreeLibrary (INTEGER hLibModule);
__EXTERN void __STDCALL FreeLibraryAndExitThread (INTEGER hLibModule, INTEGER dwExitCode);
__EXTERN INTEGER __STDCALL FreeResource (INTEGER hResData);
__EXTERN INTEGER __STDCALL FreeSid (INTEGER pSid);
__EXTERN INTEGER __STDCALL GdiComment (INTEGER p0, INTEGER p1, CHAR *p2);
__EXTERN INTEGER __STDCALL GdiFlush (void);
__EXTERN INTEGER __STDCALL GdiGetBatchLimit (void);
__EXTERN INTEGER __STDCALL GdiSetBatchLimit (INTEGER p0);
__EXTERN INTEGER __STDCALL GenerateConsoleCtrlEvent (INTEGER dwCtrlEvent, INTEGER dwProcessGroupId);
__EXTERN INTEGER __STDCALL GetACP (void);
__EXTERN INTEGER __STDCALL GetAce (WinApi_ACL *pAcl, INTEGER dwAceIndex, INTEGER *pAce);
__EXTERN INTEGER __STDCALL GetAclInformation (WinApi_ACL *pAcl, INTEGER pAclInformation, INTEGER nAclInformationLength, INTEGER dwAclInformationClass);
__EXTERN INTEGER __STDCALL GetActiveWindow (void);
__EXTERN INTEGER __STDCALL GetArcDirection (INTEGER p0);
__EXTERN INTEGER __STDCALL GetAspectRatioFilterEx (INTEGER p0, WinApi_SIZE *p1);
__EXTERN SHORTINT __STDCALL GetAsyncKeyState (INTEGER vKey);
__EXTERN INTEGER __STDCALL GetAtomNameA (SHORTINT nAtom, WinApi_PtrSTR lpBuffer, INTEGER nSize);
__EXTERN INTEGER __STDCALL GetAtomNameA (SHORTINT nAtom, WinApi_PtrSTR lpBuffer, INTEGER nSize);
__EXTERN INTEGER __STDCALL GetAtomNameW (SHORTINT nAtom, WinApi_PtrWSTR lpBuffer, INTEGER nSize);
__EXTERN INTEGER __STDCALL GetBinaryTypeA (WinApi_PtrSTR lpApplicationName, INTEGER *lpBinaryType);
__EXTERN INTEGER __STDCALL GetBinaryTypeA (WinApi_PtrSTR lpApplicationName, INTEGER *lpBinaryType);
__EXTERN INTEGER __STDCALL GetBinaryTypeW (WinApi_PtrWSTR lpApplicationName, INTEGER *lpBinaryType);
__EXTERN INTEGER __STDCALL GetBitmapBits (INTEGER p0, INTEGER p1, INTEGER p2);
__EXTERN INTEGER __STDCALL GetBitmapDimensionEx (INTEGER p0, WinApi_SIZE *p1);
__EXTERN INTEGER __STDCALL GetBkColor (INTEGER p0);
__EXTERN INTEGER __STDCALL GetBkMode (INTEGER p0);
__EXTERN SET __STDCALL GetBoundsRect (INTEGER p0, WinApi_RECT *p1, SET p2);
__EXTERN INTEGER __STDCALL GetBrushOrgEx (INTEGER p0, WinApi_POINT *p1);
__EXTERN INTEGER __STDCALL GetCPInfo (INTEGER CodePage, WinApi_CPINFO *lpCPInfo);
__EXTERN INTEGER __STDCALL GetCapture (void);
__EXTERN INTEGER __STDCALL GetCaretBlinkTime (void);
__EXTERN INTEGER __STDCALL GetCaretPos (WinApi_POINT *lpPoint);
__EXTERN INTEGER __STDCALL GetCharABCWidthsA (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_ABC *p3);
__EXTERN INTEGER __STDCALL GetCharABCWidthsA (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_ABC *p3);
__EXTERN INTEGER __STDCALL GetCharABCWidthsFloatA (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_ABCFLOAT *p3);
__EXTERN INTEGER __STDCALL GetCharABCWidthsFloatA (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_ABCFLOAT *p3);
__EXTERN INTEGER __STDCALL GetCharABCWidthsFloatW (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_ABCFLOAT *p3);
__EXTERN INTEGER __STDCALL GetCharABCWidthsW (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_ABC *p3);
__EXTERN INTEGER __STDCALL GetCharWidthA (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER *p3);
__EXTERN INTEGER __STDCALL GetCharWidth32A (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER *p3);
__EXTERN INTEGER __STDCALL GetCharWidth32A (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER *p3);
__EXTERN INTEGER __STDCALL GetCharWidth32W (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER *p3);
__EXTERN INTEGER __STDCALL GetCharWidthA (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER *p3);
__EXTERN INTEGER __STDCALL GetCharWidthFloatA (INTEGER p0, INTEGER p1, INTEGER p2, SHORTREAL *p3);
__EXTERN INTEGER __STDCALL GetCharWidthFloatA (INTEGER p0, INTEGER p1, INTEGER p2, SHORTREAL *p3);
__EXTERN INTEGER __STDCALL GetCharWidthFloatW (INTEGER p0, INTEGER p1, INTEGER p2, SHORTREAL *p3);
__EXTERN INTEGER __STDCALL GetCharWidthW (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER *p3);
__EXTERN INTEGER __STDCALL GetCharacterPlacementA (INTEGER p0, WinApi_PtrSTR p1, INTEGER p2, INTEGER p3, WinApi_GCP_RESULTSA *p4, INTEGER p5);
__EXTERN INTEGER __STDCALL GetCharacterPlacementA (INTEGER p0, WinApi_PtrSTR p1, INTEGER p2, INTEGER p3, WinApi_GCP_RESULTSA *p4, INTEGER p5);
__EXTERN INTEGER __STDCALL GetCharacterPlacementW (INTEGER p0, WinApi_PtrWSTR p1, INTEGER p2, INTEGER p3, WinApi_GCP_RESULTSW *p4, INTEGER p5);
__EXTERN INTEGER __STDCALL GetClassInfoA (INTEGER hInstance, WinApi_PtrSTR lpClassName, WinApi_WNDCLASSA *lpWndClass);
__EXTERN INTEGER __STDCALL GetClassInfoA (INTEGER hInstance, WinApi_PtrSTR lpClassName, WinApi_WNDCLASSA *lpWndClass);
__EXTERN INTEGER __STDCALL GetClassInfoExA (INTEGER p0, WinApi_PtrSTR p1, WinApi_WNDCLASSEXA *p2);
__EXTERN INTEGER __STDCALL GetClassInfoExA (INTEGER p0, WinApi_PtrSTR p1, WinApi_WNDCLASSEXA *p2);
__EXTERN INTEGER __STDCALL GetClassInfoExW (INTEGER p0, WinApi_PtrWSTR p1, WinApi_WNDCLASSEXW *p2);
__EXTERN INTEGER __STDCALL GetClassInfoW (INTEGER hInstance, WinApi_PtrWSTR lpClassName, WinApi_WNDCLASSW *lpWndClass);
__EXTERN INTEGER __STDCALL GetClassLongA (INTEGER hWnd, INTEGER nIndex);
__EXTERN INTEGER __STDCALL GetClassLongA (INTEGER hWnd, INTEGER nIndex);
__EXTERN INTEGER __STDCALL GetClassLongW (INTEGER hWnd, INTEGER nIndex);
__EXTERN INTEGER __STDCALL GetClassNameA (INTEGER hWnd, WinApi_PtrSTR lpClassName, INTEGER nMaxCount);
__EXTERN INTEGER __STDCALL GetClassNameA (INTEGER hWnd, WinApi_PtrSTR lpClassName, INTEGER nMaxCount);
__EXTERN INTEGER __STDCALL GetClassNameW (INTEGER hWnd, WinApi_PtrWSTR lpClassName, INTEGER nMaxCount);
__EXTERN SHORTINT __STDCALL GetClassWord (INTEGER hWnd, INTEGER nIndex);
__EXTERN INTEGER __STDCALL GetClientRect (INTEGER hWnd, WinApi_RECT *lpRect);
__EXTERN INTEGER __STDCALL GetClipBox (INTEGER p0, WinApi_RECT *p1);
__EXTERN INTEGER __STDCALL GetClipCursor (WinApi_RECT *lpRect);
__EXTERN INTEGER __STDCALL GetClipRgn (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL GetClipboardData (INTEGER uFormat);
__EXTERN INTEGER __STDCALL GetClipboardFormatNameA (INTEGER format, WinApi_PtrSTR lpszFormatName, INTEGER cchMaxCount);
__EXTERN INTEGER __STDCALL GetClipboardFormatNameA (INTEGER format, WinApi_PtrSTR lpszFormatName, INTEGER cchMaxCount);
__EXTERN INTEGER __STDCALL GetClipboardFormatNameW (INTEGER format, WinApi_PtrWSTR lpszFormatName, INTEGER cchMaxCount);
__EXTERN INTEGER __STDCALL GetClipboardOwner (void);
__EXTERN INTEGER __STDCALL GetClipboardViewer (void);
__EXTERN INTEGER __STDCALL GetColorAdjustment (INTEGER p0, WinApi_COLORADJUSTMENT *p1);
__EXTERN INTEGER __STDCALL GetColorSpace (INTEGER p0);
__EXTERN INTEGER __STDCALL GetCommConfig (INTEGER hCommDev, WinApi_COMMCONFIG *lpCC, INTEGER *lpdwSize);
__EXTERN INTEGER __STDCALL GetCommMask (INTEGER hFile, SET *lpEvtMask);
__EXTERN INTEGER __STDCALL GetCommModemStatus (INTEGER hFile, SET *lpModemStat);
__EXTERN INTEGER __STDCALL GetCommProperties (INTEGER hFile, WinApi_COMMPROP *lpCommProp);
__EXTERN INTEGER __STDCALL GetCommState (INTEGER hFile, WinApi_DCB *lpDCB);
__EXTERN INTEGER __STDCALL GetCommTimeouts (INTEGER hFile, WinApi_COMMTIMEOUTS *lpCommTimeouts);
__EXTERN WinApi_PtrSTR __STDCALL GetCommandLineA (void);
__EXTERN WinApi_PtrSTR __STDCALL GetCommandLineA (void);
__EXTERN WinApi_PtrWSTR __STDCALL GetCommandLineW (void);
__EXTERN INTEGER __STDCALL GetCompressedFileSizeA (WinApi_PtrSTR lpFileName, INTEGER *lpFileSizeHigh);
__EXTERN INTEGER __STDCALL GetCompressedFileSizeA (WinApi_PtrSTR lpFileName, INTEGER *lpFileSizeHigh);
__EXTERN INTEGER __STDCALL GetCompressedFileSizeW (WinApi_PtrWSTR lpFileName, INTEGER *lpFileSizeHigh);
__EXTERN INTEGER __STDCALL GetComputerNameA (WinApi_PtrSTR lpBuffer, INTEGER *nSize);
__EXTERN INTEGER __STDCALL GetComputerNameA (WinApi_PtrSTR lpBuffer, INTEGER *nSize);
__EXTERN INTEGER __STDCALL GetComputerNameW (WinApi_PtrWSTR lpBuffer, INTEGER *nSize);
__EXTERN INTEGER __STDCALL GetConsoleCP (void);
__EXTERN INTEGER __STDCALL GetConsoleCursorInfo (INTEGER hConsoleOutput, WinApi_CONSOLE_CURSOR_INFO *lpConsoleCursorInfo);
__EXTERN INTEGER __STDCALL GetConsoleMode (INTEGER hConsoleHandle, SET *lpMode);
__EXTERN INTEGER __STDCALL GetConsoleOutputCP (void);
__EXTERN INTEGER __STDCALL GetConsoleScreenBufferInfo (INTEGER hConsoleOutput, WinApi_CONSOLE_SCREEN_BUFFER_INFO *lpConsoleScreenBufferInfo);
__EXTERN INTEGER __STDCALL GetConsoleTitleA (WinApi_PtrSTR lpConsoleTitle, INTEGER nSize);
__EXTERN INTEGER __STDCALL GetConsoleTitleA (WinApi_PtrSTR lpConsoleTitle, INTEGER nSize);
__EXTERN INTEGER __STDCALL GetConsoleTitleW (WinApi_PtrWSTR lpConsoleTitle, INTEGER nSize);
__EXTERN INTEGER __STDCALL GetCurrencyFormatA (INTEGER Locale, SET dwFlags, WinApi_PtrSTR lpValue, WinApi_CURRENCYFMTA *lpFormat, WinApi_PtrSTR lpCurrencyStr, INTEGER cchCurrency);
__EXTERN INTEGER __STDCALL GetCurrencyFormatA (INTEGER Locale, SET dwFlags, WinApi_PtrSTR lpValue, WinApi_CURRENCYFMTA *lpFormat, WinApi_PtrSTR lpCurrencyStr, INTEGER cchCurrency);
__EXTERN INTEGER __STDCALL GetCurrencyFormatW (INTEGER Locale, SET dwFlags, WinApi_PtrWSTR lpValue, WinApi_CURRENCYFMTW *lpFormat, WinApi_PtrWSTR lpCurrencyStr, INTEGER cchCurrency);
__EXTERN INTEGER __STDCALL GetCurrentDirectoryA (INTEGER nBufferLength, WinApi_PtrSTR lpBuffer);
__EXTERN INTEGER __STDCALL GetCurrentDirectoryA (INTEGER nBufferLength, WinApi_PtrSTR lpBuffer);
__EXTERN INTEGER __STDCALL GetCurrentDirectoryW (INTEGER nBufferLength, WinApi_PtrWSTR lpBuffer);
__EXTERN INTEGER __STDCALL GetCurrentHwProfileA (WinApi_HW_PROFILE_INFOA *lpHwProfileInfo);
__EXTERN INTEGER __STDCALL GetCurrentHwProfileA (WinApi_HW_PROFILE_INFOA *lpHwProfileInfo);
__EXTERN INTEGER __STDCALL GetCurrentHwProfileW (WinApi_HW_PROFILE_INFOW *lpHwProfileInfo);
__EXTERN INTEGER __STDCALL GetCurrentObject (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL GetCurrentPositionEx (INTEGER p0, WinApi_POINT *p1);
__EXTERN INTEGER __STDCALL GetCurrentProcess (void);
__EXTERN INTEGER __STDCALL GetCurrentProcessId (void);
__EXTERN INTEGER __STDCALL GetCurrentThread (void);
__EXTERN INTEGER __STDCALL GetCurrentThreadId (void);
__EXTERN INTEGER __STDCALL GetCursor (void);
__EXTERN INTEGER __STDCALL GetCursorPos (WinApi_POINT *lpPoint);
__EXTERN INTEGER __STDCALL GetDC (INTEGER hWnd);
__EXTERN INTEGER __STDCALL GetDCEx (INTEGER hWnd, INTEGER hrgnClip, SET flags);
__EXTERN INTEGER __STDCALL GetDCOrgEx (INTEGER p0, WinApi_POINT *p1);
__EXTERN INTEGER __STDCALL GetDIBColorTable (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_RGBQUAD *p3);
__EXTERN INTEGER __STDCALL GetDIBits (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4, WinApi_BITMAPINFO *p5, INTEGER p6);
__EXTERN INTEGER __STDCALL GetDateFormatA (INTEGER Locale, SET dwFlags, WinApi_SYSTEMTIME *lpDate, WinApi_PtrSTR lpFormat, WinApi_PtrSTR lpDateStr, INTEGER cchDate);
__EXTERN INTEGER __STDCALL GetDateFormatA (INTEGER Locale, SET dwFlags, WinApi_SYSTEMTIME *lpDate, WinApi_PtrSTR lpFormat, WinApi_PtrSTR lpDateStr, INTEGER cchDate);
__EXTERN INTEGER __STDCALL GetDateFormatW (INTEGER Locale, SET dwFlags, WinApi_SYSTEMTIME *lpDate, WinApi_PtrWSTR lpFormat, WinApi_PtrWSTR lpDateStr, INTEGER cchDate);
__EXTERN INTEGER __STDCALL GetDefaultCommConfigA (WinApi_PtrSTR lpszName, WinApi_COMMCONFIG *lpCC, INTEGER *lpdwSize);
__EXTERN INTEGER __STDCALL GetDefaultCommConfigA (WinApi_PtrSTR lpszName, WinApi_COMMCONFIG *lpCC, INTEGER *lpdwSize);
__EXTERN INTEGER __STDCALL GetDefaultCommConfigW (WinApi_PtrWSTR lpszName, WinApi_COMMCONFIG *lpCC, INTEGER *lpdwSize);
__EXTERN INTEGER __STDCALL GetDesktopWindow (void);
__EXTERN INTEGER __STDCALL GetDeviceCaps (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL GetDeviceGammaRamp (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL GetDialogBaseUnits (void);
__EXTERN INTEGER __STDCALL GetDiskFreeSpaceA (WinApi_PtrSTR lpRootPathName, INTEGER *lpSectorsPerCluster, INTEGER *lpBytesPerSector, INTEGER *lpNumberOfFreeClusters, INTEGER *lpTotalNumberOfClusters);
__EXTERN INTEGER __STDCALL GetDiskFreeSpaceA (WinApi_PtrSTR lpRootPathName, INTEGER *lpSectorsPerCluster, INTEGER *lpBytesPerSector, INTEGER *lpNumberOfFreeClusters, INTEGER *lpTotalNumberOfClusters);
__EXTERN INTEGER __STDCALL GetDiskFreeSpaceW (WinApi_PtrWSTR lpRootPathName, INTEGER *lpSectorsPerCluster, INTEGER *lpBytesPerSector, INTEGER *lpNumberOfFreeClusters, INTEGER *lpTotalNumberOfClusters);
__EXTERN INTEGER __STDCALL GetDlgCtrlID (INTEGER hWnd);
__EXTERN INTEGER __STDCALL GetDlgItem (INTEGER hDlg, INTEGER nIDDlgItem);
__EXTERN INTEGER __STDCALL GetDlgItemInt (INTEGER hDlg, INTEGER nIDDlgItem, INTEGER *lpTranslated, INTEGER bSigned);
__EXTERN INTEGER __STDCALL GetDlgItemTextA (INTEGER hDlg, INTEGER nIDDlgItem, WinApi_PtrSTR lpString, INTEGER nMaxCount);
__EXTERN INTEGER __STDCALL GetDlgItemTextA (INTEGER hDlg, INTEGER nIDDlgItem, WinApi_PtrSTR lpString, INTEGER nMaxCount);
__EXTERN INTEGER __STDCALL GetDlgItemTextW (INTEGER hDlg, INTEGER nIDDlgItem, WinApi_PtrWSTR lpString, INTEGER nMaxCount);
__EXTERN INTEGER __STDCALL GetDoubleClickTime (void);
__EXTERN INTEGER __STDCALL GetDriveTypeA (WinApi_PtrSTR lpRootPathName);
__EXTERN INTEGER __STDCALL GetDriveTypeA (WinApi_PtrSTR lpRootPathName);
__EXTERN INTEGER __STDCALL GetDriveTypeW (WinApi_PtrWSTR lpRootPathName);
__EXTERN INTEGER __STDCALL GetEnhMetaFileA (WinApi_PtrSTR p0);
__EXTERN INTEGER __STDCALL GetEnhMetaFileA (WinApi_PtrSTR p0);
__EXTERN INTEGER __STDCALL GetEnhMetaFileBits (INTEGER p0, INTEGER p1, CHAR *p2);
__EXTERN INTEGER __STDCALL GetEnhMetaFileDescriptionA (INTEGER p0, INTEGER p1, WinApi_PtrSTR p2);
__EXTERN INTEGER __STDCALL GetEnhMetaFileDescriptionA (INTEGER p0, INTEGER p1, WinApi_PtrSTR p2);
__EXTERN INTEGER __STDCALL GetEnhMetaFileDescriptionW (INTEGER p0, INTEGER p1, WinApi_PtrWSTR p2);
__EXTERN INTEGER __STDCALL GetEnhMetaFileHeader (INTEGER p0, INTEGER p1, WinApi_ENHMETAHEADER *p2);
__EXTERN INTEGER __STDCALL GetEnhMetaFilePaletteEntries (INTEGER p0, INTEGER p1, WinApi_PALETTEENTRY *p2);
__EXTERN INTEGER __STDCALL GetEnhMetaFilePixelFormat (INTEGER p0, INTEGER p1, WinApi_PIXELFORMATDESCRIPTOR *p2);
__EXTERN INTEGER __STDCALL GetEnhMetaFileW (WinApi_PtrWSTR p0);
__EXTERN WinApi_PtrSTR __STDCALL GetEnvironmentStrings (void);
__EXTERN WinApi_PtrSTR __STDCALL GetEnvironmentStrings (void);
__EXTERN WinApi_PtrWSTR __STDCALL GetEnvironmentStringsW (void);
__EXTERN INTEGER __STDCALL GetEnvironmentVariableA (WinApi_PtrSTR lpName, WinApi_PtrSTR lpBuffer, INTEGER nSize);
__EXTERN INTEGER __STDCALL GetEnvironmentVariableA (WinApi_PtrSTR lpName, WinApi_PtrSTR lpBuffer, INTEGER nSize);
__EXTERN INTEGER __STDCALL GetEnvironmentVariableW (WinApi_PtrWSTR lpName, WinApi_PtrWSTR lpBuffer, INTEGER nSize);
__EXTERN INTEGER __STDCALL GetExitCodeProcess (INTEGER hProcess, INTEGER *lpExitCode);
__EXTERN INTEGER __STDCALL GetExitCodeThread (INTEGER hThread, INTEGER *lpExitCode);
__EXTERN INTEGER __STDCALL GetExpandedNameA (WinApi_PtrSTR p0, WinApi_PtrSTR p1);
__EXTERN INTEGER __STDCALL GetExpandedNameA (WinApi_PtrSTR p0, WinApi_PtrSTR p1);
__EXTERN INTEGER __STDCALL GetExpandedNameW (WinApi_PtrWSTR p0, WinApi_PtrWSTR p1);
__EXTERN INTEGER __STDCALL GetFileAttributesA (WinApi_PtrSTR lpFileName);
__EXTERN INTEGER __STDCALL GetFileAttributesA (WinApi_PtrSTR lpFileName);
__EXTERN INTEGER __STDCALL GetFileAttributesW (WinApi_PtrWSTR lpFileName);
__EXTERN INTEGER __STDCALL GetFileSecurityA (WinApi_PtrSTR lpFileName, SET RequestedInformation, INTEGER pSecurityDescriptor, INTEGER nLength, INTEGER *lpnLengthNeeded);
__EXTERN INTEGER __STDCALL GetFileSecurityA (WinApi_PtrSTR lpFileName, SET RequestedInformation, INTEGER pSecurityDescriptor, INTEGER nLength, INTEGER *lpnLengthNeeded);
__EXTERN INTEGER __STDCALL GetFileSecurityW (WinApi_PtrWSTR lpFileName, SET RequestedInformation, INTEGER pSecurityDescriptor, INTEGER nLength, INTEGER *lpnLengthNeeded);
__EXTERN INTEGER __STDCALL GetFileSize (INTEGER hFile, INTEGER *lpFileSizeHigh);
__EXTERN INTEGER __STDCALL GetFileSizeEx (INTEGER hFile, LONGINT *lpFileSizeHigh);
__EXTERN INTEGER __STDCALL GetFileTime (INTEGER hFile, WinApi_FILETIME *lpCreationTime, WinApi_FILETIME *lpLastAccessTime, WinApi_FILETIME *lpLastWriteTime);
__EXTERN INTEGER __STDCALL GetFileType (INTEGER hFile);
__EXTERN INTEGER __STDCALL GetFileVersionInfoA (WinApi_PtrSTR lptstrFilename, INTEGER dwHandle, INTEGER dwLen, INTEGER lpData);
__EXTERN INTEGER __STDCALL GetFileVersionInfoA (WinApi_PtrSTR lptstrFilename, INTEGER dwHandle, INTEGER dwLen, INTEGER lpData);
__EXTERN INTEGER __STDCALL GetFileVersionInfoSizeA (WinApi_PtrSTR lptstrFilename, INTEGER *lpdwHandle);
__EXTERN INTEGER __STDCALL GetFileVersionInfoSizeA (WinApi_PtrSTR lptstrFilename, INTEGER *lpdwHandle);
__EXTERN INTEGER __STDCALL GetFileVersionInfoSizeW (WinApi_PtrWSTR lptstrFilename, INTEGER *lpdwHandle);
__EXTERN INTEGER __STDCALL GetFileVersionInfoW (WinApi_PtrWSTR lptstrFilename, INTEGER dwHandle, INTEGER dwLen, INTEGER lpData);
__EXTERN INTEGER __STDCALL GetFocus (void);
__EXTERN INTEGER __STDCALL GetFontData (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4);
__EXTERN SET __STDCALL GetFontLanguageInfo (INTEGER p0);
__EXTERN INTEGER __STDCALL GetForegroundWindow (void);
__EXTERN INTEGER __STDCALL GetFormA (INTEGER hPrinter, WinApi_PtrSTR pFormName, INTEGER Level, CHAR *pForm, INTEGER cbBuf, INTEGER *pcbNeeded);
__EXTERN INTEGER __STDCALL GetFormA (INTEGER hPrinter, WinApi_PtrSTR pFormName, INTEGER Level, CHAR *pForm, INTEGER cbBuf, INTEGER *pcbNeeded);
__EXTERN INTEGER __STDCALL GetFormW (INTEGER hPrinter, WinApi_PtrWSTR pFormName, INTEGER Level, CHAR *pForm, INTEGER cbBuf, INTEGER *pcbNeeded);
__EXTERN INTEGER __STDCALL GetFullPathNameA (WinApi_PtrSTR lpFileName, INTEGER nBufferLength, WinApi_PtrSTR lpBuffer, WinApi_PtrSTR *lpFilePart);
__EXTERN INTEGER __STDCALL GetFullPathNameA (WinApi_PtrSTR lpFileName, INTEGER nBufferLength, WinApi_PtrSTR lpBuffer, WinApi_PtrSTR *lpFilePart);
__EXTERN INTEGER __STDCALL GetFullPathNameW (WinApi_PtrWSTR lpFileName, INTEGER nBufferLength, WinApi_PtrWSTR lpBuffer, WinApi_PtrWSTR *lpFilePart);
__EXTERN INTEGER __STDCALL GetGlyphOutlineA (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_GLYPHMETRICS *p3, INTEGER p4, INTEGER p5, WinApi_MAT2 *p6);
__EXTERN INTEGER __STDCALL GetGlyphOutlineA (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_GLYPHMETRICS *p3, INTEGER p4, INTEGER p5, WinApi_MAT2 *p6);
__EXTERN INTEGER __STDCALL GetGlyphOutlineW (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_GLYPHMETRICS *p3, INTEGER p4, INTEGER p5, WinApi_MAT2 *p6);
__EXTERN INTEGER __STDCALL GetGraphicsMode (INTEGER p0);
__EXTERN INTEGER __STDCALL GetHandleInformation (INTEGER hObject, SET *lpdwFlags);
__EXTERN INTEGER __STDCALL GetICMProfileA (INTEGER p0, INTEGER *p1, WinApi_PtrSTR p2);
__EXTERN INTEGER __STDCALL GetICMProfileA (INTEGER p0, INTEGER *p1, WinApi_PtrSTR p2);
__EXTERN INTEGER __STDCALL GetICMProfileW (INTEGER p0, INTEGER *p1, WinApi_PtrWSTR p2);
__EXTERN INTEGER __STDCALL GetIconInfo (INTEGER hIcon, WinApi_ICONINFO *piconinfo);
__EXTERN INTEGER __STDCALL GetInputState (void);
__EXTERN INTEGER __STDCALL GetJobA (INTEGER hPrinter, INTEGER JobId, INTEGER Level, CHAR *pJob, INTEGER cbBuf, INTEGER *pcbNeeded);
__EXTERN INTEGER __STDCALL GetJobA (INTEGER hPrinter, INTEGER JobId, INTEGER Level, CHAR *pJob, INTEGER cbBuf, INTEGER *pcbNeeded);
__EXTERN INTEGER __STDCALL GetJobW (INTEGER hPrinter, INTEGER JobId, INTEGER Level, CHAR *pJob, INTEGER cbBuf, INTEGER *pcbNeeded);
__EXTERN INTEGER __STDCALL GetKBCodePage (void);
__EXTERN INTEGER __STDCALL GetKernelObjectSecurity (INTEGER Handle, SET RequestedInformation, INTEGER pSecurityDescriptor, INTEGER nLength, INTEGER *lpnLengthNeeded);
__EXTERN INTEGER __STDCALL GetKerningPairsA (INTEGER p0, INTEGER p1, WinApi_KERNINGPAIR *p2);
__EXTERN INTEGER __STDCALL GetKerningPairsA (INTEGER p0, INTEGER p1, WinApi_KERNINGPAIR *p2);
__EXTERN INTEGER __STDCALL GetKerningPairsW (INTEGER p0, INTEGER p1, WinApi_KERNINGPAIR *p2);
__EXTERN INTEGER __STDCALL GetKeyNameTextA (INTEGER lParam, WinApi_PtrSTR lpString, INTEGER nSize);
__EXTERN INTEGER __STDCALL GetKeyNameTextA (INTEGER lParam, WinApi_PtrSTR lpString, INTEGER nSize);
__EXTERN INTEGER __STDCALL GetKeyNameTextW (INTEGER lParam, WinApi_PtrWSTR lpString, INTEGER nSize);
__EXTERN SHORTINT __STDCALL GetKeyState (INTEGER nVirtKey);
__EXTERN INTEGER __STDCALL GetKeyboardLayout (INTEGER dwLayout);
__EXTERN INTEGER __STDCALL GetKeyboardLayoutList (INTEGER nBuff, INTEGER *lpList);
__EXTERN INTEGER __STDCALL GetKeyboardLayoutNameA (WinApi_PtrSTR pwszKLID);
__EXTERN INTEGER __STDCALL GetKeyboardLayoutNameA (WinApi_PtrSTR pwszKLID);
__EXTERN INTEGER __STDCALL GetKeyboardLayoutNameW (WinApi_PtrWSTR pwszKLID);
__EXTERN INTEGER __STDCALL GetKeyboardState (CHAR *lpKeyState);
__EXTERN INTEGER __STDCALL GetKeyboardType (INTEGER nTypeFlag);
__EXTERN INTEGER __STDCALL GetLargestConsoleWindowSize (INTEGER hConsoleOutput);
__EXTERN INTEGER __STDCALL GetLastActivePopup (INTEGER hWnd);
__EXTERN INTEGER __STDCALL GetLastError (void);
__EXTERN INTEGER __STDCALL GetLengthSid (INTEGER pSid);
__EXTERN void __STDCALL GetLocalTime (WinApi_SYSTEMTIME *lpSystemTime);
__EXTERN INTEGER __STDCALL GetLocaleInfoA (INTEGER Locale, INTEGER LCType, WinApi_PtrSTR lpLCData, INTEGER cchData);
__EXTERN INTEGER __STDCALL GetLocaleInfoA (INTEGER Locale, INTEGER LCType, WinApi_PtrSTR lpLCData, INTEGER cchData);
__EXTERN INTEGER __STDCALL GetLocaleInfoW (INTEGER Locale, INTEGER LCType, WinApi_PtrWSTR lpLCData, INTEGER cchData);
__EXTERN INTEGER __STDCALL GetLogColorSpaceA (INTEGER p0, WinApi_LOGCOLORSPACEA *p1, INTEGER p2);
__EXTERN INTEGER __STDCALL GetLogColorSpaceA (INTEGER p0, WinApi_LOGCOLORSPACEA *p1, INTEGER p2);
__EXTERN INTEGER __STDCALL GetLogColorSpaceW (INTEGER p0, WinApi_LOGCOLORSPACEW *p1, INTEGER p2);
__EXTERN INTEGER __STDCALL GetLogicalDriveStringsA (INTEGER nBufferLength, WinApi_PtrSTR lpBuffer);
__EXTERN INTEGER __STDCALL GetLogicalDriveStringsA (INTEGER nBufferLength, WinApi_PtrSTR lpBuffer);
__EXTERN INTEGER __STDCALL GetLogicalDriveStringsW (INTEGER nBufferLength, WinApi_PtrWSTR lpBuffer);
__EXTERN INTEGER __STDCALL GetLogicalDrives (void);
__EXTERN INTEGER __STDCALL GetMailslotInfo (INTEGER hMailslot, INTEGER *lpMaxMessageSize, INTEGER *lpNextSize, INTEGER *lpMessageCount, INTEGER *lpReadTimeout);
__EXTERN INTEGER __STDCALL GetMapMode (INTEGER p0);
__EXTERN INTEGER __STDCALL GetMenu (INTEGER hWnd);
__EXTERN INTEGER __STDCALL GetMenuCheckMarkDimensions (void);
__EXTERN INTEGER __STDCALL GetMenuContextHelpId (INTEGER p0);
__EXTERN INTEGER __STDCALL GetMenuDefaultItem (INTEGER hMenu, INTEGER fByPos, SET gmdiFlags);
__EXTERN INTEGER __STDCALL GetMenuItemCount (INTEGER hMenu);
__EXTERN INTEGER __STDCALL GetMenuItemID (INTEGER hMenu, INTEGER nPos);
__EXTERN INTEGER __STDCALL GetMenuItemInfoA (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_MENUITEMINFOA *p3);
__EXTERN INTEGER __STDCALL GetMenuItemInfoA (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_MENUITEMINFOA *p3);
__EXTERN INTEGER __STDCALL GetMenuItemInfoW (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_MENUITEMINFOW *p3);
__EXTERN INTEGER __STDCALL GetMenuItemRect (INTEGER hWnd, INTEGER hMenu, INTEGER uItem, WinApi_RECT *lprcItem);
__EXTERN INTEGER __STDCALL GetMenuState (INTEGER hMenu, INTEGER uId, SET uFlags);
__EXTERN INTEGER __STDCALL GetMenuStringA (INTEGER hMenu, INTEGER uIDItem, WinApi_PtrSTR lpString, INTEGER nMaxCount, SET uFlag);
__EXTERN INTEGER __STDCALL GetMenuStringA (INTEGER hMenu, INTEGER uIDItem, WinApi_PtrSTR lpString, INTEGER nMaxCount, SET uFlag);
__EXTERN INTEGER __STDCALL GetMenuStringW (INTEGER hMenu, INTEGER uIDItem, WinApi_PtrWSTR lpString, INTEGER nMaxCount, SET uFlag);
__EXTERN INTEGER __STDCALL GetMessageA (WinApi_MSG *lpMsg, INTEGER hWnd, INTEGER wMsgFilterMin, INTEGER wMsgFilterMax);
__EXTERN INTEGER __STDCALL GetMessageA (WinApi_MSG *lpMsg, INTEGER hWnd, INTEGER wMsgFilterMin, INTEGER wMsgFilterMax);
__EXTERN INTEGER __STDCALL GetMessageExtraInfo (void);
__EXTERN INTEGER __STDCALL GetMessagePos (void);
__EXTERN INTEGER __STDCALL GetMessageTime (void);
__EXTERN INTEGER __STDCALL GetMessageW (WinApi_MSG *lpMsg, INTEGER hWnd, INTEGER wMsgFilterMin, INTEGER wMsgFilterMax);
__EXTERN INTEGER __STDCALL GetMetaFileA (WinApi_PtrSTR p0);
__EXTERN INTEGER __STDCALL GetMetaFileA (WinApi_PtrSTR p0);
__EXTERN INTEGER __STDCALL GetMetaFileBitsEx (INTEGER p0, INTEGER p1, BYTE *p2);
__EXTERN INTEGER __STDCALL GetMetaFileW (WinApi_PtrWSTR p0);
__EXTERN INTEGER __STDCALL GetMetaRgn (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL GetMiterLimit (INTEGER p0, SHORTREAL *p1);
__EXTERN INTEGER __STDCALL GetModuleFileNameA (INTEGER hModule, WinApi_PtrSTR lpFilename, INTEGER nSize);
__EXTERN INTEGER __STDCALL GetModuleFileNameA (INTEGER hModule, WinApi_PtrSTR lpFilename, INTEGER nSize);
__EXTERN INTEGER __STDCALL GetModuleFileNameW (INTEGER hModule, WinApi_PtrWSTR lpFilename, INTEGER nSize);
__EXTERN INTEGER __STDCALL GetModuleHandleA (WinApi_PtrSTR lpModuleName);
__EXTERN INTEGER __STDCALL GetModuleHandleA (WinApi_PtrSTR lpModuleName);
__EXTERN INTEGER __STDCALL GetModuleHandleW (WinApi_PtrWSTR lpModuleName);
__EXTERN INTEGER __STDCALL GetNamedPipeHandleStateA (INTEGER hNamedPipe, INTEGER *lpState, INTEGER *lpCurInstances, INTEGER *lpMaxCollectionCount, INTEGER *lpCollectDataTimeout, WinApi_PtrSTR lpUserName, INTEGER nMaxUserNameSize);
__EXTERN INTEGER __STDCALL GetNamedPipeHandleStateA (INTEGER hNamedPipe, INTEGER *lpState, INTEGER *lpCurInstances, INTEGER *lpMaxCollectionCount, INTEGER *lpCollectDataTimeout, WinApi_PtrSTR lpUserName, INTEGER nMaxUserNameSize);
__EXTERN INTEGER __STDCALL GetNamedPipeHandleStateW (INTEGER hNamedPipe, INTEGER *lpState, INTEGER *lpCurInstances, INTEGER *lpMaxCollectionCount, INTEGER *lpCollectDataTimeout, WinApi_PtrWSTR lpUserName, INTEGER nMaxUserNameSize);
__EXTERN INTEGER __STDCALL GetNamedPipeInfo (INTEGER hNamedPipe, INTEGER *lpFlags, INTEGER *lpOutBufferSize, INTEGER *lpInBufferSize, INTEGER *lpMaxInstances);
__EXTERN INTEGER __STDCALL GetNearestColor (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL GetNearestPaletteIndex (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL GetNextDlgGroupItem (INTEGER hDlg, INTEGER hCtl, INTEGER bPrevious);
__EXTERN INTEGER __STDCALL GetNextDlgTabItem (INTEGER hDlg, INTEGER hCtl, INTEGER bPrevious);
__EXTERN INTEGER __STDCALL GetNumberFormatA (INTEGER Locale, SET dwFlags, WinApi_PtrSTR lpValue, WinApi_NUMBERFMTA *lpFormat, WinApi_PtrSTR lpNumberStr, INTEGER cchNumber);
__EXTERN INTEGER __STDCALL GetNumberFormatA (INTEGER Locale, SET dwFlags, WinApi_PtrSTR lpValue, WinApi_NUMBERFMTA *lpFormat, WinApi_PtrSTR lpNumberStr, INTEGER cchNumber);
__EXTERN INTEGER __STDCALL GetNumberFormatW (INTEGER Locale, SET dwFlags, WinApi_PtrWSTR lpValue, WinApi_NUMBERFMTW *lpFormat, WinApi_PtrWSTR lpNumberStr, INTEGER cchNumber);
__EXTERN INTEGER __STDCALL GetNumberOfConsoleInputEvents (INTEGER hConsoleInput, INTEGER *lpNumberOfEvents);
__EXTERN INTEGER __STDCALL GetNumberOfConsoleMouseButtons (INTEGER *lpNumberOfMouseButtons);
__EXTERN INTEGER __STDCALL GetNumberOfEventLogRecords (INTEGER hEventLog, INTEGER *NumberOfRecords);
__EXTERN INTEGER __STDCALL GetOEMCP (void);
__EXTERN INTEGER __STDCALL GetObjectA (INTEGER p0, INTEGER p1, INTEGER p2);
__EXTERN INTEGER __STDCALL GetObjectA (INTEGER p0, INTEGER p1, INTEGER p2);
__EXTERN INTEGER __STDCALL GetObjectType (INTEGER h);
__EXTERN INTEGER __STDCALL GetObjectW (INTEGER p0, INTEGER p1, INTEGER p2);
__EXTERN INTEGER __STDCALL GetOldestEventLogRecord (INTEGER hEventLog, INTEGER *OldestRecord);
__EXTERN INTEGER __STDCALL GetOpenClipboardWindow (void);
__EXTERN INTEGER __STDCALL GetOutlineTextMetricsA (INTEGER p0, INTEGER p1, WinApi_OUTLINETEXTMETRICA *p2);
__EXTERN INTEGER __STDCALL GetOutlineTextMetricsA (INTEGER p0, INTEGER p1, WinApi_OUTLINETEXTMETRICA *p2);
__EXTERN INTEGER __STDCALL GetOutlineTextMetricsW (INTEGER p0, INTEGER p1, WinApi_OUTLINETEXTMETRICW *p2);
__EXTERN INTEGER __STDCALL GetOverlappedResult (INTEGER hFile, WinApi_OVERLAPPED *lpOverlapped, INTEGER *lpNumberOfBytesTransferred, INTEGER bWait);
__EXTERN INTEGER __STDCALL GetPaletteEntries (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_PALETTEENTRY *p3);
__EXTERN INTEGER __STDCALL GetParent (INTEGER hWnd);
__EXTERN INTEGER __STDCALL GetPath (INTEGER p0, WinApi_POINT *p1, CHAR *p2, INTEGER p3);
__EXTERN INTEGER __STDCALL GetPixel (INTEGER p0, INTEGER p1, INTEGER p2);
__EXTERN INTEGER __STDCALL GetPixelFormat (INTEGER p0);
__EXTERN INTEGER __STDCALL GetPolyFillMode (INTEGER p0);
__EXTERN INTEGER __STDCALL GetPrintProcessorDirectoryA (WinApi_PtrSTR pName, WinApi_PtrSTR pEnvironment, INTEGER Level, CHAR *pPrintProcessorInfo, INTEGER cbBuf, INTEGER *pcbNeeded);
__EXTERN INTEGER __STDCALL GetPrintProcessorDirectoryA (WinApi_PtrSTR pName, WinApi_PtrSTR pEnvironment, INTEGER Level, CHAR *pPrintProcessorInfo, INTEGER cbBuf, INTEGER *pcbNeeded);
__EXTERN INTEGER __STDCALL GetPrintProcessorDirectoryW (WinApi_PtrWSTR pName, WinApi_PtrWSTR pEnvironment, INTEGER Level, CHAR *pPrintProcessorInfo, INTEGER cbBuf, INTEGER *pcbNeeded);
__EXTERN INTEGER __STDCALL GetPrinterA (INTEGER hPrinter, INTEGER Level, CHAR *pPrinter, INTEGER cbBuf, INTEGER *pcbNeeded);
__EXTERN INTEGER __STDCALL GetPrinterA (INTEGER hPrinter, INTEGER Level, CHAR *pPrinter, INTEGER cbBuf, INTEGER *pcbNeeded);
__EXTERN INTEGER __STDCALL GetPrinterDataA (INTEGER hPrinter, WinApi_PtrSTR pValueName, INTEGER *pType, CHAR *pData, INTEGER nSize, INTEGER *pcbNeeded);
__EXTERN INTEGER __STDCALL GetPrinterDataA (INTEGER hPrinter, WinApi_PtrSTR pValueName, INTEGER *pType, CHAR *pData, INTEGER nSize, INTEGER *pcbNeeded);
__EXTERN INTEGER __STDCALL GetPrinterDataW (INTEGER hPrinter, WinApi_PtrWSTR pValueName, INTEGER *pType, CHAR *pData, INTEGER nSize, INTEGER *pcbNeeded);
__EXTERN INTEGER __STDCALL GetPrinterDriverA (INTEGER hPrinter, WinApi_PtrSTR pEnvironment, INTEGER Level, CHAR *pDriverInfo, INTEGER cbBuf, INTEGER *pcbNeeded);
__EXTERN INTEGER __STDCALL GetPrinterDriverA (INTEGER hPrinter, WinApi_PtrSTR pEnvironment, INTEGER Level, CHAR *pDriverInfo, INTEGER cbBuf, INTEGER *pcbNeeded);
__EXTERN INTEGER __STDCALL GetPrinterDriverDirectoryA (WinApi_PtrSTR pName, WinApi_PtrSTR pEnvironment, INTEGER Level, CHAR *pDriverDirectory, INTEGER cbBuf, INTEGER *pcbNeeded);
__EXTERN INTEGER __STDCALL GetPrinterDriverDirectoryA (WinApi_PtrSTR pName, WinApi_PtrSTR pEnvironment, INTEGER Level, CHAR *pDriverDirectory, INTEGER cbBuf, INTEGER *pcbNeeded);
__EXTERN INTEGER __STDCALL GetPrinterDriverDirectoryW (WinApi_PtrWSTR pName, WinApi_PtrWSTR pEnvironment, INTEGER Level, CHAR *pDriverDirectory, INTEGER cbBuf, INTEGER *pcbNeeded);
__EXTERN INTEGER __STDCALL GetPrinterDriverW (INTEGER hPrinter, WinApi_PtrWSTR pEnvironment, INTEGER Level, CHAR *pDriverInfo, INTEGER cbBuf, INTEGER *pcbNeeded);
__EXTERN INTEGER __STDCALL GetPrinterW (INTEGER hPrinter, INTEGER Level, CHAR *pPrinter, INTEGER cbBuf, INTEGER *pcbNeeded);
__EXTERN INTEGER __STDCALL GetPriorityClass (INTEGER hProcess);
__EXTERN INTEGER __STDCALL GetPriorityClipboardFormat (INTEGER *paFormatPriorityList, INTEGER cFormats);
__EXTERN INTEGER __STDCALL GetPrivateObjectSecurity (INTEGER ObjectDescriptor, SET SecurityInformation, INTEGER ResultantDescriptor, INTEGER DescriptorLength, INTEGER *ReturnLength);
__EXTERN INTEGER __STDCALL GetPrivateProfileIntA (WinApi_PtrSTR lpAppName, WinApi_PtrSTR lpKeyName, INTEGER nDefault, WinApi_PtrSTR lpFileName);
__EXTERN INTEGER __STDCALL GetPrivateProfileIntA (WinApi_PtrSTR lpAppName, WinApi_PtrSTR lpKeyName, INTEGER nDefault, WinApi_PtrSTR lpFileName);
__EXTERN INTEGER __STDCALL GetPrivateProfileIntW (WinApi_PtrWSTR lpAppName, WinApi_PtrWSTR lpKeyName, INTEGER nDefault, WinApi_PtrWSTR lpFileName);
__EXTERN INTEGER __STDCALL GetPrivateProfileSectionA (WinApi_PtrSTR lpAppName, WinApi_PtrSTR lpReturnedString, INTEGER nSize, WinApi_PtrSTR lpFileName);
__EXTERN INTEGER __STDCALL GetPrivateProfileSectionA (WinApi_PtrSTR lpAppName, WinApi_PtrSTR lpReturnedString, INTEGER nSize, WinApi_PtrSTR lpFileName);
__EXTERN INTEGER __STDCALL GetPrivateProfileSectionNamesA (WinApi_PtrSTR lpszReturnBuffer, INTEGER nSize, WinApi_PtrSTR lpFileName);
__EXTERN INTEGER __STDCALL GetPrivateProfileSectionNamesA (WinApi_PtrSTR lpszReturnBuffer, INTEGER nSize, WinApi_PtrSTR lpFileName);
__EXTERN INTEGER __STDCALL GetPrivateProfileSectionNamesW (WinApi_PtrWSTR lpszReturnBuffer, INTEGER nSize, WinApi_PtrWSTR lpFileName);
__EXTERN INTEGER __STDCALL GetPrivateProfileSectionW (WinApi_PtrWSTR lpAppName, WinApi_PtrWSTR lpReturnedString, INTEGER nSize, WinApi_PtrWSTR lpFileName);
__EXTERN INTEGER __STDCALL GetPrivateProfileStringA (WinApi_PtrSTR lpAppName, WinApi_PtrSTR lpKeyName, WinApi_PtrSTR lpDefault, WinApi_PtrSTR lpReturnedString, INTEGER nSize, WinApi_PtrSTR lpFileName);
__EXTERN INTEGER __STDCALL GetPrivateProfileStringA (WinApi_PtrSTR lpAppName, WinApi_PtrSTR lpKeyName, WinApi_PtrSTR lpDefault, WinApi_PtrSTR lpReturnedString, INTEGER nSize, WinApi_PtrSTR lpFileName);
__EXTERN INTEGER __STDCALL GetPrivateProfileStringW (WinApi_PtrWSTR lpAppName, WinApi_PtrWSTR lpKeyName, WinApi_PtrWSTR lpDefault, WinApi_PtrWSTR lpReturnedString, INTEGER nSize, WinApi_PtrWSTR lpFileName);
__EXTERN INTEGER __STDCALL GetPrivateProfileStructA (WinApi_PtrSTR lpszSection, WinApi_PtrSTR lpszKey, INTEGER lpStruct, INTEGER uSizeStruct, WinApi_PtrSTR szFile);
__EXTERN INTEGER __STDCALL GetPrivateProfileStructA (WinApi_PtrSTR lpszSection, WinApi_PtrSTR lpszKey, INTEGER lpStruct, INTEGER uSizeStruct, WinApi_PtrSTR szFile);
__EXTERN INTEGER __STDCALL GetPrivateProfileStructW (WinApi_PtrWSTR lpszSection, WinApi_PtrWSTR lpszKey, INTEGER lpStruct, INTEGER uSizeStruct, WinApi_PtrWSTR szFile);
__EXTERN WinApi_FARPROC __STDCALL GetProcAddress (INTEGER hModule, WinApi_PtrSTR lpProcName);
__EXTERN INTEGER __STDCALL GetProcessAffinityMask (INTEGER hProcess, INTEGER *lpProcessAffinityMask, INTEGER *lpSystemAffinityMask);
__EXTERN INTEGER __STDCALL GetProcessHeap (void);
__EXTERN INTEGER __STDCALL GetProcessHeaps (INTEGER NumberOfHeaps, INTEGER *ProcessHeaps);
__EXTERN INTEGER __STDCALL GetProcessShutdownParameters (INTEGER *lpdwLevel, SET *lpdwFlags);
__EXTERN INTEGER __STDCALL GetProcessTimes (INTEGER hProcess, WinApi_FILETIME *lpCreationTime, WinApi_FILETIME *lpExitTime, WinApi_FILETIME *lpKernelTime, WinApi_FILETIME *lpUserTime);
__EXTERN INTEGER __STDCALL GetProcessVersion (INTEGER ProcessId);
__EXTERN INTEGER __STDCALL GetProcessWindowStation (void);
__EXTERN INTEGER __STDCALL GetProcessWorkingSetSize (INTEGER hProcess, INTEGER *lpMinimumWorkingSetSize, INTEGER *lpMaximumWorkingSetSize);
__EXTERN INTEGER __STDCALL GetProfileIntA (WinApi_PtrSTR lpAppName, WinApi_PtrSTR lpKeyName, INTEGER nDefault);
__EXTERN INTEGER __STDCALL GetProfileIntA (WinApi_PtrSTR lpAppName, WinApi_PtrSTR lpKeyName, INTEGER nDefault);
__EXTERN INTEGER __STDCALL GetProfileIntW (WinApi_PtrWSTR lpAppName, WinApi_PtrWSTR lpKeyName, INTEGER nDefault);
__EXTERN INTEGER __STDCALL GetProfileSectionA (WinApi_PtrSTR lpAppName, WinApi_PtrSTR lpReturnedString, INTEGER nSize);
__EXTERN INTEGER __STDCALL GetProfileSectionA (WinApi_PtrSTR lpAppName, WinApi_PtrSTR lpReturnedString, INTEGER nSize);
__EXTERN INTEGER __STDCALL GetProfileSectionW (WinApi_PtrWSTR lpAppName, WinApi_PtrWSTR lpReturnedString, INTEGER nSize);
__EXTERN INTEGER __STDCALL GetProfileStringA (WinApi_PtrSTR lpAppName, WinApi_PtrSTR lpKeyName, WinApi_PtrSTR lpDefault, WinApi_PtrSTR lpReturnedString, INTEGER nSize);
__EXTERN INTEGER __STDCALL GetProfileStringA (WinApi_PtrSTR lpAppName, WinApi_PtrSTR lpKeyName, WinApi_PtrSTR lpDefault, WinApi_PtrSTR lpReturnedString, INTEGER nSize);
__EXTERN INTEGER __STDCALL GetProfileStringW (WinApi_PtrWSTR lpAppName, WinApi_PtrWSTR lpKeyName, WinApi_PtrWSTR lpDefault, WinApi_PtrWSTR lpReturnedString, INTEGER nSize);
__EXTERN INTEGER __STDCALL GetPropA (INTEGER hWnd, WinApi_PtrSTR lpString);
__EXTERN INTEGER __STDCALL GetPropA (INTEGER hWnd, WinApi_PtrSTR lpString);
__EXTERN INTEGER __STDCALL GetPropW (INTEGER hWnd, WinApi_PtrWSTR lpString);
__EXTERN INTEGER __STDCALL GetQueueStatus (SET flags);
__EXTERN INTEGER __STDCALL GetQueuedCompletionStatus (INTEGER CompletionPort, INTEGER *lpNumberOfBytesTransferred, INTEGER *lpCompletionKey, WinApi_PtrOVERLAPPED *lpOverlapped, INTEGER dwMilliseconds);
__EXTERN INTEGER __STDCALL GetROP2 (INTEGER p0);
__EXTERN INTEGER __STDCALL GetRasterizerCaps (WinApi_RASTERIZER_STATUS *p0, INTEGER p1);
__EXTERN INTEGER __STDCALL GetRegionData (INTEGER p0, INTEGER p1, WinApi_RGNDATA *p2);
__EXTERN INTEGER __STDCALL GetRgnBox (INTEGER p0, WinApi_RECT *p1);
__EXTERN INTEGER __STDCALL GetScrollInfo (INTEGER p0, INTEGER p1, WinApi_SCROLLINFO *p2);
__EXTERN INTEGER __STDCALL GetScrollPos (INTEGER hWnd, INTEGER nBar);
__EXTERN INTEGER __STDCALL GetScrollRange (INTEGER hWnd, INTEGER nBar, INTEGER *lpMinPos, INTEGER *lpMaxPos);
__EXTERN INTEGER __STDCALL GetSecurityDescriptorControl (INTEGER pSecurityDescriptor, SHORTINT *pControl, INTEGER *lpdwRevision);
__EXTERN INTEGER __STDCALL GetSecurityDescriptorDacl (INTEGER pSecurityDescriptor, INTEGER *lpbDaclPresent, WinApi_PtrACL *pDacl, INTEGER *lpbDaclDefaulted);
__EXTERN INTEGER __STDCALL GetSecurityDescriptorGroup (INTEGER pSecurityDescriptor, INTEGER *pGroup, INTEGER *lpbGroupDefaulted);
__EXTERN INTEGER __STDCALL GetSecurityDescriptorLength (INTEGER pSecurityDescriptor);
__EXTERN INTEGER __STDCALL GetSecurityDescriptorOwner (INTEGER pSecurityDescriptor, INTEGER *pOwner, INTEGER *lpbOwnerDefaulted);
__EXTERN INTEGER __STDCALL GetSecurityDescriptorSacl (INTEGER pSecurityDescriptor, INTEGER *lpbSaclPresent, WinApi_PtrACL *pSacl, INTEGER *lpbSaclDefaulted);
__EXTERN INTEGER __STDCALL GetServiceDisplayNameA (INTEGER hSCManager, WinApi_PtrSTR lpServiceName, WinApi_PtrSTR lpDisplayName, INTEGER *lpcchBuffer);
__EXTERN INTEGER __STDCALL GetServiceDisplayNameA (INTEGER hSCManager, WinApi_PtrSTR lpServiceName, WinApi_PtrSTR lpDisplayName, INTEGER *lpcchBuffer);
__EXTERN INTEGER __STDCALL GetServiceDisplayNameW (INTEGER hSCManager, WinApi_PtrWSTR lpServiceName, WinApi_PtrWSTR lpDisplayName, INTEGER *lpcchBuffer);
__EXTERN INTEGER __STDCALL GetServiceKeyNameA (INTEGER hSCManager, WinApi_PtrSTR lpDisplayName, WinApi_PtrSTR lpServiceName, INTEGER *lpcchBuffer);
__EXTERN INTEGER __STDCALL GetServiceKeyNameA (INTEGER hSCManager, WinApi_PtrSTR lpDisplayName, WinApi_PtrSTR lpServiceName, INTEGER *lpcchBuffer);
__EXTERN INTEGER __STDCALL GetServiceKeyNameW (INTEGER hSCManager, WinApi_PtrWSTR lpDisplayName, WinApi_PtrWSTR lpServiceName, INTEGER *lpcchBuffer);
__EXTERN INTEGER __STDCALL GetShortPathNameA (WinApi_PtrSTR lpszLongPath, WinApi_PtrSTR lpszShortPath, INTEGER cchBuffer);
__EXTERN INTEGER __STDCALL GetShortPathNameA (WinApi_PtrSTR lpszLongPath, WinApi_PtrSTR lpszShortPath, INTEGER cchBuffer);
__EXTERN INTEGER __STDCALL GetShortPathNameW (WinApi_PtrWSTR lpszLongPath, WinApi_PtrWSTR lpszShortPath, INTEGER cchBuffer);
__EXTERN WinApi_PtrSID_IDENTIFIER_AUTHORITY __STDCALL GetSidIdentifierAuthority (INTEGER pSid);
__EXTERN INTEGER __STDCALL GetSidLengthRequired (CHAR nSubAuthorityCount);
__EXTERN WinApi_RetGetSidSubAuthority __STDCALL GetSidSubAuthority (INTEGER pSid, INTEGER nSubAuthority);
__EXTERN WinApi_PtrSTR __STDCALL GetSidSubAuthorityCount (INTEGER pSid);
__EXTERN void __STDCALL GetStartupInfoA (WinApi_STARTUPINFOA *lpStartupInfo);
__EXTERN void __STDCALL GetStartupInfoA (WinApi_STARTUPINFOA *lpStartupInfo);
__EXTERN void __STDCALL GetStartupInfoW (WinApi_STARTUPINFOW *lpStartupInfo);
__EXTERN INTEGER __STDCALL GetStdHandle (INTEGER nStdHandle);
__EXTERN INTEGER __STDCALL GetStockObject (INTEGER p0);
__EXTERN INTEGER __STDCALL GetStretchBltMode (INTEGER p0);
__EXTERN INTEGER __STDCALL GetStringTypeA (INTEGER Locale, SET dwInfoType, WinApi_PtrSTR lpSrcStr, INTEGER cchSrc, SHORTINT *lpCharType);
__EXTERN INTEGER __STDCALL GetStringTypeExA (INTEGER Locale, SET dwInfoType, WinApi_PtrSTR lpSrcStr, INTEGER cchSrc, SHORTINT *lpCharType);
__EXTERN INTEGER __STDCALL GetStringTypeExA (INTEGER Locale, SET dwInfoType, WinApi_PtrSTR lpSrcStr, INTEGER cchSrc, SHORTINT *lpCharType);
__EXTERN INTEGER __STDCALL GetStringTypeExW (INTEGER Locale, SET dwInfoType, WinApi_PtrWSTR lpSrcStr, INTEGER cchSrc, SHORTINT *lpCharType);
__EXTERN INTEGER __STDCALL GetStringTypeW (SET dwInfoType, WinApi_PtrWSTR lpSrcStr, INTEGER cchSrc, SHORTINT *lpCharType);
__EXTERN INTEGER __STDCALL GetSubMenu (INTEGER hMenu, INTEGER nPos);
__EXTERN INTEGER __STDCALL GetSysColor (INTEGER nIndex);
__EXTERN INTEGER __STDCALL GetSysColorBrush (INTEGER nIndex);
__EXTERN INTEGER __STDCALL GetSystemDefaultLCID (void);
__EXTERN SHORTINT __STDCALL GetSystemDefaultLangID (void);
__EXTERN INTEGER __STDCALL GetSystemDirectoryA (WinApi_PtrSTR lpBuffer, INTEGER uSize);
__EXTERN INTEGER __STDCALL GetSystemDirectoryA (WinApi_PtrSTR lpBuffer, INTEGER uSize);
__EXTERN INTEGER __STDCALL GetSystemDirectoryW (WinApi_PtrWSTR lpBuffer, INTEGER uSize);
__EXTERN INTEGER __STDCALL GetSystemMenu (INTEGER hWnd, INTEGER bRevert);
__EXTERN INTEGER __STDCALL GetSystemMetrics (INTEGER nIndex);
__EXTERN INTEGER __STDCALL GetSystemPaletteEntries (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_PALETTEENTRY *p3);
__EXTERN INTEGER __STDCALL GetSystemPaletteUse (INTEGER p0);
__EXTERN INTEGER __STDCALL GetSystemPowerStatus (WinApi_SYSTEM_POWER_STATUS *lpSystemPowerStatus);
__EXTERN void __STDCALL GetSystemTime (WinApi_SYSTEMTIME *lpSystemTime);
__EXTERN INTEGER __STDCALL GetSystemTimeAdjustment (INTEGER *lpTimeAdjustment, INTEGER *lpTimeIncrement, INTEGER *lpTimeAdjustmentDisabled);
__EXTERN void __STDCALL GetSystemTimeAsFileTime (WinApi_FILETIME *lpSystemTimeAsFileTime);
__EXTERN INTEGER __STDCALL GetTabbedTextExtentA (INTEGER hDC, WinApi_PtrSTR lpString, INTEGER nCount, INTEGER nTabPositions, INTEGER *lpnTabStopPositions);
__EXTERN INTEGER __STDCALL GetTabbedTextExtentA (INTEGER hDC, WinApi_PtrSTR lpString, INTEGER nCount, INTEGER nTabPositions, INTEGER *lpnTabStopPositions);
__EXTERN INTEGER __STDCALL GetTabbedTextExtentW (INTEGER hDC, WinApi_PtrWSTR lpString, INTEGER nCount, INTEGER nTabPositions, INTEGER *lpnTabStopPositions);
__EXTERN INTEGER __STDCALL GetTapeParameters (INTEGER hDevice, INTEGER dwOperation, INTEGER *lpdwSize, INTEGER lpTapeInformation);
__EXTERN INTEGER __STDCALL GetTapePosition (INTEGER hDevice, INTEGER dwPositionType, INTEGER *lpdwPartition, INTEGER *lpdwOffsetLow, INTEGER *lpdwOffsetHigh);
__EXTERN INTEGER __STDCALL GetTapeStatus (INTEGER hDevice);
__EXTERN INTEGER __STDCALL GetTempFileNameA (WinApi_PtrSTR lpPathName, WinApi_PtrSTR lpPrefixString, INTEGER uUnique, WinApi_PtrSTR lpTempFileName);
__EXTERN INTEGER __STDCALL GetTempFileNameA (WinApi_PtrSTR lpPathName, WinApi_PtrSTR lpPrefixString, INTEGER uUnique, WinApi_PtrSTR lpTempFileName);
__EXTERN INTEGER __STDCALL GetTempFileNameW (WinApi_PtrWSTR lpPathName, WinApi_PtrWSTR lpPrefixString, INTEGER uUnique, WinApi_PtrWSTR lpTempFileName);
__EXTERN INTEGER __STDCALL GetTempPathA (INTEGER nBufferLength, WinApi_PtrSTR lpBuffer);
__EXTERN INTEGER __STDCALL GetTempPathA (INTEGER nBufferLength, WinApi_PtrSTR lpBuffer);
__EXTERN INTEGER __STDCALL GetTempPathW (INTEGER nBufferLength, WinApi_PtrWSTR lpBuffer);
__EXTERN SET __STDCALL GetTextAlign (INTEGER p0);
__EXTERN INTEGER __STDCALL GetTextCharacterExtra (INTEGER p0);
__EXTERN INTEGER __STDCALL GetTextCharset (INTEGER hdc);
__EXTERN INTEGER __STDCALL GetTextCharsetInfo (INTEGER hdc, WinApi_FONTSIGNATURE *lpSig, SET dwFlags);
__EXTERN INTEGER __STDCALL GetTextColor (INTEGER p0);
__EXTERN INTEGER __STDCALL GetTextExtentExPointA (INTEGER p0, WinApi_PtrSTR p1, INTEGER p2, INTEGER p3, INTEGER *p4, INTEGER *p5, WinApi_SIZE *p6);
__EXTERN INTEGER __STDCALL GetTextExtentExPointA (INTEGER p0, WinApi_PtrSTR p1, INTEGER p2, INTEGER p3, INTEGER *p4, INTEGER *p5, WinApi_SIZE *p6);
__EXTERN INTEGER __STDCALL GetTextExtentExPointW (INTEGER p0, WinApi_PtrWSTR p1, INTEGER p2, INTEGER p3, INTEGER *p4, INTEGER *p5, WinApi_SIZE *p6);
__EXTERN INTEGER __STDCALL GetTextExtentPointA (INTEGER p0, WinApi_PtrSTR p1, INTEGER p2, WinApi_SIZE *p3);
__EXTERN INTEGER __STDCALL GetTextExtentPoint32A (INTEGER p0, WinApi_PtrSTR p1, INTEGER p2, WinApi_SIZE *p3);
__EXTERN INTEGER __STDCALL GetTextExtentPoint32A (INTEGER p0, WinApi_PtrSTR p1, INTEGER p2, WinApi_SIZE *p3);
__EXTERN INTEGER __STDCALL GetTextExtentPoint32W (INTEGER p0, WinApi_PtrWSTR p1, INTEGER p2, WinApi_SIZE *p3);
__EXTERN INTEGER __STDCALL GetTextExtentPointA (INTEGER p0, WinApi_PtrSTR p1, INTEGER p2, WinApi_SIZE *p3);
__EXTERN INTEGER __STDCALL GetTextExtentPointW (INTEGER p0, WinApi_PtrWSTR p1, INTEGER p2, WinApi_SIZE *p3);
__EXTERN INTEGER __STDCALL GetTextFaceA (INTEGER p0, INTEGER p1, WinApi_PtrSTR p2);
__EXTERN INTEGER __STDCALL GetTextFaceA (INTEGER p0, INTEGER p1, WinApi_PtrSTR p2);
__EXTERN INTEGER __STDCALL GetTextFaceW (INTEGER p0, INTEGER p1, WinApi_PtrWSTR p2);
__EXTERN INTEGER __STDCALL GetTextMetricsA (INTEGER p0, WinApi_TEXTMETRICA *p1);
__EXTERN INTEGER __STDCALL GetTextMetricsA (INTEGER p0, WinApi_TEXTMETRICA *p1);
__EXTERN INTEGER __STDCALL GetTextMetricsW (INTEGER p0, WinApi_TEXTMETRICW *p1);
__EXTERN INTEGER __STDCALL GetThreadContext (INTEGER hThread, WinApi_CONTEXT *lpContext);
__EXTERN INTEGER __STDCALL GetThreadDesktop (INTEGER dwThreadId);
__EXTERN INTEGER __STDCALL GetThreadLocale (void);
__EXTERN INTEGER __STDCALL GetThreadPriority (INTEGER hThread);
__EXTERN INTEGER __STDCALL GetThreadPriorityBoost (INTEGER hThread, INTEGER *pDisablePriorityBoost);
__EXTERN INTEGER __STDCALL GetThreadTimes (INTEGER hThread, WinApi_FILETIME *lpCreationTime, WinApi_FILETIME *lpExitTime, WinApi_FILETIME *lpKernelTime, WinApi_FILETIME *lpUserTime);
__EXTERN INTEGER __STDCALL GetTickCount (void);
__EXTERN INTEGER __STDCALL GetTimeFormatA (INTEGER Locale, SET dwFlags, WinApi_SYSTEMTIME *lpTime, WinApi_PtrSTR lpFormat, WinApi_PtrSTR lpTimeStr, INTEGER cchTime);
__EXTERN INTEGER __STDCALL GetTimeFormatA (INTEGER Locale, SET dwFlags, WinApi_SYSTEMTIME *lpTime, WinApi_PtrSTR lpFormat, WinApi_PtrSTR lpTimeStr, INTEGER cchTime);
__EXTERN INTEGER __STDCALL GetTimeFormatW (INTEGER Locale, SET dwFlags, WinApi_SYSTEMTIME *lpTime, WinApi_PtrWSTR lpFormat, WinApi_PtrWSTR lpTimeStr, INTEGER cchTime);
__EXTERN INTEGER __STDCALL GetTimeZoneInformation (WinApi_TIME_ZONE_INFORMATION *lpTimeZoneInformation);
__EXTERN INTEGER __STDCALL GetTokenInformation (INTEGER TokenHandle, INTEGER TokenInformationClass, INTEGER TokenInformation, INTEGER TokenInformationLength, INTEGER *ReturnLength);
__EXTERN INTEGER __STDCALL GetTopWindow (INTEGER hWnd);
__EXTERN INTEGER __STDCALL GetUpdateRect (INTEGER hWnd, WinApi_RECT *lpRect, INTEGER bErase);
__EXTERN INTEGER __STDCALL GetUpdateRgn (INTEGER hWnd, INTEGER hRgn, INTEGER bErase);
__EXTERN INTEGER __STDCALL GetUserDefaultLCID (void);
__EXTERN SHORTINT __STDCALL GetUserDefaultLangID (void);
__EXTERN INTEGER __STDCALL GetUserNameA (WinApi_PtrSTR lpBuffer, INTEGER *nSize);
__EXTERN INTEGER __STDCALL GetUserNameA (WinApi_PtrSTR lpBuffer, INTEGER *nSize);
__EXTERN INTEGER __STDCALL GetUserNameW (WinApi_PtrWSTR lpBuffer, INTEGER *nSize);
__EXTERN INTEGER __STDCALL GetUserObjectInformationA (INTEGER hObj, INTEGER nIndex, INTEGER pvInfo, INTEGER nLength, INTEGER *lpnLengthNeeded);
__EXTERN INTEGER __STDCALL GetUserObjectInformationA (INTEGER hObj, INTEGER nIndex, INTEGER pvInfo, INTEGER nLength, INTEGER *lpnLengthNeeded);
__EXTERN INTEGER __STDCALL GetUserObjectInformationW (INTEGER hObj, INTEGER nIndex, INTEGER pvInfo, INTEGER nLength, INTEGER *lpnLengthNeeded);
__EXTERN INTEGER __STDCALL GetUserObjectSecurity (INTEGER hObj, INTEGER *pSIRequested, INTEGER pSID, INTEGER nLength, INTEGER *lpnLengthNeeded);
__EXTERN INTEGER __STDCALL GetVersion (void);
__EXTERN INTEGER __STDCALL GetVersionExA (WinApi_OSVERSIONINFOA *lpVersionInformation);
__EXTERN INTEGER __STDCALL GetVersionExA (WinApi_OSVERSIONINFOA *lpVersionInformation);
__EXTERN INTEGER __STDCALL GetVersionExW (WinApi_OSVERSIONINFOW *lpVersionInformation);
__EXTERN INTEGER __STDCALL GetViewportExtEx (INTEGER p0, WinApi_SIZE *p1);
__EXTERN INTEGER __STDCALL GetViewportOrgEx (INTEGER p0, WinApi_POINT *p1);
__EXTERN INTEGER __STDCALL GetVolumeInformationA (WinApi_PtrSTR lpRootPathName, WinApi_PtrSTR lpVolumeNameBuffer, INTEGER nVolumeNameSize, INTEGER *lpVolumeSerialNumber, INTEGER *lpMaximumComponentLength, SET *lpFileSystemFlags, WinApi_PtrSTR lpFileSystemNameBuffer, INTEGER nFileSystemNameSize);
__EXTERN INTEGER __STDCALL GetVolumeInformationA (WinApi_PtrSTR lpRootPathName, WinApi_PtrSTR lpVolumeNameBuffer, INTEGER nVolumeNameSize, INTEGER *lpVolumeSerialNumber, INTEGER *lpMaximumComponentLength, SET *lpFileSystemFlags, WinApi_PtrSTR lpFileSystemNameBuffer, INTEGER nFileSystemNameSize);
__EXTERN INTEGER __STDCALL GetVolumeInformationW (WinApi_PtrWSTR lpRootPathName, WinApi_PtrWSTR lpVolumeNameBuffer, INTEGER nVolumeNameSize, INTEGER *lpVolumeSerialNumber, INTEGER *lpMaximumComponentLength, SET *lpFileSystemFlags, WinApi_PtrWSTR lpFileSystemNameBuffer, INTEGER nFileSystemNameSize);
__EXTERN INTEGER __STDCALL GetWinMetaFileBits (INTEGER p0, INTEGER p1, CHAR *p2, INTEGER p3, INTEGER p4);
__EXTERN INTEGER __STDCALL GetWindow (INTEGER hWnd, INTEGER uCmd);
__EXTERN INTEGER __STDCALL GetWindowContextHelpId (INTEGER p0);
__EXTERN INTEGER __STDCALL GetWindowDC (INTEGER hWnd);
__EXTERN INTEGER __STDCALL GetWindowExtEx (INTEGER p0, WinApi_SIZE *p1);
__EXTERN INTEGER __STDCALL GetWindowLongA (INTEGER hWnd, INTEGER nIndex);
__EXTERN INTEGER __STDCALL GetWindowLongA (INTEGER hWnd, INTEGER nIndex);
__EXTERN INTEGER __STDCALL GetWindowLongW (INTEGER hWnd, INTEGER nIndex);
__EXTERN INTEGER __STDCALL GetWindowOrgEx (INTEGER p0, WinApi_POINT *p1);
__EXTERN INTEGER __STDCALL GetWindowPlacement (INTEGER hWnd, WinApi_WINDOWPLACEMENT *lpwndpl);
__EXTERN INTEGER __STDCALL GetWindowRect (INTEGER hWnd, WinApi_RECT *lpRect);
__EXTERN INTEGER __STDCALL GetWindowRgn (INTEGER hWnd, INTEGER hRgn);
__EXTERN INTEGER __STDCALL GetWindowTextA (INTEGER hWnd, WinApi_PtrSTR lpString, INTEGER nMaxCount);
__EXTERN INTEGER __STDCALL GetWindowTextA (INTEGER hWnd, WinApi_PtrSTR lpString, INTEGER nMaxCount);
__EXTERN INTEGER __STDCALL GetWindowTextLengthA (INTEGER hWnd);
__EXTERN INTEGER __STDCALL GetWindowTextLengthA (INTEGER hWnd);
__EXTERN INTEGER __STDCALL GetWindowTextLengthW (INTEGER hWnd);
__EXTERN INTEGER __STDCALL GetWindowTextW (INTEGER hWnd, WinApi_PtrWSTR lpString, INTEGER nMaxCount);
__EXTERN INTEGER __STDCALL GetWindowThreadProcessId (INTEGER hWnd, INTEGER *lpdwProcessId);
__EXTERN SHORTINT __STDCALL GetWindowWord (INTEGER hWnd, INTEGER nIndex);
__EXTERN INTEGER __STDCALL GetWindowsDirectoryA (WinApi_PtrSTR lpBuffer, INTEGER uSize);
__EXTERN INTEGER __STDCALL GetWindowsDirectoryA (WinApi_PtrSTR lpBuffer, INTEGER uSize);
__EXTERN INTEGER __STDCALL GetWindowsDirectoryW (WinApi_PtrWSTR lpBuffer, INTEGER uSize);
__EXTERN INTEGER __STDCALL GetWorldTransform (INTEGER p0, WinApi_XFORM *p1);
__EXTERN SHORTINT __STDCALL GlobalAddAtomA (WinApi_PtrSTR lpString);
__EXTERN SHORTINT __STDCALL GlobalAddAtomA (WinApi_PtrSTR lpString);
__EXTERN SHORTINT __STDCALL GlobalAddAtomW (WinApi_PtrWSTR lpString);
__EXTERN INTEGER __STDCALL GlobalAlloc (SET uFlags, INTEGER dwBytes);
__EXTERN INTEGER __STDCALL GlobalCompact (INTEGER dwMinFree);
__EXTERN SHORTINT __STDCALL GlobalDeleteAtom (SHORTINT nAtom);
__EXTERN SHORTINT __STDCALL GlobalFindAtomA (WinApi_PtrSTR lpString);
__EXTERN SHORTINT __STDCALL GlobalFindAtomA (WinApi_PtrSTR lpString);
__EXTERN SHORTINT __STDCALL GlobalFindAtomW (WinApi_PtrWSTR lpString);
__EXTERN void __STDCALL GlobalFix (INTEGER hMem);
__EXTERN INTEGER __STDCALL GlobalFlags (INTEGER hMem);
__EXTERN INTEGER __STDCALL GlobalFree (INTEGER hMem);
__EXTERN INTEGER __STDCALL GlobalGetAtomNameA (SHORTINT nAtom, WinApi_PtrSTR lpBuffer, INTEGER nSize);
__EXTERN INTEGER __STDCALL GlobalGetAtomNameA (SHORTINT nAtom, WinApi_PtrSTR lpBuffer, INTEGER nSize);
__EXTERN INTEGER __STDCALL GlobalGetAtomNameW (SHORTINT nAtom, WinApi_PtrWSTR lpBuffer, INTEGER nSize);
__EXTERN INTEGER __STDCALL GlobalHandle (INTEGER pMem);
__EXTERN INTEGER __STDCALL GlobalLock (INTEGER hMem);
__EXTERN void __STDCALL GlobalMemoryStatus (WinApi_MEMORYSTATUS *lpBuffer);
__EXTERN INTEGER __STDCALL GlobalReAlloc (INTEGER hMem, INTEGER dwBytes, SET uFlags);
__EXTERN INTEGER __STDCALL GlobalSize (INTEGER hMem);
__EXTERN INTEGER __STDCALL GlobalUnWire (INTEGER hMem);
__EXTERN void __STDCALL GlobalUnfix (INTEGER hMem);
__EXTERN INTEGER __STDCALL GlobalUnlock (INTEGER hMem);
__EXTERN INTEGER __STDCALL GlobalWire (INTEGER hMem);
__EXTERN INTEGER __STDCALL GrayStringA (INTEGER hDC, INTEGER hBrush, WinApi_GRAYSTRINGPROC lpOutputFunc, INTEGER lpData, INTEGER nCount, INTEGER X, INTEGER Y, INTEGER nWidth, INTEGER nHeight);
__EXTERN INTEGER __STDCALL GrayStringA (INTEGER hDC, INTEGER hBrush, WinApi_GRAYSTRINGPROC lpOutputFunc, INTEGER lpData, INTEGER nCount, INTEGER X, INTEGER Y, INTEGER nWidth, INTEGER nHeight);
__EXTERN INTEGER __STDCALL GrayStringW (INTEGER hDC, INTEGER hBrush, WinApi_GRAYSTRINGPROC lpOutputFunc, INTEGER lpData, INTEGER nCount, INTEGER X, INTEGER Y, INTEGER nWidth, INTEGER nHeight);
__EXTERN INTEGER __STDCALL HeapAlloc (INTEGER hHeap, SET dwFlags, INTEGER dwBytes);
__EXTERN INTEGER __STDCALL HeapCompact (INTEGER hHeap, SET dwFlags);
__EXTERN INTEGER __STDCALL HeapCreate (SET flOptions, INTEGER dwInitialSize, INTEGER dwMaximumSize);
__EXTERN INTEGER __STDCALL HeapDestroy (INTEGER hHeap);
__EXTERN INTEGER __STDCALL HeapFree (INTEGER hHeap, SET dwFlags, INTEGER lpMem);
__EXTERN INTEGER __STDCALL HeapLock (INTEGER hHeap);
__EXTERN INTEGER __STDCALL HeapReAlloc (INTEGER hHeap, SET dwFlags, INTEGER lpMem, INTEGER dwBytes);
__EXTERN INTEGER __STDCALL HeapSize (INTEGER hHeap, SET dwFlags, INTEGER lpMem);
__EXTERN INTEGER __STDCALL HeapUnlock (INTEGER hHeap);
__EXTERN INTEGER __STDCALL HeapValidate (INTEGER hHeap, SET dwFlags, INTEGER lpMem);
__EXTERN INTEGER __STDCALL HideCaret (INTEGER hWnd);
__EXTERN INTEGER __STDCALL HiliteMenuItem (INTEGER hWnd, INTEGER hMenu, INTEGER uIDHiliteItem, INTEGER uHilite);
__EXTERN INTEGER __STDCALL ImpersonateDdeClientWindow (INTEGER hWndClient, INTEGER hWndServer);
__EXTERN INTEGER __STDCALL ImpersonateLoggedOnUser (INTEGER hToken);
__EXTERN INTEGER __STDCALL ImpersonateNamedPipeClient (INTEGER hNamedPipe);
__EXTERN INTEGER __STDCALL ImpersonateSelf (INTEGER ImpersonationLevel);
__EXTERN INTEGER __STDCALL InSendMessage (void);
__EXTERN INTEGER __STDCALL InflateRect (WinApi_RECT *lprc, INTEGER dx, INTEGER dy);
__EXTERN INTEGER __STDCALL InitAtomTable (INTEGER nSize);
__EXTERN INTEGER __STDCALL InitializeAcl (WinApi_ACL *pAcl, INTEGER nAclLength, INTEGER dwAclRevision);
__EXTERN void __STDCALL InitializeCriticalSection (WinApi_RTL_CRITICAL_SECTION *lpCriticalSection);
__EXTERN INTEGER __STDCALL InitializeSecurityDescriptor (INTEGER pSecurityDescriptor, INTEGER dwRevision);
__EXTERN INTEGER __STDCALL InitializeSid (INTEGER Sid, WinApi_SID_IDENTIFIER_AUTHORITY *pIdentifierAuthority, CHAR nSubAuthorityCount);
__EXTERN INTEGER __STDCALL InitiateSystemShutdownA (WinApi_PtrSTR lpMachineName, WinApi_PtrSTR lpMessage, INTEGER dwTimeout, INTEGER bForceAppsClosed, INTEGER bRebootAfterShutdown);
__EXTERN INTEGER __STDCALL InitiateSystemShutdownA (WinApi_PtrSTR lpMachineName, WinApi_PtrSTR lpMessage, INTEGER dwTimeout, INTEGER bForceAppsClosed, INTEGER bRebootAfterShutdown);
__EXTERN INTEGER __STDCALL InitiateSystemShutdownW (WinApi_PtrWSTR lpMachineName, WinApi_PtrWSTR lpMessage, INTEGER dwTimeout, INTEGER bForceAppsClosed, INTEGER bRebootAfterShutdown);
__EXTERN INTEGER __STDCALL InsertMenuA (INTEGER hMenu, INTEGER uPosition, SET uFlags, INTEGER uIDNewItem, WinApi_PtrSTR lpNewItem);
__EXTERN INTEGER __STDCALL InsertMenuA (INTEGER hMenu, INTEGER uPosition, SET uFlags, INTEGER uIDNewItem, WinApi_PtrSTR lpNewItem);
__EXTERN INTEGER __STDCALL InsertMenuItemA (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_MENUITEMINFOA *p3);
__EXTERN INTEGER __STDCALL InsertMenuItemA (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_MENUITEMINFOA *p3);
__EXTERN INTEGER __STDCALL InsertMenuItemW (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_MENUITEMINFOW *p3);
__EXTERN INTEGER __STDCALL InsertMenuW (INTEGER hMenu, INTEGER uPosition, SET uFlags, INTEGER uIDNewItem, WinApi_PtrWSTR lpNewItem);
__EXTERN INTEGER __STDCALL InterlockedCompareExchange (INTEGER *Destination, INTEGER Exchange, INTEGER Comperand);
__EXTERN INTEGER __STDCALL InterlockedDecrement (INTEGER *lpAddend);
__EXTERN INTEGER __STDCALL InterlockedExchange (INTEGER *Target, INTEGER Value);
__EXTERN INTEGER __STDCALL InterlockedExchangeAdd (INTEGER *Addend, INTEGER Value);
__EXTERN INTEGER __STDCALL InterlockedIncrement (INTEGER *lpAddend);
__EXTERN INTEGER __STDCALL IntersectClipRect (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4);
__EXTERN INTEGER __STDCALL IntersectRect (WinApi_RECT *lprcDst, WinApi_RECT *lprcSrc1, WinApi_RECT *lprcSrc2);
__EXTERN INTEGER __STDCALL InvalidateRect (INTEGER hWnd, WinApi_RECT *lpRect, INTEGER bErase);
__EXTERN INTEGER __STDCALL InvalidateRgn (INTEGER hWnd, INTEGER hRgn, INTEGER bErase);
__EXTERN INTEGER __STDCALL InvertRect (INTEGER hDC, WinApi_RECT *lprc);
__EXTERN INTEGER __STDCALL InvertRgn (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL IsBadCodePtr (WinApi_FARPROC lpfn);
__EXTERN INTEGER __STDCALL IsBadHugeReadPtr (INTEGER lp, INTEGER ucb);
__EXTERN INTEGER __STDCALL IsBadHugeWritePtr (INTEGER lp, INTEGER ucb);
__EXTERN INTEGER __STDCALL IsBadReadPtr (INTEGER lp, INTEGER ucb);
__EXTERN INTEGER __STDCALL IsBadStringPtrA (WinApi_PtrSTR lpsz, INTEGER ucchMax);
__EXTERN INTEGER __STDCALL IsBadStringPtrA (WinApi_PtrSTR lpsz, INTEGER ucchMax);
__EXTERN INTEGER __STDCALL IsBadStringPtrW (WinApi_PtrWSTR lpsz, INTEGER ucchMax);
__EXTERN INTEGER __STDCALL IsBadWritePtr (INTEGER lp, INTEGER ucb);
__EXTERN INTEGER __STDCALL IsCharAlphaA (CHAR ch);
__EXTERN INTEGER __STDCALL IsCharAlphaA (CHAR ch);
__EXTERN INTEGER __STDCALL IsCharAlphaNumericA (CHAR ch);
__EXTERN INTEGER __STDCALL IsCharAlphaNumericA (CHAR ch);
__EXTERN INTEGER __STDCALL IsCharAlphaNumericW (LONGCHAR ch);
__EXTERN INTEGER __STDCALL IsCharAlphaW (LONGCHAR ch);
__EXTERN INTEGER __STDCALL IsCharLowerA (CHAR ch);
__EXTERN INTEGER __STDCALL IsCharLowerA (CHAR ch);
__EXTERN INTEGER __STDCALL IsCharLowerW (LONGCHAR ch);
__EXTERN INTEGER __STDCALL IsCharUpperA (CHAR ch);
__EXTERN INTEGER __STDCALL IsCharUpperA (CHAR ch);
__EXTERN INTEGER __STDCALL IsCharUpperW (LONGCHAR ch);
__EXTERN INTEGER __STDCALL IsChild (INTEGER hWndParent, INTEGER hWnd);
__EXTERN INTEGER __STDCALL IsClipboardFormatAvailable (INTEGER format);
__EXTERN INTEGER __STDCALL IsDBCSLeadByte (CHAR TestChar);
__EXTERN INTEGER __STDCALL IsDBCSLeadByteEx (INTEGER CodePage, CHAR TestChar);
__EXTERN INTEGER __STDCALL IsDebuggerPresent (void);
__EXTERN INTEGER __STDCALL IsDialogMessageA (INTEGER hDlg, WinApi_MSG *lpMsg);
__EXTERN INTEGER __STDCALL IsDialogMessageA (INTEGER hDlg, WinApi_MSG *lpMsg);
__EXTERN INTEGER __STDCALL IsDialogMessageW (INTEGER hDlg, WinApi_MSG *lpMsg);
__EXTERN INTEGER __STDCALL IsDlgButtonChecked (INTEGER hDlg, INTEGER nIDButton);
__EXTERN INTEGER __STDCALL IsIconic (INTEGER hWnd);
__EXTERN INTEGER __STDCALL IsMenu (INTEGER hMenu);
__EXTERN INTEGER __STDCALL IsRectEmpty (WinApi_RECT *lprc);
__EXTERN INTEGER __STDCALL IsTextUnicode (INTEGER lpBuffer, INTEGER cb, SET *lpi);
__EXTERN INTEGER __STDCALL IsValidAcl (WinApi_ACL *pAcl);
__EXTERN INTEGER __STDCALL IsValidCodePage (INTEGER CodePage);
__EXTERN INTEGER __STDCALL IsValidLocale (INTEGER Locale, SET dwFlags);
__EXTERN INTEGER __STDCALL IsValidSecurityDescriptor (INTEGER pSecurityDescriptor);
__EXTERN INTEGER __STDCALL IsValidSid (INTEGER pSid);
__EXTERN INTEGER __STDCALL IsWindow (INTEGER hWnd);
__EXTERN INTEGER __STDCALL IsWindowEnabled (INTEGER hWnd);
__EXTERN INTEGER __STDCALL IsWindowUnicode (INTEGER hWnd);
__EXTERN INTEGER __STDCALL IsWindowVisible (INTEGER hWnd);
__EXTERN INTEGER __STDCALL IsZoomed (INTEGER hWnd);
__EXTERN INTEGER __STDCALL KillTimer (INTEGER hWnd, INTEGER uIDEvent);
__EXTERN INTEGER __STDCALL LCMapStringA (INTEGER Locale, SET dwMapFlags, WinApi_PtrSTR lpSrcStr, INTEGER cchSrc, WinApi_PtrSTR lpDestStr, INTEGER cchDest);
__EXTERN INTEGER __STDCALL LCMapStringA (INTEGER Locale, SET dwMapFlags, WinApi_PtrSTR lpSrcStr, INTEGER cchSrc, WinApi_PtrSTR lpDestStr, INTEGER cchDest);
__EXTERN INTEGER __STDCALL LCMapStringW (INTEGER Locale, SET dwMapFlags, WinApi_PtrWSTR lpSrcStr, INTEGER cchSrc, WinApi_PtrWSTR lpDestStr, INTEGER cchDest);
__EXTERN INTEGER __STDCALL LPtoDP (INTEGER p0, WinApi_POINT *p1, INTEGER p2);
__EXTERN void __STDCALL LZClose (INTEGER p0);
__EXTERN INTEGER __STDCALL LZCopy (INTEGER p0, INTEGER p1);
__EXTERN void __STDCALL LZDone (void);
__EXTERN INTEGER __STDCALL LZInit (INTEGER p0);
__EXTERN INTEGER __STDCALL LZOpenFileA (WinApi_PtrSTR p0, WinApi_OFSTRUCT *p1, SHORTINT p2);
__EXTERN INTEGER __STDCALL LZOpenFileA (WinApi_PtrSTR p0, WinApi_OFSTRUCT *p1, SHORTINT p2);
__EXTERN INTEGER __STDCALL LZOpenFileW (WinApi_PtrWSTR p0, WinApi_OFSTRUCT *p1, SHORTINT p2);
__EXTERN INTEGER __STDCALL LZRead (INTEGER p0, WinApi_PtrSTR p1, INTEGER p2);
__EXTERN INTEGER __STDCALL LZSeek (INTEGER p0, INTEGER p1, INTEGER p2);
__EXTERN INTEGER __STDCALL LZStart (void);
__EXTERN void __STDCALL LeaveCriticalSection (WinApi_RTL_CRITICAL_SECTION *lpCriticalSection);
__EXTERN INTEGER __STDCALL LineDDA (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, WinApi_LINEDDAPROC p4, INTEGER p5);
__EXTERN INTEGER __STDCALL LineTo (INTEGER p0, INTEGER p1, INTEGER p2);
__EXTERN INTEGER __STDCALL LoadAcceleratorsA (INTEGER hInstance, WinApi_PtrSTR lpTableName);
__EXTERN INTEGER __STDCALL LoadAcceleratorsA (INTEGER hInstance, WinApi_PtrSTR lpTableName);
__EXTERN INTEGER __STDCALL LoadAcceleratorsW (INTEGER hInstance, WinApi_PtrWSTR lpTableName);
__EXTERN INTEGER __STDCALL LoadBitmapA (INTEGER hInstance, WinApi_PtrSTR lpBitmapName);
__EXTERN INTEGER __STDCALL LoadBitmapA (INTEGER hInstance, WinApi_PtrSTR lpBitmapName);
__EXTERN INTEGER __STDCALL LoadBitmapW (INTEGER hInstance, WinApi_PtrWSTR lpBitmapName);
__EXTERN INTEGER __STDCALL LoadCursorA (INTEGER hInstance, WinApi_PtrSTR lpCursorName);
__EXTERN INTEGER __STDCALL LoadCursorA (INTEGER hInstance, WinApi_PtrSTR lpCursorName);
__EXTERN INTEGER __STDCALL LoadCursorFromFileA (WinApi_PtrSTR lpFileName);
__EXTERN INTEGER __STDCALL LoadCursorFromFileA (WinApi_PtrSTR lpFileName);
__EXTERN INTEGER __STDCALL LoadCursorFromFileW (WinApi_PtrWSTR lpFileName);
__EXTERN INTEGER __STDCALL LoadCursorW (INTEGER hInstance, WinApi_PtrWSTR lpCursorName);
__EXTERN INTEGER __STDCALL LoadIconA (INTEGER hInstance, WinApi_PtrSTR lpIconName);
__EXTERN INTEGER __STDCALL LoadIconA (INTEGER hInstance, WinApi_PtrSTR lpIconName);
__EXTERN INTEGER __STDCALL LoadIconW (INTEGER hInstance, WinApi_PtrWSTR lpIconName);
__EXTERN INTEGER __STDCALL LoadImageA (INTEGER p0, WinApi_PtrSTR p1, INTEGER p2, INTEGER p3, INTEGER p4, INTEGER p5);
__EXTERN INTEGER __STDCALL LoadImageA (INTEGER p0, WinApi_PtrSTR p1, INTEGER p2, INTEGER p3, INTEGER p4, INTEGER p5);
__EXTERN INTEGER __STDCALL LoadImageW (INTEGER p0, WinApi_PtrWSTR p1, INTEGER p2, INTEGER p3, INTEGER p4, INTEGER p5);
__EXTERN INTEGER __STDCALL LoadKeyboardLayoutA (WinApi_PtrSTR pwszKLID, SET Flags);
__EXTERN INTEGER __STDCALL LoadKeyboardLayoutA (WinApi_PtrSTR pwszKLID, SET Flags);
__EXTERN INTEGER __STDCALL LoadKeyboardLayoutW (WinApi_PtrWSTR pwszKLID, SET Flags);
__EXTERN INTEGER __STDCALL LoadLibraryA (WinApi_PtrSTR lpLibFileName);
__EXTERN INTEGER __STDCALL LoadLibraryA (WinApi_PtrSTR lpLibFileName);
__EXTERN INTEGER __STDCALL LoadLibraryExA (WinApi_PtrSTR lpLibFileName, INTEGER hFile, SET dwFlags);
__EXTERN INTEGER __STDCALL LoadLibraryExA (WinApi_PtrSTR lpLibFileName, INTEGER hFile, SET dwFlags);
__EXTERN INTEGER __STDCALL LoadLibraryExW (WinApi_PtrWSTR lpLibFileName, INTEGER hFile, SET dwFlags);
__EXTERN INTEGER __STDCALL LoadLibraryW (WinApi_PtrWSTR lpLibFileName);
__EXTERN INTEGER __STDCALL LoadMenuA (INTEGER hInstance, WinApi_PtrSTR lpMenuName);
__EXTERN INTEGER __STDCALL LoadMenuA (INTEGER hInstance, WinApi_PtrSTR lpMenuName);
__EXTERN INTEGER __STDCALL LoadMenuIndirectA (WinApi_PtrMENUTEMPLATEA lpMenuTemplate);
__EXTERN INTEGER __STDCALL LoadMenuIndirectA (WinApi_PtrMENUTEMPLATEA lpMenuTemplate);
__EXTERN INTEGER __STDCALL LoadMenuIndirectW (WinApi_PtrMENUTEMPLATEW lpMenuTemplate);
__EXTERN INTEGER __STDCALL LoadMenuW (INTEGER hInstance, WinApi_PtrWSTR lpMenuName);
__EXTERN INTEGER __STDCALL LoadModule (WinApi_PtrSTR lpModuleName, INTEGER lpParameterBlock);
__EXTERN INTEGER __STDCALL LoadResource (INTEGER hModule, INTEGER hResInfo);
__EXTERN INTEGER __STDCALL LoadStringA (INTEGER hInstance, INTEGER uID, WinApi_PtrSTR lpBuffer, INTEGER nBufferMax);
__EXTERN INTEGER __STDCALL LoadStringA (INTEGER hInstance, INTEGER uID, WinApi_PtrSTR lpBuffer, INTEGER nBufferMax);
__EXTERN INTEGER __STDCALL LoadStringW (INTEGER hInstance, INTEGER uID, WinApi_PtrWSTR lpBuffer, INTEGER nBufferMax);
__EXTERN INTEGER __STDCALL LocalAlloc (SET uFlags, INTEGER uBytes);
__EXTERN INTEGER __STDCALL LocalCompact (INTEGER uMinFree);
__EXTERN INTEGER __STDCALL LocalFileTimeToFileTime (WinApi_FILETIME *lpLocalFileTime, WinApi_FILETIME *lpFileTime);
__EXTERN INTEGER __STDCALL LocalFlags (INTEGER hMem);
__EXTERN INTEGER __STDCALL LocalFree (INTEGER hMem);
__EXTERN INTEGER __STDCALL LocalHandle (INTEGER pMem);
__EXTERN INTEGER __STDCALL LocalLock (INTEGER hMem);
__EXTERN INTEGER __STDCALL LocalReAlloc (INTEGER hMem, INTEGER uBytes, SET uFlags);
__EXTERN INTEGER __STDCALL LocalShrink (INTEGER hMem, INTEGER cbNewSize);
__EXTERN INTEGER __STDCALL LocalSize (INTEGER hMem);
__EXTERN INTEGER __STDCALL LocalUnlock (INTEGER hMem);
__EXTERN INTEGER __STDCALL LockFile (INTEGER hFile, INTEGER dwFileOffsetLow, INTEGER dwFileOffsetHigh, INTEGER nNumberOfBytesToLockLow, INTEGER nNumberOfBytesToLockHigh);
__EXTERN INTEGER __STDCALL LockFileEx (INTEGER hFile, SET dwFlags, INTEGER dwReserved, INTEGER nNumberOfBytesToLockLow, INTEGER nNumberOfBytesToLockHigh, WinApi_OVERLAPPED *lpOverlapped);
__EXTERN INTEGER __STDCALL LockResource (INTEGER hResData);
__EXTERN INTEGER __STDCALL LockServiceDatabase (INTEGER hSCManager);
__EXTERN INTEGER __STDCALL LockWindowUpdate (INTEGER hWndLock);
__EXTERN INTEGER __STDCALL LogonUserA (WinApi_PtrSTR lpszUsername, WinApi_PtrSTR lpszDomain, WinApi_PtrSTR lpszPassword, INTEGER dwLogonType, INTEGER dwLogonProvider, INTEGER *phToken);
__EXTERN INTEGER __STDCALL LogonUserA (WinApi_PtrSTR lpszUsername, WinApi_PtrSTR lpszDomain, WinApi_PtrSTR lpszPassword, INTEGER dwLogonType, INTEGER dwLogonProvider, INTEGER *phToken);
__EXTERN INTEGER __STDCALL LogonUserW (WinApi_PtrWSTR lpszUsername, WinApi_PtrWSTR lpszDomain, WinApi_PtrWSTR lpszPassword, INTEGER dwLogonType, INTEGER dwLogonProvider, INTEGER *phToken);
__EXTERN INTEGER __STDCALL LookupAccountNameA (WinApi_PtrSTR lpSystemName, WinApi_PtrSTR lpAccountName, INTEGER Sid, INTEGER *cbSid, WinApi_PtrSTR ReferencedDomainName, INTEGER *cbReferencedDomainName, INTEGER *peUse);
__EXTERN INTEGER __STDCALL LookupAccountNameA (WinApi_PtrSTR lpSystemName, WinApi_PtrSTR lpAccountName, INTEGER Sid, INTEGER *cbSid, WinApi_PtrSTR ReferencedDomainName, INTEGER *cbReferencedDomainName, INTEGER *peUse);
__EXTERN INTEGER __STDCALL LookupAccountNameW (WinApi_PtrWSTR lpSystemName, WinApi_PtrWSTR lpAccountName, INTEGER Sid, INTEGER *cbSid, WinApi_PtrWSTR ReferencedDomainName, INTEGER *cbReferencedDomainName, INTEGER *peUse);
__EXTERN INTEGER __STDCALL LookupAccountSidA (WinApi_PtrSTR lpSystemName, INTEGER Sid, WinApi_PtrSTR Name, INTEGER *cbName, WinApi_PtrSTR ReferencedDomainName, INTEGER *cbReferencedDomainName, INTEGER *peUse);
__EXTERN INTEGER __STDCALL LookupAccountSidA (WinApi_PtrSTR lpSystemName, INTEGER Sid, WinApi_PtrSTR Name, INTEGER *cbName, WinApi_PtrSTR ReferencedDomainName, INTEGER *cbReferencedDomainName, INTEGER *peUse);
__EXTERN INTEGER __STDCALL LookupAccountSidW (WinApi_PtrWSTR lpSystemName, INTEGER Sid, WinApi_PtrWSTR Name, INTEGER *cbName, WinApi_PtrWSTR ReferencedDomainName, INTEGER *cbReferencedDomainName, INTEGER *peUse);
__EXTERN INTEGER __STDCALL LookupIconIdFromDirectory (CHAR *presbits, INTEGER fIcon);
__EXTERN INTEGER __STDCALL LookupIconIdFromDirectoryEx (CHAR *presbits, INTEGER fIcon, INTEGER cxDesired, INTEGER cyDesired, SET Flags);
__EXTERN INTEGER __STDCALL LookupPrivilegeDisplayNameA (WinApi_PtrSTR lpSystemName, WinApi_PtrSTR lpName, WinApi_PtrSTR lpDisplayName, INTEGER *cbDisplayName, INTEGER *lpLanguageId);
__EXTERN INTEGER __STDCALL LookupPrivilegeDisplayNameA (WinApi_PtrSTR lpSystemName, WinApi_PtrSTR lpName, WinApi_PtrSTR lpDisplayName, INTEGER *cbDisplayName, INTEGER *lpLanguageId);
__EXTERN INTEGER __STDCALL LookupPrivilegeDisplayNameW (WinApi_PtrWSTR lpSystemName, WinApi_PtrWSTR lpName, WinApi_PtrWSTR lpDisplayName, INTEGER *cbDisplayName, INTEGER *lpLanguageId);
__EXTERN INTEGER __STDCALL LookupPrivilegeNameA (WinApi_PtrSTR lpSystemName, LONGINT *lpLuid, WinApi_PtrSTR lpName, INTEGER *cbName);
__EXTERN INTEGER __STDCALL LookupPrivilegeNameA (WinApi_PtrSTR lpSystemName, LONGINT *lpLuid, WinApi_PtrSTR lpName, INTEGER *cbName);
__EXTERN INTEGER __STDCALL LookupPrivilegeNameW (WinApi_PtrWSTR lpSystemName, LONGINT *lpLuid, WinApi_PtrWSTR lpName, INTEGER *cbName);
__EXTERN INTEGER __STDCALL LookupPrivilegeValueA (WinApi_PtrSTR lpSystemName, WinApi_PtrSTR lpName, LONGINT *lpLuid);
__EXTERN INTEGER __STDCALL LookupPrivilegeValueA (WinApi_PtrSTR lpSystemName, WinApi_PtrSTR lpName, LONGINT *lpLuid);
__EXTERN INTEGER __STDCALL LookupPrivilegeValueW (WinApi_PtrWSTR lpSystemName, WinApi_PtrWSTR lpName, LONGINT *lpLuid);
__EXTERN INTEGER __STDCALL MakeAbsoluteSD (INTEGER pSelfRelativeSecurityDescriptor, INTEGER pAbsoluteSecurityDescriptor, INTEGER *lpdwAbsoluteSecurityDescriptorSize, WinApi_ACL *pDacl, INTEGER *lpdwDaclSize, WinApi_ACL *pSacl, INTEGER *lpdwSaclSize, INTEGER pOwner, INTEGER *lpdwOwnerSize, INTEGER pPrimaryGroup, INTEGER *lpdwPrimaryGroupSize);
__EXTERN INTEGER __STDCALL MakeSelfRelativeSD (INTEGER pAbsoluteSecurityDescriptor, INTEGER pSelfRelativeSecurityDescriptor, INTEGER *lpdwBufferLength);
__EXTERN INTEGER __STDCALL MapDialogRect (INTEGER hDlg, WinApi_RECT *lpRect);
__EXTERN void __STDCALL MapGenericMask (INTEGER *AccessMask, WinApi_GENERIC_MAPPING *GenericMapping);
__EXTERN INTEGER __STDCALL MapViewOfFile (INTEGER hFileMappingObject, SET dwDesiredAccess, INTEGER dwFileOffsetHigh, INTEGER dwFileOffsetLow, INTEGER dwNumberOfBytesToMap);
__EXTERN INTEGER __STDCALL MapViewOfFileEx (INTEGER hFileMappingObject, SET dwDesiredAccess, INTEGER dwFileOffsetHigh, INTEGER dwFileOffsetLow, INTEGER dwNumberOfBytesToMap, INTEGER lpBaseAddress);
__EXTERN INTEGER __STDCALL MapVirtualKeyA (INTEGER uCode, INTEGER uMapType);
__EXTERN INTEGER __STDCALL MapVirtualKeyA (INTEGER uCode, INTEGER uMapType);
__EXTERN INTEGER __STDCALL MapVirtualKeyExA (INTEGER uCode, INTEGER uMapType, INTEGER dwhkl);
__EXTERN INTEGER __STDCALL MapVirtualKeyExA (INTEGER uCode, INTEGER uMapType, INTEGER dwhkl);
__EXTERN INTEGER __STDCALL MapVirtualKeyExW (INTEGER uCode, INTEGER uMapType, INTEGER dwhkl);
__EXTERN INTEGER __STDCALL MapVirtualKeyW (INTEGER uCode, INTEGER uMapType);
__EXTERN INTEGER __STDCALL MapWindowPoints (INTEGER hWndFrom, INTEGER hWndTo, WinApi_POINT *lpPoints, INTEGER cPoints);
__EXTERN INTEGER __STDCALL MaskBlt (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4, INTEGER p5, INTEGER p6, INTEGER p7, INTEGER p8, INTEGER p9, INTEGER p10, INTEGER p11);
__EXTERN INTEGER __STDCALL MenuItemFromPoint (INTEGER hWnd, INTEGER hMenu, WinApi_POINT ptScreen);
__EXTERN INTEGER __STDCALL MessageBeep (SET uType);
__EXTERN INTEGER __STDCALL MessageBoxA (INTEGER hWnd, WinApi_PtrSTR lpText, WinApi_PtrSTR lpCaption, SET uType);
__EXTERN INTEGER __STDCALL MessageBoxA (INTEGER hWnd, WinApi_PtrSTR lpText, WinApi_PtrSTR lpCaption, SET uType);
__EXTERN INTEGER __STDCALL MessageBoxExA (INTEGER hWnd, WinApi_PtrSTR lpText, WinApi_PtrSTR lpCaption, SET uType, SHORTINT wLanguageId);
__EXTERN INTEGER __STDCALL MessageBoxExA (INTEGER hWnd, WinApi_PtrSTR lpText, WinApi_PtrSTR lpCaption, SET uType, SHORTINT wLanguageId);
__EXTERN INTEGER __STDCALL MessageBoxExW (INTEGER hWnd, WinApi_PtrWSTR lpText, WinApi_PtrWSTR lpCaption, SET uType, SHORTINT wLanguageId);
__EXTERN INTEGER __STDCALL MessageBoxIndirectA (WinApi_MSGBOXPARAMSA *p0);
__EXTERN INTEGER __STDCALL MessageBoxIndirectA (WinApi_MSGBOXPARAMSA *p0);
__EXTERN INTEGER __STDCALL MessageBoxIndirectW (WinApi_MSGBOXPARAMSW *p0);
__EXTERN INTEGER __STDCALL MessageBoxW (INTEGER hWnd, WinApi_PtrWSTR lpText, WinApi_PtrWSTR lpCaption, SET uType);
__EXTERN INTEGER __STDCALL ModifyMenuA (INTEGER hMnu, INTEGER uPosition, SET uFlags, INTEGER uIDNewItem, WinApi_PtrSTR lpNewItem);
__EXTERN INTEGER __STDCALL ModifyMenuA (INTEGER hMnu, INTEGER uPosition, SET uFlags, INTEGER uIDNewItem, WinApi_PtrSTR lpNewItem);
__EXTERN INTEGER __STDCALL ModifyMenuW (INTEGER hMnu, INTEGER uPosition, SET uFlags, INTEGER uIDNewItem, WinApi_PtrWSTR lpNewItem);
__EXTERN INTEGER __STDCALL ModifyWorldTransform (INTEGER p0, WinApi_XFORM *p1, INTEGER p2);
__EXTERN INTEGER __STDCALL MoveFileA (WinApi_PtrSTR lpExistingFileName, WinApi_PtrSTR lpNewFileName);
__EXTERN INTEGER __STDCALL MoveFileA (WinApi_PtrSTR lpExistingFileName, WinApi_PtrSTR lpNewFileName);
__EXTERN INTEGER __STDCALL MoveFileExA (WinApi_PtrSTR lpExistingFileName, WinApi_PtrSTR lpNewFileName, SET dwFlags);
__EXTERN INTEGER __STDCALL MoveFileExA (WinApi_PtrSTR lpExistingFileName, WinApi_PtrSTR lpNewFileName, SET dwFlags);
__EXTERN INTEGER __STDCALL MoveFileExW (WinApi_PtrWSTR lpExistingFileName, WinApi_PtrWSTR lpNewFileName, SET dwFlags);
__EXTERN INTEGER __STDCALL MoveFileW (WinApi_PtrWSTR lpExistingFileName, WinApi_PtrWSTR lpNewFileName);
__EXTERN INTEGER __STDCALL MoveToEx (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_POINT *p3);
__EXTERN INTEGER __STDCALL MoveWindow (INTEGER hWnd, INTEGER X, INTEGER Y, INTEGER nWidth, INTEGER nHeight, INTEGER bRepaint);
__EXTERN INTEGER __STDCALL MsgWaitForMultipleObjects (INTEGER nCount, INTEGER *pHandles, INTEGER fWaitAll, INTEGER dwMilliseconds, INTEGER dwWakeMask);
__EXTERN INTEGER __STDCALL MsgWaitForMultipleObjectsEx (INTEGER nCount, INTEGER *pHandles, INTEGER dwMilliseconds, INTEGER dwWakeMask, SET dwFlags);
__EXTERN INTEGER __STDCALL MulDiv (INTEGER nNumber, INTEGER nNumerator, INTEGER nDenominator);
__EXTERN INTEGER __STDCALL MultiByteToWideChar (INTEGER CodePage, SET dwFlags, WinApi_PtrSTR lpMultiByteStr, INTEGER cchMultiByte, WinApi_PtrWSTR lpWideCharStr, INTEGER cchWideChar);
__EXTERN INTEGER __STDCALL NotifyBootConfigStatus (INTEGER BootAcceptable);
__EXTERN INTEGER __STDCALL NotifyChangeEventLog (INTEGER hEventLog, INTEGER hEvent);
__EXTERN INTEGER __STDCALL ObjectCloseAuditAlarmA (WinApi_PtrSTR SubsystemName, INTEGER HandleId, INTEGER GenerateOnClose);
__EXTERN INTEGER __STDCALL ObjectCloseAuditAlarmA (WinApi_PtrSTR SubsystemName, INTEGER HandleId, INTEGER GenerateOnClose);
__EXTERN INTEGER __STDCALL ObjectCloseAuditAlarmW (WinApi_PtrWSTR SubsystemName, INTEGER HandleId, INTEGER GenerateOnClose);
__EXTERN INTEGER __STDCALL ObjectOpenAuditAlarmA (WinApi_PtrSTR SubsystemName, INTEGER HandleId, WinApi_PtrSTR ObjectTypeName, WinApi_PtrSTR ObjectName, INTEGER pSecurityDescriptor, INTEGER ClientToken, SET DesiredAccess, INTEGER GrantedAccess, WinApi_PRIVILEGE_SET *Privileges, INTEGER ObjectCreation, INTEGER AccessGranted, INTEGER *GenerateOnClose);
__EXTERN INTEGER __STDCALL ObjectOpenAuditAlarmA (WinApi_PtrSTR SubsystemName, INTEGER HandleId, WinApi_PtrSTR ObjectTypeName, WinApi_PtrSTR ObjectName, INTEGER pSecurityDescriptor, INTEGER ClientToken, SET DesiredAccess, INTEGER GrantedAccess, WinApi_PRIVILEGE_SET *Privileges, INTEGER ObjectCreation, INTEGER AccessGranted, INTEGER *GenerateOnClose);
__EXTERN INTEGER __STDCALL ObjectOpenAuditAlarmW (WinApi_PtrWSTR SubsystemName, INTEGER HandleId, WinApi_PtrWSTR ObjectTypeName, WinApi_PtrWSTR ObjectName, INTEGER pSecurityDescriptor, INTEGER ClientToken, SET DesiredAccess, INTEGER GrantedAccess, WinApi_PRIVILEGE_SET *Privileges, INTEGER ObjectCreation, INTEGER AccessGranted, INTEGER *GenerateOnClose);
__EXTERN INTEGER __STDCALL ObjectPrivilegeAuditAlarmA (WinApi_PtrSTR SubsystemName, INTEGER HandleId, INTEGER ClientToken, SET DesiredAccess, WinApi_PRIVILEGE_SET *Privileges, INTEGER AccessGranted);
__EXTERN INTEGER __STDCALL ObjectPrivilegeAuditAlarmA (WinApi_PtrSTR SubsystemName, INTEGER HandleId, INTEGER ClientToken, SET DesiredAccess, WinApi_PRIVILEGE_SET *Privileges, INTEGER AccessGranted);
__EXTERN INTEGER __STDCALL ObjectPrivilegeAuditAlarmW (WinApi_PtrWSTR SubsystemName, INTEGER HandleId, INTEGER ClientToken, SET DesiredAccess, WinApi_PRIVILEGE_SET *Privileges, INTEGER AccessGranted);
__EXTERN INTEGER __STDCALL OemKeyScan (SHORTINT wOemChar);
__EXTERN INTEGER __STDCALL OemToCharA (WinApi_PtrSTR lpszSrc, WinApi_PtrSTR lpszDst);
__EXTERN INTEGER __STDCALL OemToCharBuffA (WinApi_PtrSTR lpszSrc, WinApi_PtrSTR lpszDst, INTEGER cchDstLength);
__EXTERN INTEGER __STDCALL OemToCharA (WinApi_PtrSTR lpszSrc, WinApi_PtrSTR lpszDst);
__EXTERN INTEGER __STDCALL OemToCharA (WinApi_PtrSTR lpszSrc, WinApi_PtrSTR lpszDst);
__EXTERN INTEGER __STDCALL OemToCharBuffA (WinApi_PtrSTR lpszSrc, WinApi_PtrSTR lpszDst, INTEGER cchDstLength);
__EXTERN INTEGER __STDCALL OemToCharBuffA (WinApi_PtrSTR lpszSrc, WinApi_PtrSTR lpszDst, INTEGER cchDstLength);
__EXTERN INTEGER __STDCALL OemToCharBuffW (WinApi_PtrSTR lpszSrc, WinApi_PtrWSTR lpszDst, INTEGER cchDstLength);
__EXTERN INTEGER __STDCALL OemToCharW (WinApi_PtrSTR lpszSrc, WinApi_PtrWSTR lpszDst);
__EXTERN INTEGER __STDCALL OffsetClipRgn (INTEGER p0, INTEGER p1, INTEGER p2);
__EXTERN INTEGER __STDCALL OffsetRect (WinApi_RECT *lprc, INTEGER dx, INTEGER dy);
__EXTERN INTEGER __STDCALL OffsetRgn (INTEGER p0, INTEGER p1, INTEGER p2);
__EXTERN INTEGER __STDCALL OffsetViewportOrgEx (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_POINT *p3);
__EXTERN INTEGER __STDCALL OffsetWindowOrgEx (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_POINT *p3);
__EXTERN INTEGER __STDCALL OpenBackupEventLogA (WinApi_PtrSTR lpUNCServerName, WinApi_PtrSTR lpFileName);
__EXTERN INTEGER __STDCALL OpenBackupEventLogA (WinApi_PtrSTR lpUNCServerName, WinApi_PtrSTR lpFileName);
__EXTERN INTEGER __STDCALL OpenBackupEventLogW (WinApi_PtrWSTR lpUNCServerName, WinApi_PtrWSTR lpFileName);
__EXTERN INTEGER __STDCALL OpenClipboard (INTEGER hWndNewOwner);
__EXTERN INTEGER __STDCALL OpenDesktopA (WinApi_PtrSTR lpszDesktop, SET dwFlags, INTEGER fInherit, SET dwDesiredAccess);
__EXTERN INTEGER __STDCALL OpenDesktopA (WinApi_PtrSTR lpszDesktop, SET dwFlags, INTEGER fInherit, SET dwDesiredAccess);
__EXTERN INTEGER __STDCALL OpenDesktopW (WinApi_PtrWSTR lpszDesktop, SET dwFlags, INTEGER fInherit, SET dwDesiredAccess);
__EXTERN INTEGER __STDCALL OpenEventA (SET dwDesiredAccess, INTEGER bInheritHandle, WinApi_PtrSTR lpName);
__EXTERN INTEGER __STDCALL OpenEventA (SET dwDesiredAccess, INTEGER bInheritHandle, WinApi_PtrSTR lpName);
__EXTERN INTEGER __STDCALL OpenEventLogA (WinApi_PtrSTR lpUNCServerName, WinApi_PtrSTR lpSourceName);
__EXTERN INTEGER __STDCALL OpenEventLogA (WinApi_PtrSTR lpUNCServerName, WinApi_PtrSTR lpSourceName);
__EXTERN INTEGER __STDCALL OpenEventLogW (WinApi_PtrWSTR lpUNCServerName, WinApi_PtrWSTR lpSourceName);
__EXTERN INTEGER __STDCALL OpenEventW (SET dwDesiredAccess, INTEGER bInheritHandle, WinApi_PtrWSTR lpName);
__EXTERN INTEGER __STDCALL OpenFile (WinApi_PtrSTR lpFileName, WinApi_OFSTRUCT *lpReOpenBuff, SET uStyle);
__EXTERN INTEGER __STDCALL OpenFileMappingA (SET dwDesiredAccess, INTEGER bInheritHandle, WinApi_PtrSTR lpName);
__EXTERN INTEGER __STDCALL OpenFileMappingA (SET dwDesiredAccess, INTEGER bInheritHandle, WinApi_PtrSTR lpName);
__EXTERN INTEGER __STDCALL OpenFileMappingW (SET dwDesiredAccess, INTEGER bInheritHandle, WinApi_PtrWSTR lpName);
__EXTERN INTEGER __STDCALL OpenIcon (INTEGER hWnd);
__EXTERN INTEGER __STDCALL OpenInputDesktop (SET dwFlags, INTEGER fInherit, SET dwDesiredAccess);
__EXTERN INTEGER __STDCALL OpenMutexA (SET dwDesiredAccess, INTEGER bInheritHandle, WinApi_PtrSTR lpName);
__EXTERN INTEGER __STDCALL OpenMutexA (SET dwDesiredAccess, INTEGER bInheritHandle, WinApi_PtrSTR lpName);
__EXTERN INTEGER __STDCALL OpenMutexW (SET dwDesiredAccess, INTEGER bInheritHandle, WinApi_PtrWSTR lpName);
__EXTERN INTEGER __STDCALL OpenPrinterA (WinApi_PtrSTR pPrinterName, INTEGER *phPrinter, WinApi_PRINTER_DEFAULTSA *pDefault);
__EXTERN INTEGER __STDCALL OpenPrinterA (WinApi_PtrSTR pPrinterName, INTEGER *phPrinter, WinApi_PRINTER_DEFAULTSA *pDefault);
__EXTERN INTEGER __STDCALL OpenPrinterW (WinApi_PtrWSTR pPrinterName, INTEGER *phPrinter, WinApi_PRINTER_DEFAULTSW *pDefault);
__EXTERN INTEGER __STDCALL OpenProcess (SET dwDesiredAccess, INTEGER bInheritHandle, INTEGER dwProcessId);
__EXTERN INTEGER __STDCALL OpenProcessToken (INTEGER ProcessHandle, SET DesiredAccess, INTEGER *TokenHandle);
__EXTERN INTEGER __STDCALL OpenSCManagerA (WinApi_PtrSTR lpMachineName, WinApi_PtrSTR lpDatabaseName, SET dwDesiredAccess);
__EXTERN INTEGER __STDCALL OpenSCManagerA (WinApi_PtrSTR lpMachineName, WinApi_PtrSTR lpDatabaseName, SET dwDesiredAccess);
__EXTERN INTEGER __STDCALL OpenSCManagerW (WinApi_PtrWSTR lpMachineName, WinApi_PtrWSTR lpDatabaseName, SET dwDesiredAccess);
__EXTERN INTEGER __STDCALL OpenSemaphoreA (SET dwDesiredAccess, INTEGER bInheritHandle, WinApi_PtrSTR lpName);
__EXTERN INTEGER __STDCALL OpenSemaphoreA (SET dwDesiredAccess, INTEGER bInheritHandle, WinApi_PtrSTR lpName);
__EXTERN INTEGER __STDCALL OpenSemaphoreW (SET dwDesiredAccess, INTEGER bInheritHandle, WinApi_PtrWSTR lpName);
__EXTERN INTEGER __STDCALL OpenServiceA (INTEGER hSCManager, WinApi_PtrSTR lpServiceName, SET dwDesiredAccess);
__EXTERN INTEGER __STDCALL OpenServiceA (INTEGER hSCManager, WinApi_PtrSTR lpServiceName, SET dwDesiredAccess);
__EXTERN INTEGER __STDCALL OpenServiceW (INTEGER hSCManager, WinApi_PtrWSTR lpServiceName, SET dwDesiredAccess);
__EXTERN INTEGER __STDCALL OpenThreadToken (INTEGER ThreadHandle, SET DesiredAccess, INTEGER OpenAsSelf, INTEGER *TokenHandle);
__EXTERN INTEGER __STDCALL OpenWaitableTimerA (SET dwDesiredAccess, INTEGER bInheritHandle, WinApi_PtrSTR lpTimerName);
__EXTERN INTEGER __STDCALL OpenWaitableTimerA (SET dwDesiredAccess, INTEGER bInheritHandle, WinApi_PtrSTR lpTimerName);
__EXTERN INTEGER __STDCALL OpenWaitableTimerW (SET dwDesiredAccess, INTEGER bInheritHandle, WinApi_PtrWSTR lpTimerName);
__EXTERN INTEGER __STDCALL OpenWindowStationA (WinApi_PtrSTR lpszWinSta, INTEGER fInherit, SET dwDesiredAccess);
__EXTERN INTEGER __STDCALL OpenWindowStationA (WinApi_PtrSTR lpszWinSta, INTEGER fInherit, SET dwDesiredAccess);
__EXTERN INTEGER __STDCALL OpenWindowStationW (WinApi_PtrWSTR lpszWinSta, INTEGER fInherit, SET dwDesiredAccess);
__EXTERN void __STDCALL OutputDebugStringA (WinApi_PtrSTR lpOutputString);
__EXTERN void __STDCALL OutputDebugStringA (WinApi_PtrSTR lpOutputString);
__EXTERN void __STDCALL OutputDebugStringW (WinApi_PtrWSTR lpOutputString);
__EXTERN INTEGER __STDCALL PackDDElParam (INTEGER msg, INTEGER uiLo, INTEGER uiHi);
__EXTERN INTEGER __STDCALL PaintDesktop (INTEGER hdc);
__EXTERN INTEGER __STDCALL PaintRgn (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL PatBlt (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4, INTEGER p5);
__EXTERN INTEGER __STDCALL PathToRegion (INTEGER p0);
__EXTERN INTEGER __STDCALL PeekMessageA (WinApi_MSG *lpMsg, INTEGER hWnd, INTEGER wMsgFilterMin, INTEGER wMsgFilterMax, INTEGER wRemoveMsg);
__EXTERN INTEGER __STDCALL PeekMessageA (WinApi_MSG *lpMsg, INTEGER hWnd, INTEGER wMsgFilterMin, INTEGER wMsgFilterMax, INTEGER wRemoveMsg);
__EXTERN INTEGER __STDCALL PeekMessageW (WinApi_MSG *lpMsg, INTEGER hWnd, INTEGER wMsgFilterMin, INTEGER wMsgFilterMax, INTEGER wRemoveMsg);
__EXTERN INTEGER __STDCALL PeekNamedPipe (INTEGER hNamedPipe, INTEGER lpBuffer, INTEGER nBufferSize, INTEGER *lpBytesRead, INTEGER *lpTotalBytesAvail, INTEGER *lpBytesLeftThisMessage);
__EXTERN INTEGER __STDCALL Pie (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4, INTEGER p5, INTEGER p6, INTEGER p7, INTEGER p8);
__EXTERN INTEGER __STDCALL PlayEnhMetaFile (INTEGER p0, INTEGER p1, WinApi_RECT *p2);
__EXTERN INTEGER __STDCALL PlayEnhMetaFileRecord (INTEGER p0, WinApi_HANDLETABLE *p1, WinApi_ENHMETARECORD *p2, INTEGER p3);
__EXTERN INTEGER __STDCALL PlayMetaFile (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL PlayMetaFileRecord (INTEGER p0, WinApi_HANDLETABLE *p1, WinApi_METARECORD *p2, INTEGER p3);
__EXTERN INTEGER __STDCALL PlgBlt (INTEGER p0, WinApi_POINT *p1, INTEGER p2, INTEGER p3, INTEGER p4, INTEGER p5, INTEGER p6, INTEGER p7, INTEGER p8, INTEGER p9);
__EXTERN INTEGER __STDCALL PolyBezier (INTEGER p0, WinApi_POINT *p1, INTEGER p2);
__EXTERN INTEGER __STDCALL PolyBezierTo (INTEGER p0, WinApi_POINT *p1, INTEGER p2);
__EXTERN INTEGER __STDCALL PolyDraw (INTEGER p0, WinApi_POINT *p1, CHAR *p2, INTEGER p3);
__EXTERN INTEGER __STDCALL PolyPolygon (INTEGER p0, WinApi_POINT *p1, INTEGER *p2, INTEGER p3);
__EXTERN INTEGER __STDCALL PolyPolyline (INTEGER p0, WinApi_POINT *p1, INTEGER *p2, INTEGER p3);
__EXTERN INTEGER __STDCALL PolyTextOutA (INTEGER p0, WinApi_POLYTEXTA *p1, INTEGER p2);
__EXTERN INTEGER __STDCALL PolyTextOutA (INTEGER p0, WinApi_POLYTEXTA *p1, INTEGER p2);
__EXTERN INTEGER __STDCALL PolyTextOutW (INTEGER p0, WinApi_POLYTEXTW *p1, INTEGER p2);
__EXTERN INTEGER __STDCALL Polygon (INTEGER p0, WinApi_POINT *p1, INTEGER p2);
__EXTERN INTEGER __STDCALL Polyline (INTEGER p0, WinApi_POINT *p1, INTEGER p2);
__EXTERN INTEGER __STDCALL PolylineTo (INTEGER p0, WinApi_POINT *p1, INTEGER p2);
__EXTERN INTEGER __STDCALL PostMessageA (INTEGER hWnd, INTEGER Msg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL PostMessageA (INTEGER hWnd, INTEGER Msg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL PostMessageW (INTEGER hWnd, INTEGER Msg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL PostQueuedCompletionStatus (INTEGER CompletionPort, INTEGER dwNumberOfBytesTransferred, INTEGER dwCompletionKey, WinApi_OVERLAPPED *lpOverlapped);
__EXTERN void __STDCALL PostQuitMessage (INTEGER nExitCode);
__EXTERN INTEGER __STDCALL PostThreadMessageA (INTEGER idThread, INTEGER Msg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL PostThreadMessageA (INTEGER idThread, INTEGER Msg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL PostThreadMessageW (INTEGER idThread, INTEGER Msg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL PrepareTape (INTEGER hDevice, INTEGER dwOperation, INTEGER bImmediate);
__EXTERN INTEGER __STDCALL PrinterMessageBoxA (INTEGER hPrinter, INTEGER Error, INTEGER hWnd, WinApi_PtrSTR pText, WinApi_PtrSTR pCaption, INTEGER dwType);
__EXTERN INTEGER __STDCALL PrinterMessageBoxA (INTEGER hPrinter, INTEGER Error, INTEGER hWnd, WinApi_PtrSTR pText, WinApi_PtrSTR pCaption, INTEGER dwType);
__EXTERN INTEGER __STDCALL PrinterMessageBoxW (INTEGER hPrinter, INTEGER Error, INTEGER hWnd, WinApi_PtrWSTR pText, WinApi_PtrWSTR pCaption, INTEGER dwType);
__EXTERN INTEGER __STDCALL PrinterProperties (INTEGER hWnd, INTEGER hPrinter);
__EXTERN INTEGER __STDCALL PrivilegeCheck (INTEGER ClientToken, WinApi_PRIVILEGE_SET *RequiredPrivileges, INTEGER *pfResult);
__EXTERN INTEGER __STDCALL PrivilegedServiceAuditAlarmA (WinApi_PtrSTR SubsystemName, WinApi_PtrSTR ServiceName, INTEGER ClientToken, WinApi_PRIVILEGE_SET *Privileges, INTEGER AccessGranted);
__EXTERN INTEGER __STDCALL PrivilegedServiceAuditAlarmA (WinApi_PtrSTR SubsystemName, WinApi_PtrSTR ServiceName, INTEGER ClientToken, WinApi_PRIVILEGE_SET *Privileges, INTEGER AccessGranted);
__EXTERN INTEGER __STDCALL PrivilegedServiceAuditAlarmW (WinApi_PtrWSTR SubsystemName, WinApi_PtrWSTR ServiceName, INTEGER ClientToken, WinApi_PRIVILEGE_SET *Privileges, INTEGER AccessGranted);
__EXTERN INTEGER __STDCALL PtInRect (WinApi_RECT *lprc, WinApi_POINT pt);
__EXTERN INTEGER __STDCALL PtInRegion (INTEGER p0, INTEGER p1, INTEGER p2);
__EXTERN INTEGER __STDCALL PtVisible (INTEGER p0, INTEGER p1, INTEGER p2);
__EXTERN INTEGER __STDCALL PulseEvent (INTEGER hEvent);
__EXTERN INTEGER __STDCALL PurgeComm (INTEGER hFile, SET dwFlags);
__EXTERN INTEGER __STDCALL QueryDosDeviceA (WinApi_PtrSTR lpDeviceName, WinApi_PtrSTR lpTargetPath, INTEGER ucchMax);
__EXTERN INTEGER __STDCALL QueryDosDeviceA (WinApi_PtrSTR lpDeviceName, WinApi_PtrSTR lpTargetPath, INTEGER ucchMax);
__EXTERN INTEGER __STDCALL QueryDosDeviceW (WinApi_PtrWSTR lpDeviceName, WinApi_PtrWSTR lpTargetPath, INTEGER ucchMax);
__EXTERN INTEGER __STDCALL QueryPerformanceCounter (LONGINT *lpPerformanceCount);
__EXTERN INTEGER __STDCALL QueryPerformanceFrequency (LONGINT *lpFrequency);
__EXTERN INTEGER __STDCALL QueryServiceConfigA (INTEGER hService, WinApi_QUERY_SERVICE_CONFIGA *lpServiceConfig, INTEGER cbBufSize, INTEGER *pcbBytesNeeded);
__EXTERN INTEGER __STDCALL QueryServiceConfigA (INTEGER hService, WinApi_QUERY_SERVICE_CONFIGA *lpServiceConfig, INTEGER cbBufSize, INTEGER *pcbBytesNeeded);
__EXTERN INTEGER __STDCALL QueryServiceConfigW (INTEGER hService, WinApi_QUERY_SERVICE_CONFIGW *lpServiceConfig, INTEGER cbBufSize, INTEGER *pcbBytesNeeded);
__EXTERN INTEGER __STDCALL QueryServiceLockStatusA (INTEGER hSCManager, WinApi_QUERY_SERVICE_LOCK_STATUSA *lpLockStatus, INTEGER cbBufSize, INTEGER *pcbBytesNeeded);
__EXTERN INTEGER __STDCALL QueryServiceLockStatusA (INTEGER hSCManager, WinApi_QUERY_SERVICE_LOCK_STATUSA *lpLockStatus, INTEGER cbBufSize, INTEGER *pcbBytesNeeded);
__EXTERN INTEGER __STDCALL QueryServiceLockStatusW (INTEGER hSCManager, WinApi_QUERY_SERVICE_LOCK_STATUSW *lpLockStatus, INTEGER cbBufSize, INTEGER *pcbBytesNeeded);
__EXTERN INTEGER __STDCALL QueryServiceObjectSecurity (INTEGER hService, SET dwSecurityInformation, INTEGER lpSecurityDescriptor, INTEGER cbBufSize, INTEGER *pcbBytesNeeded);
__EXTERN INTEGER __STDCALL QueryServiceStatus (INTEGER hService, WinApi_SERVICE_STATUS *lpServiceStatus);
__EXTERN INTEGER __STDCALL QueueUserAPC (WinApi_APCFUNC pfnAPC, INTEGER hThread, INTEGER dwData);
__EXTERN void __STDCALL RaiseException (INTEGER dwExceptionCode, INTEGER dwExceptionFlags, INTEGER nNumberOfArguments, INTEGER *lpArguments);
__EXTERN INTEGER __STDCALL ReadConsoleA (INTEGER hConsoleInput, INTEGER lpBuffer, INTEGER nNumberOfCharsToRead, INTEGER *lpNumberOfCharsRead, INTEGER lpReserved);
__EXTERN INTEGER __STDCALL ReadConsoleA (INTEGER hConsoleInput, INTEGER lpBuffer, INTEGER nNumberOfCharsToRead, INTEGER *lpNumberOfCharsRead, INTEGER lpReserved);
__EXTERN INTEGER __STDCALL ReadConsoleOutputAttribute (INTEGER hConsoleOutput, SHORTINT *lpAttribute, INTEGER nLength, WinApi_COORD dwReadCoord, INTEGER *lpNumberOfAttrsRead);
__EXTERN INTEGER __STDCALL ReadConsoleOutputCharacterA (INTEGER hConsoleOutput, WinApi_PtrSTR lpCharacter, INTEGER nLength, WinApi_COORD dwReadCoord, INTEGER *lpNumberOfCharsRead);
__EXTERN INTEGER __STDCALL ReadConsoleOutputCharacterA (INTEGER hConsoleOutput, WinApi_PtrSTR lpCharacter, INTEGER nLength, WinApi_COORD dwReadCoord, INTEGER *lpNumberOfCharsRead);
__EXTERN INTEGER __STDCALL ReadConsoleOutputCharacterW (INTEGER hConsoleOutput, WinApi_PtrWSTR lpCharacter, INTEGER nLength, WinApi_COORD dwReadCoord, INTEGER *lpNumberOfCharsRead);
__EXTERN INTEGER __STDCALL ReadConsoleW (INTEGER hConsoleInput, INTEGER lpBuffer, INTEGER nNumberOfCharsToRead, INTEGER *lpNumberOfCharsRead, INTEGER lpReserved);
__EXTERN INTEGER __STDCALL ReadDirectoryChangesW (INTEGER hDirectory, INTEGER lpBuffer, INTEGER nBufferLength, INTEGER bWatchSubtree, SET dwNotifyFilter, INTEGER *lpBytesReturned, WinApi_OVERLAPPED *lpOverlapped, WinApi_OVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine);
__EXTERN INTEGER __STDCALL ReadEventLogA (INTEGER hEventLog, SET dwReadFlags, INTEGER dwRecordOffset, INTEGER lpBuffer, INTEGER nNumberOfBytesToRead, INTEGER *pnBytesRead, INTEGER *pnMinNumberOfBytesNeeded);
__EXTERN INTEGER __STDCALL ReadEventLogA (INTEGER hEventLog, SET dwReadFlags, INTEGER dwRecordOffset, INTEGER lpBuffer, INTEGER nNumberOfBytesToRead, INTEGER *pnBytesRead, INTEGER *pnMinNumberOfBytesNeeded);
__EXTERN INTEGER __STDCALL ReadEventLogW (INTEGER hEventLog, SET dwReadFlags, INTEGER dwRecordOffset, INTEGER lpBuffer, INTEGER nNumberOfBytesToRead, INTEGER *pnBytesRead, INTEGER *pnMinNumberOfBytesNeeded);
__EXTERN INTEGER __STDCALL ReadFile (INTEGER hFile, INTEGER lpBuffer, INTEGER nNumberOfBytesToRead, INTEGER *lpNumberOfBytesRead, WinApi_OVERLAPPED *lpOverlapped);
__EXTERN INTEGER __STDCALL ReadFileEx (INTEGER hFile, INTEGER lpBuffer, INTEGER nNumberOfBytesToRead, WinApi_OVERLAPPED *lpOverlapped, WinApi_OVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine);
__EXTERN INTEGER __STDCALL ReadPrinter (INTEGER hPrinter, INTEGER pBuf, INTEGER cbBuf, INTEGER *pNoBytesRead);
__EXTERN INTEGER __STDCALL ReadProcessMemory (INTEGER hProcess, INTEGER lpBaseAddress, INTEGER lpBuffer, INTEGER nSize, INTEGER *lpNumberOfBytesRead);
__EXTERN INTEGER __STDCALL RealizePalette (INTEGER p0);
__EXTERN INTEGER __STDCALL RectInRegion (INTEGER p0, WinApi_RECT *p1);
__EXTERN INTEGER __STDCALL RectVisible (INTEGER p0, WinApi_RECT *p1);
__EXTERN INTEGER __STDCALL Rectangle (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4);
__EXTERN INTEGER __STDCALL RedrawWindow (INTEGER hWnd, WinApi_RECT *lprcUpdate, INTEGER hrgnUpdate, SET flags);
__EXTERN INTEGER __STDCALL RegCloseKey (INTEGER hKey);
__EXTERN INTEGER __STDCALL RegConnectRegistryA (WinApi_PtrSTR lpMachineName, INTEGER hKey, INTEGER *phkResult);
__EXTERN INTEGER __STDCALL RegConnectRegistryA (WinApi_PtrSTR lpMachineName, INTEGER hKey, INTEGER *phkResult);
__EXTERN INTEGER __STDCALL RegConnectRegistryW (WinApi_PtrWSTR lpMachineName, INTEGER hKey, INTEGER *phkResult);
__EXTERN INTEGER __STDCALL RegCreateKeyA (INTEGER hKey, WinApi_PtrSTR lpSubKey, INTEGER *phkResult);
__EXTERN INTEGER __STDCALL RegCreateKeyA (INTEGER hKey, WinApi_PtrSTR lpSubKey, INTEGER *phkResult);
__EXTERN INTEGER __STDCALL RegCreateKeyExA (INTEGER hKey, WinApi_PtrSTR lpSubKey, INTEGER Reserved, WinApi_PtrSTR lpClass, SET dwOptions, SET samDesired, WinApi_SECURITY_ATTRIBUTES *lpSecurityAttributes, INTEGER *phkResult, INTEGER *lpdwDisposition);
__EXTERN INTEGER __STDCALL RegCreateKeyExA (INTEGER hKey, WinApi_PtrSTR lpSubKey, INTEGER Reserved, WinApi_PtrSTR lpClass, SET dwOptions, SET samDesired, WinApi_SECURITY_ATTRIBUTES *lpSecurityAttributes, INTEGER *phkResult, INTEGER *lpdwDisposition);
__EXTERN INTEGER __STDCALL RegCreateKeyExW (INTEGER hKey, WinApi_PtrWSTR lpSubKey, INTEGER Reserved, WinApi_PtrWSTR lpClass, SET dwOptions, SET samDesired, WinApi_SECURITY_ATTRIBUTES *lpSecurityAttributes, INTEGER *phkResult, INTEGER *lpdwDisposition);
__EXTERN INTEGER __STDCALL RegCreateKeyW (INTEGER hKey, WinApi_PtrWSTR lpSubKey, INTEGER *phkResult);
__EXTERN INTEGER __STDCALL RegDeleteKeyA (INTEGER hKey, WinApi_PtrSTR lpSubKey);
__EXTERN INTEGER __STDCALL RegDeleteKeyA (INTEGER hKey, WinApi_PtrSTR lpSubKey);
__EXTERN INTEGER __STDCALL RegDeleteKeyW (INTEGER hKey, WinApi_PtrWSTR lpSubKey);
__EXTERN INTEGER __STDCALL RegDeleteValueA (INTEGER hKey, WinApi_PtrSTR lpValueName);
__EXTERN INTEGER __STDCALL RegDeleteValueA (INTEGER hKey, WinApi_PtrSTR lpValueName);
__EXTERN INTEGER __STDCALL RegDeleteValueW (INTEGER hKey, WinApi_PtrWSTR lpValueName);
__EXTERN INTEGER __STDCALL RegEnumKeyA (INTEGER hKey, INTEGER dwIndex, WinApi_PtrSTR lpName, INTEGER cbName);
__EXTERN INTEGER __STDCALL RegEnumKeyA (INTEGER hKey, INTEGER dwIndex, WinApi_PtrSTR lpName, INTEGER cbName);
__EXTERN INTEGER __STDCALL RegEnumKeyExA (INTEGER hKey, INTEGER dwIndex, WinApi_PtrSTR lpName, INTEGER *lpcbName, INTEGER *lpReserved, WinApi_PtrSTR lpClass, INTEGER *lpcbClass, WinApi_FILETIME *lpftLastWriteTime);
__EXTERN INTEGER __STDCALL RegEnumKeyExA (INTEGER hKey, INTEGER dwIndex, WinApi_PtrSTR lpName, INTEGER *lpcbName, INTEGER *lpReserved, WinApi_PtrSTR lpClass, INTEGER *lpcbClass, WinApi_FILETIME *lpftLastWriteTime);
__EXTERN INTEGER __STDCALL RegEnumKeyExW (INTEGER hKey, INTEGER dwIndex, WinApi_PtrWSTR lpName, INTEGER *lpcbName, INTEGER *lpReserved, WinApi_PtrWSTR lpClass, INTEGER *lpcbClass, WinApi_FILETIME *lpftLastWriteTime);
__EXTERN INTEGER __STDCALL RegEnumKeyW (INTEGER hKey, INTEGER dwIndex, WinApi_PtrWSTR lpName, INTEGER cbName);
__EXTERN INTEGER __STDCALL RegEnumValueA (INTEGER hKey, INTEGER dwIndex, WinApi_PtrSTR lpValueName, INTEGER *lpcbValueName, INTEGER *lpReserved, INTEGER *lpType, INTEGER lpData, INTEGER *lpcbData);
__EXTERN INTEGER __STDCALL RegEnumValueA (INTEGER hKey, INTEGER dwIndex, WinApi_PtrSTR lpValueName, INTEGER *lpcbValueName, INTEGER *lpReserved, INTEGER *lpType, INTEGER lpData, INTEGER *lpcbData);
__EXTERN INTEGER __STDCALL RegEnumValueW (INTEGER hKey, INTEGER dwIndex, WinApi_PtrWSTR lpValueName, INTEGER *lpcbValueName, INTEGER *lpReserved, INTEGER *lpType, INTEGER lpData, INTEGER *lpcbData);
__EXTERN INTEGER __STDCALL RegFlushKey (INTEGER hKey);
__EXTERN INTEGER __STDCALL RegGetKeySecurity (INTEGER hKey, SET SecurityInformation, INTEGER pSecurityDescriptor, INTEGER *lpcbSecurityDescriptor);
__EXTERN INTEGER __STDCALL RegLoadKeyA (INTEGER hKey, WinApi_PtrSTR lpSubKey, WinApi_PtrSTR lpFile);
__EXTERN INTEGER __STDCALL RegLoadKeyA (INTEGER hKey, WinApi_PtrSTR lpSubKey, WinApi_PtrSTR lpFile);
__EXTERN INTEGER __STDCALL RegLoadKeyW (INTEGER hKey, WinApi_PtrWSTR lpSubKey, WinApi_PtrWSTR lpFile);
__EXTERN INTEGER __STDCALL RegNotifyChangeKeyValue (INTEGER hKey, INTEGER bWatchSubtree, SET dwNotifyFilter, INTEGER hEvent, INTEGER fAsynchronus);
__EXTERN INTEGER __STDCALL RegOpenKeyA (INTEGER hKey, WinApi_PtrSTR lpSubKey, INTEGER *phkResult);
__EXTERN INTEGER __STDCALL RegOpenKeyA (INTEGER hKey, WinApi_PtrSTR lpSubKey, INTEGER *phkResult);
__EXTERN INTEGER __STDCALL RegOpenKeyExA (INTEGER hKey, WinApi_PtrSTR lpSubKey, INTEGER ulOptions, SET samDesired, INTEGER *phkResult);
__EXTERN INTEGER __STDCALL RegOpenKeyExA (INTEGER hKey, WinApi_PtrSTR lpSubKey, INTEGER ulOptions, SET samDesired, INTEGER *phkResult);
__EXTERN INTEGER __STDCALL RegOpenKeyExW (INTEGER hKey, WinApi_PtrWSTR lpSubKey, INTEGER ulOptions, SET samDesired, INTEGER *phkResult);
__EXTERN INTEGER __STDCALL RegOpenKeyW (INTEGER hKey, WinApi_PtrWSTR lpSubKey, INTEGER *phkResult);
__EXTERN INTEGER __STDCALL RegQueryInfoKeyA (INTEGER hKey, WinApi_PtrSTR lpClass, INTEGER *lpcbClass, INTEGER *lpReserved, INTEGER *lpcSubKeys, INTEGER *lpcbMaxSubKeyLen, INTEGER *lpcbMaxClassLen, INTEGER *lpcValues, INTEGER *lpcbMaxValueNameLen, INTEGER *lpcbMaxValueLen, INTEGER *lpcbSecurityDescriptor, WinApi_FILETIME *lpftLastWriteTime);
__EXTERN INTEGER __STDCALL RegQueryInfoKeyA (INTEGER hKey, WinApi_PtrSTR lpClass, INTEGER *lpcbClass, INTEGER *lpReserved, INTEGER *lpcSubKeys, INTEGER *lpcbMaxSubKeyLen, INTEGER *lpcbMaxClassLen, INTEGER *lpcValues, INTEGER *lpcbMaxValueNameLen, INTEGER *lpcbMaxValueLen, INTEGER *lpcbSecurityDescriptor, WinApi_FILETIME *lpftLastWriteTime);
__EXTERN INTEGER __STDCALL RegQueryInfoKeyW (INTEGER hKey, WinApi_PtrWSTR lpClass, INTEGER *lpcbClass, INTEGER *lpReserved, INTEGER *lpcSubKeys, INTEGER *lpcbMaxSubKeyLen, INTEGER *lpcbMaxClassLen, INTEGER *lpcValues, INTEGER *lpcbMaxValueNameLen, INTEGER *lpcbMaxValueLen, INTEGER *lpcbSecurityDescriptor, WinApi_FILETIME *lpftLastWriteTime);
__EXTERN INTEGER __STDCALL RegQueryMultipleValuesA (INTEGER hKey, WinApi_VALENTA *val_list, INTEGER num_vals, WinApi_PtrSTR lpValueBuf, INTEGER *ldwTotsize);
__EXTERN INTEGER __STDCALL RegQueryMultipleValuesA (INTEGER hKey, WinApi_VALENTA *val_list, INTEGER num_vals, WinApi_PtrSTR lpValueBuf, INTEGER *ldwTotsize);
__EXTERN INTEGER __STDCALL RegQueryMultipleValuesW (INTEGER hKey, WinApi_VALENTW *val_list, INTEGER num_vals, WinApi_PtrWSTR lpValueBuf, INTEGER *ldwTotsize);
__EXTERN INTEGER __STDCALL RegQueryValueA (INTEGER hKey, WinApi_PtrSTR lpSubKey, WinApi_PtrSTR lpValue, INTEGER *lpcbValue);
__EXTERN INTEGER __STDCALL RegQueryValueA (INTEGER hKey, WinApi_PtrSTR lpSubKey, WinApi_PtrSTR lpValue, INTEGER *lpcbValue);
__EXTERN INTEGER __STDCALL RegQueryValueExA (INTEGER hKey, WinApi_PtrSTR lpValueName, INTEGER *lpReserved, INTEGER *lpType, INTEGER lpData, INTEGER *lpcbData);
__EXTERN INTEGER __STDCALL RegQueryValueExA (INTEGER hKey, WinApi_PtrSTR lpValueName, INTEGER *lpReserved, INTEGER *lpType, INTEGER lpData, INTEGER *lpcbData);
__EXTERN INTEGER __STDCALL RegQueryValueExW (INTEGER hKey, WinApi_PtrWSTR lpValueName, INTEGER *lpReserved, INTEGER *lpType, INTEGER lpData, INTEGER *lpcbData);
__EXTERN INTEGER __STDCALL RegQueryValueW (INTEGER hKey, WinApi_PtrWSTR lpSubKey, WinApi_PtrWSTR lpValue, INTEGER *lpcbValue);
__EXTERN INTEGER __STDCALL RegReplaceKeyA (INTEGER hKey, WinApi_PtrSTR lpSubKey, WinApi_PtrSTR lpNewFile, WinApi_PtrSTR lpOldFile);
__EXTERN INTEGER __STDCALL RegReplaceKeyA (INTEGER hKey, WinApi_PtrSTR lpSubKey, WinApi_PtrSTR lpNewFile, WinApi_PtrSTR lpOldFile);
__EXTERN INTEGER __STDCALL RegReplaceKeyW (INTEGER hKey, WinApi_PtrWSTR lpSubKey, WinApi_PtrWSTR lpNewFile, WinApi_PtrWSTR lpOldFile);
__EXTERN INTEGER __STDCALL RegRestoreKeyA (INTEGER hKey, WinApi_PtrSTR lpFile, SET dwFlags);
__EXTERN INTEGER __STDCALL RegRestoreKeyA (INTEGER hKey, WinApi_PtrSTR lpFile, SET dwFlags);
__EXTERN INTEGER __STDCALL RegRestoreKeyW (INTEGER hKey, WinApi_PtrWSTR lpFile, SET dwFlags);
__EXTERN INTEGER __STDCALL RegSaveKeyA (INTEGER hKey, WinApi_PtrSTR lpFile, WinApi_SECURITY_ATTRIBUTES *lpSecurityAttributes);
__EXTERN INTEGER __STDCALL RegSaveKeyA (INTEGER hKey, WinApi_PtrSTR lpFile, WinApi_SECURITY_ATTRIBUTES *lpSecurityAttributes);
__EXTERN INTEGER __STDCALL RegSaveKeyW (INTEGER hKey, WinApi_PtrWSTR lpFile, WinApi_SECURITY_ATTRIBUTES *lpSecurityAttributes);
__EXTERN INTEGER __STDCALL RegSetKeySecurity (INTEGER hKey, SET SecurityInformation, INTEGER pSecurityDescriptor);
__EXTERN INTEGER __STDCALL RegSetValueA (INTEGER hKey, WinApi_PtrSTR lpSubKey, INTEGER dwType, WinApi_PtrSTR lpData, INTEGER cbData);
__EXTERN INTEGER __STDCALL RegSetValueA (INTEGER hKey, WinApi_PtrSTR lpSubKey, INTEGER dwType, WinApi_PtrSTR lpData, INTEGER cbData);
__EXTERN INTEGER __STDCALL RegSetValueExA (INTEGER hKey, WinApi_PtrSTR lpValueName, INTEGER Reserved, INTEGER dwType, INTEGER lpData, INTEGER cbData);
__EXTERN INTEGER __STDCALL RegSetValueExA (INTEGER hKey, WinApi_PtrSTR lpValueName, INTEGER Reserved, INTEGER dwType, INTEGER lpData, INTEGER cbData);
__EXTERN INTEGER __STDCALL RegSetValueExW (INTEGER hKey, WinApi_PtrWSTR lpValueName, INTEGER Reserved, INTEGER dwType, INTEGER lpData, INTEGER cbData);
__EXTERN INTEGER __STDCALL RegSetValueW (INTEGER hKey, WinApi_PtrWSTR lpSubKey, INTEGER dwType, WinApi_PtrWSTR lpData, INTEGER cbData);
__EXTERN INTEGER __STDCALL RegUnLoadKeyA (INTEGER hKey, WinApi_PtrSTR lpSubKey);
__EXTERN INTEGER __STDCALL RegUnLoadKeyA (INTEGER hKey, WinApi_PtrSTR lpSubKey);
__EXTERN INTEGER __STDCALL RegUnLoadKeyW (INTEGER hKey, WinApi_PtrWSTR lpSubKey);
__EXTERN SHORTINT __STDCALL RegisterClassA (WinApi_WNDCLASSA *lpWndClass);
__EXTERN SHORTINT __STDCALL RegisterClassA (WinApi_WNDCLASSA *lpWndClass);
__EXTERN SHORTINT __STDCALL RegisterClassExA (WinApi_WNDCLASSEXA *p0);
__EXTERN SHORTINT __STDCALL RegisterClassExA (WinApi_WNDCLASSEXA *p0);
__EXTERN SHORTINT __STDCALL RegisterClassExW (WinApi_WNDCLASSEXW *p0);
__EXTERN SHORTINT __STDCALL RegisterClassW (WinApi_WNDCLASSW *lpWndClass);
__EXTERN INTEGER __STDCALL RegisterClipboardFormatA (WinApi_PtrSTR lpszFormat);
__EXTERN INTEGER __STDCALL RegisterClipboardFormatA (WinApi_PtrSTR lpszFormat);
__EXTERN INTEGER __STDCALL RegisterClipboardFormatW (WinApi_PtrWSTR lpszFormat);
__EXTERN INTEGER __STDCALL RegisterEventSourceA (WinApi_PtrSTR lpUNCServerName, WinApi_PtrSTR lpSourceName);
__EXTERN INTEGER __STDCALL RegisterEventSourceA (WinApi_PtrSTR lpUNCServerName, WinApi_PtrSTR lpSourceName);
__EXTERN INTEGER __STDCALL RegisterEventSourceW (WinApi_PtrWSTR lpUNCServerName, WinApi_PtrWSTR lpSourceName);
__EXTERN INTEGER __STDCALL RegisterHotKey (INTEGER hWnd, INTEGER id, SET fsModifiers, INTEGER vk);
__EXTERN INTEGER __STDCALL RegisterServiceCtrlHandlerA (WinApi_PtrSTR lpServiceName, WinApi_HANDLER_FUNCTION lpHandlerProc);
__EXTERN INTEGER __STDCALL RegisterServiceCtrlHandlerA (WinApi_PtrSTR lpServiceName, WinApi_HANDLER_FUNCTION lpHandlerProc);
__EXTERN INTEGER __STDCALL RegisterServiceCtrlHandlerW (WinApi_PtrWSTR lpServiceName, WinApi_HANDLER_FUNCTION lpHandlerProc);
__EXTERN INTEGER __STDCALL RegisterWindowMessageA (WinApi_PtrSTR lpString);
__EXTERN INTEGER __STDCALL RegisterWindowMessageA (WinApi_PtrSTR lpString);
__EXTERN INTEGER __STDCALL RegisterWindowMessageW (WinApi_PtrWSTR lpString);
__EXTERN INTEGER __STDCALL ReleaseCapture (void);
__EXTERN INTEGER __STDCALL ReleaseDC (INTEGER hWnd, INTEGER hDC);
__EXTERN INTEGER __STDCALL ReleaseMutex (INTEGER hMutex);
__EXTERN INTEGER __STDCALL ReleaseSemaphore (INTEGER hSemaphore, INTEGER lReleaseCount, INTEGER *lpPreviousCount);
__EXTERN INTEGER __STDCALL RemoveDirectoryA (WinApi_PtrSTR lpPathName);
__EXTERN INTEGER __STDCALL RemoveDirectoryA (WinApi_PtrSTR lpPathName);
__EXTERN INTEGER __STDCALL RemoveDirectoryW (WinApi_PtrWSTR lpPathName);
__EXTERN INTEGER __STDCALL RemoveFontResourceA (WinApi_PtrSTR p0);
__EXTERN INTEGER __STDCALL RemoveFontResourceA (WinApi_PtrSTR p0);
__EXTERN INTEGER __STDCALL RemoveFontResourceW (WinApi_PtrWSTR p0);
__EXTERN INTEGER __STDCALL RemoveMenu (INTEGER hMenu, INTEGER uPosition, SET uFlags);
__EXTERN INTEGER __STDCALL RemovePropA (INTEGER hWnd, WinApi_PtrSTR lpString);
__EXTERN INTEGER __STDCALL RemovePropA (INTEGER hWnd, WinApi_PtrSTR lpString);
__EXTERN INTEGER __STDCALL RemovePropW (INTEGER hWnd, WinApi_PtrWSTR lpString);
__EXTERN INTEGER __STDCALL ReplyMessage (INTEGER lResult);
__EXTERN INTEGER __STDCALL ReportEventA (INTEGER hEventLog, SHORTINT wType, SHORTINT wCategory, INTEGER dwEventID, INTEGER lpUserSid, SHORTINT wNumStrings, INTEGER dwDataSize, WinApi_PtrSTR *lpStrings, INTEGER lpRawData);
__EXTERN INTEGER __STDCALL ReportEventA (INTEGER hEventLog, SHORTINT wType, SHORTINT wCategory, INTEGER dwEventID, INTEGER lpUserSid, SHORTINT wNumStrings, INTEGER dwDataSize, WinApi_PtrSTR *lpStrings, INTEGER lpRawData);
__EXTERN INTEGER __STDCALL ReportEventW (INTEGER hEventLog, SHORTINT wType, SHORTINT wCategory, INTEGER dwEventID, INTEGER lpUserSid, SHORTINT wNumStrings, INTEGER dwDataSize, WinApi_PtrWSTR *lpStrings, INTEGER lpRawData);
__EXTERN INTEGER __STDCALL ResetDCA (INTEGER p0, WinApi_DEVMODEA *p1);
__EXTERN INTEGER __STDCALL ResetDCA (INTEGER p0, WinApi_DEVMODEA *p1);
__EXTERN INTEGER __STDCALL ResetDCW (INTEGER p0, WinApi_DEVMODEW *p1);
__EXTERN INTEGER __STDCALL ResetEvent (INTEGER hEvent);
__EXTERN INTEGER __STDCALL ResetPrinterA (INTEGER hPrinter, WinApi_PRINTER_DEFAULTSA *pDefault);
__EXTERN INTEGER __STDCALL ResetPrinterA (INTEGER hPrinter, WinApi_PRINTER_DEFAULTSA *pDefault);
__EXTERN INTEGER __STDCALL ResetPrinterW (INTEGER hPrinter, WinApi_PRINTER_DEFAULTSW *pDefault);
__EXTERN INTEGER __STDCALL ResizePalette (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL RestoreDC (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL ResumeThread (INTEGER hThread);
__EXTERN INTEGER __STDCALL ReuseDDElParam (INTEGER lParam, INTEGER msgIn, INTEGER msgOut, INTEGER uiLo, INTEGER uiHi);
__EXTERN INTEGER __STDCALL RevertToSelf (void);
__EXTERN INTEGER __STDCALL RoundRect (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4, INTEGER p5, INTEGER p6);
__EXTERN void __STDCALL RtlUnwind (INTEGER targetFrame, INTEGER targetIp, WinApi_PtrEXCEPTION_RECORD excpRec, INTEGER retVal);
__EXTERN void __STDCALL SHFreeNameMappings (INTEGER hNameMappings);
__EXTERN INTEGER __STDCALL SHGetNewLinkInfoA (WinApi_PtrSTR pszLinkTo, WinApi_PtrSTR pszDir, WinApi_PtrSTR pszName, INTEGER *pfMustCopy, SET uFlags);
__EXTERN INTEGER __STDCALL SHGetNewLinkInfoA (WinApi_PtrSTR pszLinkTo, WinApi_PtrSTR pszDir, WinApi_PtrSTR pszName, INTEGER *pfMustCopy, SET uFlags);
__EXTERN INTEGER __STDCALL SHGetNewLinkInfoW (WinApi_PtrWSTR pszLinkTo, WinApi_PtrWSTR pszDir, WinApi_PtrWSTR pszName, INTEGER *pfMustCopy, SET uFlags);
__EXTERN INTEGER __STDCALL SaveDC (INTEGER p0);
__EXTERN INTEGER __STDCALL ScaleViewportExtEx (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4, WinApi_SIZE *p5);
__EXTERN INTEGER __STDCALL ScaleWindowExtEx (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4, WinApi_SIZE *p5);
__EXTERN INTEGER __STDCALL ScheduleJob (INTEGER hPrinter, INTEGER JobId);
__EXTERN INTEGER __STDCALL ScreenToClient (INTEGER hWnd, WinApi_POINT *lpPoint);
__EXTERN INTEGER __STDCALL ScrollDC (INTEGER hDC, INTEGER dx, INTEGER dy, WinApi_RECT *lprcScroll, WinApi_RECT *lprcClip, INTEGER hrgnUpdate, WinApi_RECT *lprcUpdate);
__EXTERN INTEGER __STDCALL ScrollWindow (INTEGER hWnd, INTEGER XAmount, INTEGER YAmount, WinApi_RECT *lpRect, WinApi_RECT *lpClipRect);
__EXTERN INTEGER __STDCALL ScrollWindowEx (INTEGER hWnd, INTEGER dx, INTEGER dy, WinApi_RECT *prcScroll, WinApi_RECT *prcClip, INTEGER hrgnUpdate, WinApi_RECT *prcUpdate, SET flags);
__EXTERN INTEGER __STDCALL SearchPathA (WinApi_PtrSTR lpPath, WinApi_PtrSTR lpFileName, WinApi_PtrSTR lpExtension, INTEGER nBufferLength, WinApi_PtrSTR lpBuffer, WinApi_PtrSTR *lpFilePart);
__EXTERN INTEGER __STDCALL SearchPathA (WinApi_PtrSTR lpPath, WinApi_PtrSTR lpFileName, WinApi_PtrSTR lpExtension, INTEGER nBufferLength, WinApi_PtrSTR lpBuffer, WinApi_PtrSTR *lpFilePart);
__EXTERN INTEGER __STDCALL SearchPathW (WinApi_PtrWSTR lpPath, WinApi_PtrWSTR lpFileName, WinApi_PtrWSTR lpExtension, INTEGER nBufferLength, WinApi_PtrWSTR lpBuffer, WinApi_PtrWSTR *lpFilePart);
__EXTERN INTEGER __STDCALL SelectClipPath (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL SelectClipRgn (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL SelectObject (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL SelectPalette (INTEGER p0, INTEGER p1, INTEGER p2);
__EXTERN INTEGER __STDCALL SendDlgItemMessageA (INTEGER hDlg, INTEGER nIDDlgItem, INTEGER Msg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL SendDlgItemMessageA (INTEGER hDlg, INTEGER nIDDlgItem, INTEGER Msg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL SendDlgItemMessageW (INTEGER hDlg, INTEGER nIDDlgItem, INTEGER Msg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL SendMessageA (INTEGER hWnd, INTEGER Msg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL SendMessageA (INTEGER hWnd, INTEGER Msg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL SendMessageCallbackA (INTEGER hWnd, INTEGER Msg, INTEGER wParam, INTEGER lParam, WinApi_SENDASYNCPROC lpResultCallBack, INTEGER dwData);
__EXTERN INTEGER __STDCALL SendMessageCallbackA (INTEGER hWnd, INTEGER Msg, INTEGER wParam, INTEGER lParam, WinApi_SENDASYNCPROC lpResultCallBack, INTEGER dwData);
__EXTERN INTEGER __STDCALL SendMessageCallbackW (INTEGER hWnd, INTEGER Msg, INTEGER wParam, INTEGER lParam, WinApi_SENDASYNCPROC lpResultCallBack, INTEGER dwData);
__EXTERN INTEGER __STDCALL SendMessageTimeoutA (INTEGER hWnd, INTEGER Msg, INTEGER wParam, INTEGER lParam, SET fuFlags, INTEGER uTimeout, INTEGER *lpdwResult);
__EXTERN INTEGER __STDCALL SendMessageTimeoutA (INTEGER hWnd, INTEGER Msg, INTEGER wParam, INTEGER lParam, SET fuFlags, INTEGER uTimeout, INTEGER *lpdwResult);
__EXTERN INTEGER __STDCALL SendMessageTimeoutW (INTEGER hWnd, INTEGER Msg, INTEGER wParam, INTEGER lParam, SET fuFlags, INTEGER uTimeout, INTEGER *lpdwResult);
__EXTERN INTEGER __STDCALL SendMessageW (INTEGER hWnd, INTEGER Msg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL SendNotifyMessageA (INTEGER hWnd, INTEGER Msg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL SendNotifyMessageA (INTEGER hWnd, INTEGER Msg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL SendNotifyMessageW (INTEGER hWnd, INTEGER Msg, INTEGER wParam, INTEGER lParam);
__EXTERN INTEGER __STDCALL SetAbortProc (INTEGER p0, WinApi_ABORTPROC p1);
__EXTERN INTEGER __STDCALL SetAclInformation (WinApi_ACL *pAcl, INTEGER pAclInformation, INTEGER nAclInformationLength, INTEGER dwAclInformationClass);
__EXTERN INTEGER __STDCALL SetActiveWindow (INTEGER hWnd);
__EXTERN INTEGER __STDCALL SetArcDirection (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL SetBitmapBits (INTEGER p0, INTEGER p1, INTEGER p2);
__EXTERN INTEGER __STDCALL SetBitmapDimensionEx (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_SIZE *p3);
__EXTERN INTEGER __STDCALL SetBkColor (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL SetBkMode (INTEGER p0, INTEGER p1);
__EXTERN SET __STDCALL SetBoundsRect (INTEGER p0, WinApi_RECT *p1, SET p2);
__EXTERN INTEGER __STDCALL SetBrushOrgEx (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_POINT *p3);
__EXTERN INTEGER __STDCALL SetCapture (INTEGER hWnd);
__EXTERN INTEGER __STDCALL SetCaretBlinkTime (INTEGER uMSeconds);
__EXTERN INTEGER __STDCALL SetCaretPos (INTEGER X, INTEGER Y);
__EXTERN INTEGER __STDCALL SetClassLongA (INTEGER hWnd, INTEGER nIndex, INTEGER dwNewLong);
__EXTERN INTEGER __STDCALL SetClassLongA (INTEGER hWnd, INTEGER nIndex, INTEGER dwNewLong);
__EXTERN INTEGER __STDCALL SetClassLongW (INTEGER hWnd, INTEGER nIndex, INTEGER dwNewLong);
__EXTERN SHORTINT __STDCALL SetClassWord (INTEGER hWnd, INTEGER nIndex, SHORTINT wNewWord);
__EXTERN INTEGER __STDCALL SetClipboardData (INTEGER uFormat, INTEGER hMem);
__EXTERN INTEGER __STDCALL SetClipboardViewer (INTEGER hWndNewViewer);
__EXTERN INTEGER __STDCALL SetColorAdjustment (INTEGER p0, WinApi_COLORADJUSTMENT *p1);
__EXTERN INTEGER __STDCALL SetColorSpace (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL SetCommBreak (INTEGER hFile);
__EXTERN INTEGER __STDCALL SetCommConfig (INTEGER hCommDev, WinApi_COMMCONFIG *lpCC, INTEGER dwSize);
__EXTERN INTEGER __STDCALL SetCommMask (INTEGER hFile, SET dwEvtMask);
__EXTERN INTEGER __STDCALL SetCommState (INTEGER hFile, WinApi_DCB *lpDCB);
__EXTERN INTEGER __STDCALL SetCommTimeouts (INTEGER hFile, WinApi_COMMTIMEOUTS *lpCommTimeouts);
__EXTERN INTEGER __STDCALL SetComputerNameA (WinApi_PtrSTR lpComputerName);
__EXTERN INTEGER __STDCALL SetComputerNameA (WinApi_PtrSTR lpComputerName);
__EXTERN INTEGER __STDCALL SetComputerNameW (WinApi_PtrWSTR lpComputerName);
__EXTERN INTEGER __STDCALL SetConsoleActiveScreenBuffer (INTEGER hConsoleOutput);
__EXTERN INTEGER __STDCALL SetConsoleCP (INTEGER wCodePageID);
__EXTERN INTEGER __STDCALL SetConsoleCtrlHandler (WinApi_HANDLER_ROUTINE HandlerRoutine, INTEGER Add);
__EXTERN INTEGER __STDCALL SetConsoleCursorInfo (INTEGER hConsoleOutput, WinApi_CONSOLE_CURSOR_INFO *lpConsoleCursorInfo);
__EXTERN INTEGER __STDCALL SetConsoleCursorPosition (INTEGER hConsoleOutput, WinApi_COORD dwCursorPosition);
__EXTERN INTEGER __STDCALL SetConsoleMode (INTEGER hConsoleHandle, SET dwMode);
__EXTERN INTEGER __STDCALL SetConsoleOutputCP (INTEGER wCodePageID);
__EXTERN INTEGER __STDCALL SetConsoleScreenBufferSize (INTEGER hConsoleOutput, WinApi_COORD dwSize);
__EXTERN INTEGER __STDCALL SetConsoleTextAttribute (INTEGER hConsoleOutput, SHORTINT wAttributes);
__EXTERN INTEGER __STDCALL SetConsoleTitleA (WinApi_PtrSTR lpConsoleTitle);
__EXTERN INTEGER __STDCALL SetConsoleTitleA (WinApi_PtrSTR lpConsoleTitle);
__EXTERN INTEGER __STDCALL SetConsoleTitleW (WinApi_PtrWSTR lpConsoleTitle);
__EXTERN INTEGER __STDCALL SetConsoleWindowInfo (INTEGER hConsoleOutput, INTEGER bAbsolute, WinApi_SMALL_RECT *lpConsoleWindow);
__EXTERN INTEGER __STDCALL SetCurrentDirectoryA (WinApi_PtrSTR lpPathName);
__EXTERN INTEGER __STDCALL SetCurrentDirectoryA (WinApi_PtrSTR lpPathName);
__EXTERN INTEGER __STDCALL SetCurrentDirectoryW (WinApi_PtrWSTR lpPathName);
__EXTERN INTEGER __STDCALL SetCursor (INTEGER hCursor);
__EXTERN INTEGER __STDCALL SetCursorPos (INTEGER X, INTEGER Y);
__EXTERN INTEGER __STDCALL SetDIBColorTable (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_RGBQUAD *p3, INTEGER p3__len);
__EXTERN INTEGER __STDCALL SetDIBits (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4, WinApi_BITMAPINFO *p5, INTEGER p6);
__EXTERN INTEGER __STDCALL SetDIBitsToDevice (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4, INTEGER p5, INTEGER p6, INTEGER p7, INTEGER p8, INTEGER p9, WinApi_BITMAPINFO *p10, INTEGER p11);
__EXTERN void __STDCALL SetDebugErrorLevel (INTEGER dwLevel);
__EXTERN INTEGER __STDCALL SetDefaultCommConfigA (WinApi_PtrSTR lpszName, WinApi_COMMCONFIG *lpCC, INTEGER dwSize);
__EXTERN INTEGER __STDCALL SetDefaultCommConfigA (WinApi_PtrSTR lpszName, WinApi_COMMCONFIG *lpCC, INTEGER dwSize);
__EXTERN INTEGER __STDCALL SetDefaultCommConfigW (WinApi_PtrWSTR lpszName, WinApi_COMMCONFIG *lpCC, INTEGER dwSize);
__EXTERN INTEGER __STDCALL SetDeviceGammaRamp (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL SetDlgItemInt (INTEGER hDlg, INTEGER nIDDlgItem, INTEGER uValue, INTEGER bSigned);
__EXTERN INTEGER __STDCALL SetDlgItemTextA (INTEGER hDlg, INTEGER nIDDlgItem, WinApi_PtrSTR lpString);
__EXTERN INTEGER __STDCALL SetDlgItemTextA (INTEGER hDlg, INTEGER nIDDlgItem, WinApi_PtrSTR lpString);
__EXTERN INTEGER __STDCALL SetDlgItemTextW (INTEGER hDlg, INTEGER nIDDlgItem, WinApi_PtrWSTR lpString);
__EXTERN INTEGER __STDCALL SetDoubleClickTime (INTEGER p0);
__EXTERN INTEGER __STDCALL SetEndOfFile (INTEGER hFile);
__EXTERN INTEGER __STDCALL SetEnhMetaFileBits (INTEGER p0, CHAR *p1);
__EXTERN INTEGER __STDCALL SetEnvironmentVariableA (WinApi_PtrSTR lpName, WinApi_PtrSTR lpValue);
__EXTERN INTEGER __STDCALL SetEnvironmentVariableA (WinApi_PtrSTR lpName, WinApi_PtrSTR lpValue);
__EXTERN INTEGER __STDCALL SetEnvironmentVariableW (WinApi_PtrWSTR lpName, WinApi_PtrWSTR lpValue);
__EXTERN INTEGER __STDCALL SetErrorMode (SET uMode);
__EXTERN INTEGER __STDCALL SetEvent (INTEGER hEvent);
__EXTERN void __STDCALL SetFileApisToANSI (void);
__EXTERN void __STDCALL SetFileApisToOEM (void);
__EXTERN INTEGER __STDCALL SetFileAttributesA (WinApi_PtrSTR lpFileName, SET dwFileAttributes);
__EXTERN INTEGER __STDCALL SetFileAttributesA (WinApi_PtrSTR lpFileName, SET dwFileAttributes);
__EXTERN INTEGER __STDCALL SetFileAttributesW (WinApi_PtrWSTR lpFileName, SET dwFileAttributes);
__EXTERN INTEGER __STDCALL SetFilePointer (INTEGER hFile, INTEGER lDistanceToMove, INTEGER *lpDistanceToMoveHigh, INTEGER dwMoveMethod);
__EXTERN INTEGER __STDCALL SetFilePointerEx (INTEGER hFile, LONGINT liDistanceToMove, LONGINT *lpNewFilePointer, INTEGER dwMoveMethod);
__EXTERN INTEGER __STDCALL SetFileSecurityA (WinApi_PtrSTR lpFileName, SET SecurityInformation, INTEGER pSecurityDescriptor);
__EXTERN INTEGER __STDCALL SetFileSecurityA (WinApi_PtrSTR lpFileName, SET SecurityInformation, INTEGER pSecurityDescriptor);
__EXTERN INTEGER __STDCALL SetFileSecurityW (WinApi_PtrWSTR lpFileName, SET SecurityInformation, INTEGER pSecurityDescriptor);
__EXTERN INTEGER __STDCALL SetFileTime (INTEGER hFile, WinApi_FILETIME *lpCreationTime, WinApi_FILETIME *lpLastAccessTime, WinApi_FILETIME *lpLastWriteTime);
__EXTERN INTEGER __STDCALL SetFocus (INTEGER hWnd);
__EXTERN INTEGER __STDCALL SetForegroundWindow (INTEGER hWnd);
__EXTERN INTEGER __STDCALL SetFormA (INTEGER hPrinter, WinApi_PtrSTR pFormName, INTEGER Level, CHAR *pForm);
__EXTERN INTEGER __STDCALL SetFormA (INTEGER hPrinter, WinApi_PtrSTR pFormName, INTEGER Level, CHAR *pForm);
__EXTERN INTEGER __STDCALL SetFormW (INTEGER hPrinter, WinApi_PtrWSTR pFormName, INTEGER Level, CHAR *pForm);
__EXTERN INTEGER __STDCALL SetGraphicsMode (INTEGER hdc, INTEGER iMode);
__EXTERN INTEGER __STDCALL SetHandleCount (INTEGER uNumber);
__EXTERN INTEGER __STDCALL SetHandleInformation (INTEGER hObject, INTEGER dwMask, SET dwFlags);
__EXTERN INTEGER __STDCALL SetICMMode (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL SetICMProfileA (INTEGER p0, WinApi_PtrSTR p1);
__EXTERN INTEGER __STDCALL SetICMProfileA (INTEGER p0, WinApi_PtrSTR p1);
__EXTERN INTEGER __STDCALL SetICMProfileW (INTEGER p0, WinApi_PtrWSTR p1);
__EXTERN INTEGER __STDCALL SetJobA (INTEGER hPrinter, INTEGER JobId, INTEGER Level, CHAR *pJob, INTEGER Command);
__EXTERN INTEGER __STDCALL SetJobA (INTEGER hPrinter, INTEGER JobId, INTEGER Level, CHAR *pJob, INTEGER Command);
__EXTERN INTEGER __STDCALL SetJobW (INTEGER hPrinter, INTEGER JobId, INTEGER Level, CHAR *pJob, INTEGER Command);
__EXTERN INTEGER __STDCALL SetKernelObjectSecurity (INTEGER Handle, SET SecurityInformation, INTEGER SecurityDescriptor);
__EXTERN INTEGER __STDCALL SetKeyboardState (CHAR *lpKeyState);
__EXTERN void __STDCALL SetLastError (INTEGER dwErrCode);
__EXTERN void __STDCALL SetLastErrorEx (INTEGER dwErrCode, INTEGER dwType);
__EXTERN INTEGER __STDCALL SetLocalTime (WinApi_SYSTEMTIME *lpSystemTime);
__EXTERN INTEGER __STDCALL SetLocaleInfoA (INTEGER Locale, INTEGER LCType, WinApi_PtrSTR lpLCData);
__EXTERN INTEGER __STDCALL SetLocaleInfoA (INTEGER Locale, INTEGER LCType, WinApi_PtrSTR lpLCData);
__EXTERN INTEGER __STDCALL SetLocaleInfoW (INTEGER Locale, INTEGER LCType, WinApi_PtrWSTR lpLCData);
__EXTERN INTEGER __STDCALL SetMailslotInfo (INTEGER hMailslot, INTEGER lReadTimeout);
__EXTERN INTEGER __STDCALL SetMapMode (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL SetMapperFlags (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL SetMenu (INTEGER hWnd, INTEGER hMenu);
__EXTERN INTEGER __STDCALL SetMenuContextHelpId (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL SetMenuDefaultItem (INTEGER hMenu, INTEGER uItem, INTEGER fByPos);
__EXTERN INTEGER __STDCALL SetMenuItemBitmaps (INTEGER hMenu, INTEGER uPosition, SET uFlags, INTEGER hBitmapUnchecked, INTEGER hBitmapChecked);
__EXTERN INTEGER __STDCALL SetMenuItemInfoA (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_MENUITEMINFOA *p3);
__EXTERN INTEGER __STDCALL SetMenuItemInfoA (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_MENUITEMINFOA *p3);
__EXTERN INTEGER __STDCALL SetMenuItemInfoW (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_MENUITEMINFOW *p3);
__EXTERN INTEGER __STDCALL SetMessageExtraInfo (INTEGER lParam);
__EXTERN INTEGER __STDCALL SetMessageQueue (INTEGER cMessagesMax);
__EXTERN INTEGER __STDCALL SetMetaFileBitsEx (INTEGER p0, BYTE *p1);
__EXTERN INTEGER __STDCALL SetMetaRgn (INTEGER p0);
__EXTERN INTEGER __STDCALL SetMiterLimit (INTEGER p0, SHORTREAL p1, SHORTREAL *p2);
__EXTERN INTEGER __STDCALL SetNamedPipeHandleState (INTEGER hNamedPipe, INTEGER *lpMode, INTEGER *lpMaxCollectionCount, INTEGER *lpCollectDataTimeout);
__EXTERN INTEGER __STDCALL SetPaletteEntries (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_PALETTEENTRY *p3);
__EXTERN INTEGER __STDCALL SetParent (INTEGER hWndChild, INTEGER hWndNewParent);
__EXTERN INTEGER __STDCALL SetPixel (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3);
__EXTERN INTEGER __STDCALL SetPixelFormat (INTEGER p0, INTEGER p1, WinApi_PIXELFORMATDESCRIPTOR *p2);
__EXTERN INTEGER __STDCALL SetPixelV (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3);
__EXTERN INTEGER __STDCALL SetPolyFillMode (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL SetPrinterA (INTEGER hPrinter, INTEGER Level, CHAR *pPrinter, INTEGER Command);
__EXTERN INTEGER __STDCALL SetPrinterA (INTEGER hPrinter, INTEGER Level, CHAR *pPrinter, INTEGER Command);
__EXTERN INTEGER __STDCALL SetPrinterDataA (INTEGER hPrinter, WinApi_PtrSTR pValueName, INTEGER Type, CHAR *pData, INTEGER cbData);
__EXTERN INTEGER __STDCALL SetPrinterDataA (INTEGER hPrinter, WinApi_PtrSTR pValueName, INTEGER Type, CHAR *pData, INTEGER cbData);
__EXTERN INTEGER __STDCALL SetPrinterDataW (INTEGER hPrinter, WinApi_PtrWSTR pValueName, INTEGER Type, CHAR *pData, INTEGER cbData);
__EXTERN INTEGER __STDCALL SetPrinterW (INTEGER hPrinter, INTEGER Level, CHAR *pPrinter, INTEGER Command);
__EXTERN INTEGER __STDCALL SetPriorityClass (INTEGER hProcess, INTEGER dwPriorityClass);
__EXTERN INTEGER __STDCALL SetPrivateObjectSecurity (SET SecurityInformation, INTEGER ModificationDescriptor, INTEGER *ObjectsSecurityDescriptor, WinApi_GENERIC_MAPPING *GenericMapping, INTEGER Token);
__EXTERN INTEGER __STDCALL SetProcessAffinityMask (INTEGER hProcess, INTEGER dwProcessAffinityMask);
__EXTERN INTEGER __STDCALL SetProcessShutdownParameters (INTEGER dwLevel, SET dwFlags);
__EXTERN INTEGER __STDCALL SetProcessWindowStation (INTEGER hWinSta);
__EXTERN INTEGER __STDCALL SetProcessWorkingSetSize (INTEGER hProcess, INTEGER dwMinimumWorkingSetSize, INTEGER dwMaximumWorkingSetSize);
__EXTERN INTEGER __STDCALL SetPropA (INTEGER hWnd, WinApi_PtrSTR lpString, INTEGER hData);
__EXTERN INTEGER __STDCALL SetPropA (INTEGER hWnd, WinApi_PtrSTR lpString, INTEGER hData);
__EXTERN INTEGER __STDCALL SetPropW (INTEGER hWnd, WinApi_PtrWSTR lpString, INTEGER hData);
__EXTERN INTEGER __STDCALL SetROP2 (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL SetRect (WinApi_RECT *lprc, INTEGER xLeft, INTEGER yTop, INTEGER xRight, INTEGER yBottom);
__EXTERN INTEGER __STDCALL SetRectEmpty (WinApi_RECT *lprc);
__EXTERN INTEGER __STDCALL SetRectRgn (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4);
__EXTERN INTEGER __STDCALL SetScrollInfo (INTEGER p0, INTEGER p1, WinApi_SCROLLINFO *p2, INTEGER p3);
__EXTERN INTEGER __STDCALL SetScrollPos (INTEGER hWnd, INTEGER nBar, INTEGER nPos, INTEGER bRedraw);
__EXTERN INTEGER __STDCALL SetScrollRange (INTEGER hWnd, INTEGER nBar, INTEGER nMinPos, INTEGER nMaxPos, INTEGER bRedraw);
__EXTERN INTEGER __STDCALL SetSecurityDescriptorDacl (INTEGER pSecurityDescriptor, INTEGER bDaclPresent, WinApi_ACL *pDacl, INTEGER bDaclDefaulted);
__EXTERN INTEGER __STDCALL SetSecurityDescriptorGroup (INTEGER pSecurityDescriptor, INTEGER pGroup, INTEGER bGroupDefaulted);
__EXTERN INTEGER __STDCALL SetSecurityDescriptorOwner (INTEGER pSecurityDescriptor, INTEGER pOwner, INTEGER bOwnerDefaulted);
__EXTERN INTEGER __STDCALL SetSecurityDescriptorSacl (INTEGER pSecurityDescriptor, INTEGER bSaclPresent, WinApi_ACL *pSacl, INTEGER bSaclDefaulted);
__EXTERN INTEGER __STDCALL SetServiceObjectSecurity (INTEGER hService, SET dwSecurityInformation, INTEGER lpSecurityDescriptor);
__EXTERN INTEGER __STDCALL SetServiceStatus (INTEGER hServiceStatus, WinApi_SERVICE_STATUS *lpServiceStatus);
__EXTERN INTEGER __STDCALL SetStdHandle (INTEGER nStdHandle, INTEGER hHandle);
__EXTERN INTEGER __STDCALL SetStretchBltMode (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL SetSysColors (INTEGER cElements, INTEGER *lpaElements, INTEGER *lpaRgbValues);
__EXTERN INTEGER __STDCALL SetSystemCursor (INTEGER hcur, INTEGER id);
__EXTERN INTEGER __STDCALL SetSystemPaletteUse (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL SetSystemPowerState (INTEGER fSuspend, INTEGER fForce);
__EXTERN INTEGER __STDCALL SetSystemTime (WinApi_SYSTEMTIME *lpSystemTime);
__EXTERN INTEGER __STDCALL SetSystemTimeAdjustment (INTEGER dwTimeAdjustment, INTEGER bTimeAdjustmentDisabled);
__EXTERN INTEGER __STDCALL SetTapeParameters (INTEGER hDevice, INTEGER dwOperation, INTEGER lpTapeInformation);
__EXTERN INTEGER __STDCALL SetTapePosition (INTEGER hDevice, INTEGER dwPositionMethod, INTEGER dwPartition, INTEGER dwOffsetLow, INTEGER dwOffsetHigh, INTEGER bImmediate);
__EXTERN SET __STDCALL SetTextAlign (INTEGER p0, SET p1);
__EXTERN INTEGER __STDCALL SetTextCharacterExtra (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL SetTextColor (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL SetTextJustification (INTEGER p0, INTEGER p1, INTEGER p2);
__EXTERN INTEGER __STDCALL SetThreadAffinityMask (INTEGER hThread, INTEGER dwThreadAffinityMask);
__EXTERN INTEGER __STDCALL SetThreadContext (INTEGER hThread, WinApi_CONTEXT *lpContext);
__EXTERN INTEGER __STDCALL SetThreadDesktop (INTEGER hDesktop);
__EXTERN INTEGER __STDCALL SetThreadIdealProcessor (INTEGER hThread, INTEGER dwIdealProcessor);
__EXTERN INTEGER __STDCALL SetThreadLocale (INTEGER Locale);
__EXTERN INTEGER __STDCALL SetThreadPriority (INTEGER hThread, INTEGER nPriority);
__EXTERN INTEGER __STDCALL SetThreadPriorityBoost (INTEGER hThread, INTEGER bDisablePriorityBoost);
__EXTERN INTEGER __STDCALL SetThreadToken (INTEGER *Thread, INTEGER Token);
__EXTERN INTEGER __STDCALL SetTimeZoneInformation (WinApi_TIME_ZONE_INFORMATION *lpTimeZoneInformation);
__EXTERN INTEGER __STDCALL SetTimer (INTEGER hWnd, INTEGER nIDEvent, INTEGER uElapse, WinApi_TIMERPROC lpTimerFunc);
__EXTERN INTEGER __STDCALL SetTokenInformation (INTEGER TokenHandle, INTEGER TokenInformationClass, INTEGER TokenInformation, INTEGER TokenInformationLength);
__EXTERN WinApi_TOP_LEVEL_EXCEPTION_FILTER __STDCALL SetUnhandledExceptionFilter (WinApi_TOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter);
__EXTERN INTEGER __STDCALL SetUserObjectInformationA (INTEGER hObj, INTEGER nIndex, INTEGER pvInfo, INTEGER nLength);
__EXTERN INTEGER __STDCALL SetUserObjectInformationA (INTEGER hObj, INTEGER nIndex, INTEGER pvInfo, INTEGER nLength);
__EXTERN INTEGER __STDCALL SetUserObjectInformationW (INTEGER hObj, INTEGER nIndex, INTEGER pvInfo, INTEGER nLength);
__EXTERN INTEGER __STDCALL SetUserObjectSecurity (INTEGER hObj, INTEGER *pSIRequested, INTEGER pSID);
__EXTERN INTEGER __STDCALL SetViewportExtEx (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_SIZE *p3);
__EXTERN INTEGER __STDCALL SetViewportOrgEx (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_POINT *p3);
__EXTERN INTEGER __STDCALL SetVolumeLabelA (WinApi_PtrSTR lpRootPathName, WinApi_PtrSTR lpVolumeName);
__EXTERN INTEGER __STDCALL SetVolumeLabelA (WinApi_PtrSTR lpRootPathName, WinApi_PtrSTR lpVolumeName);
__EXTERN INTEGER __STDCALL SetVolumeLabelW (WinApi_PtrWSTR lpRootPathName, WinApi_PtrWSTR lpVolumeName);
__EXTERN INTEGER __STDCALL SetWaitableTimer (INTEGER hTimer, LONGINT *lpDueTime, INTEGER lPeriod, WinApi_TIMERAPCROUTINE pfnCompletionRoutine, INTEGER lpArgToCompletionRoutine, INTEGER fResume);
__EXTERN INTEGER __STDCALL SetWinMetaFileBits (INTEGER p0, CHAR *p1, INTEGER p2, WinApi_METAFILEPICT *p3);
__EXTERN INTEGER __STDCALL SetWindowContextHelpId (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL SetWindowExtEx (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_SIZE *p3);
__EXTERN INTEGER __STDCALL SetWindowLongA (INTEGER hWnd, INTEGER nIndex, INTEGER dwNewLong);
__EXTERN INTEGER __STDCALL SetWindowLongA (INTEGER hWnd, INTEGER nIndex, INTEGER dwNewLong);
__EXTERN INTEGER __STDCALL SetWindowLongW (INTEGER hWnd, INTEGER nIndex, INTEGER dwNewLong);
__EXTERN INTEGER __STDCALL SetWindowOrgEx (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_POINT *p3);
__EXTERN INTEGER __STDCALL SetWindowPlacement (INTEGER hWnd, WinApi_WINDOWPLACEMENT *lpwndpl);
__EXTERN INTEGER __STDCALL SetWindowPos (INTEGER hWnd, INTEGER hWndInsertAfter, INTEGER X, INTEGER Y, INTEGER cx, INTEGER cy, SET uFlags);
__EXTERN INTEGER __STDCALL SetWindowRgn (INTEGER hWnd, INTEGER hRgn, INTEGER bRedraw);
__EXTERN INTEGER __STDCALL SetWindowTextA (INTEGER hWnd, WinApi_PtrSTR lpString);
__EXTERN INTEGER __STDCALL SetWindowTextA (INTEGER hWnd, WinApi_PtrSTR lpString);
__EXTERN INTEGER __STDCALL SetWindowTextW (INTEGER hWnd, WinApi_PtrWSTR lpString);
__EXTERN SHORTINT __STDCALL SetWindowWord (INTEGER hWnd, INTEGER nIndex, SHORTINT wNewWord);
__EXTERN WinApi_HOOKPROC __STDCALL SetWindowsHookA (INTEGER nFilterType, WinApi_HOOKPROC pfnFilterProc);
__EXTERN WinApi_HOOKPROC __STDCALL SetWindowsHookA (INTEGER nFilterType, WinApi_HOOKPROC pfnFilterProc);
__EXTERN INTEGER __STDCALL SetWindowsHookExA (INTEGER idHook, WinApi_HOOKPROC lpfn, INTEGER hmod, INTEGER dwThreadId);
__EXTERN INTEGER __STDCALL SetWindowsHookExA (INTEGER idHook, WinApi_HOOKPROC lpfn, INTEGER hmod, INTEGER dwThreadId);
__EXTERN INTEGER __STDCALL SetWindowsHookExW (INTEGER idHook, WinApi_HOOKPROC lpfn, INTEGER hmod, INTEGER dwThreadId);
__EXTERN WinApi_HOOKPROC __STDCALL SetWindowsHookW (INTEGER nFilterType, WinApi_HOOKPROC pfnFilterProc);
__EXTERN INTEGER __STDCALL SetWorldTransform (INTEGER p0, WinApi_XFORM *p1);
__EXTERN INTEGER __STDCALL SetupComm (INTEGER hFile, INTEGER dwInQueue, INTEGER dwOutQueue);
__EXTERN INTEGER __STDCALL ShellAboutA (INTEGER hWnd, WinApi_PtrSTR szApp, WinApi_PtrSTR szOtherStuff, INTEGER hIcon);
__EXTERN INTEGER __STDCALL ShellAboutA (INTEGER hWnd, WinApi_PtrSTR szApp, WinApi_PtrSTR szOtherStuff, INTEGER hIcon);
__EXTERN INTEGER __STDCALL ShellAboutW (INTEGER hWnd, WinApi_PtrWSTR szApp, WinApi_PtrWSTR szOtherStuff, INTEGER hIcon);
__EXTERN INTEGER __STDCALL ShellExecuteA (INTEGER hwnd, WinApi_PtrSTR lpOperation, WinApi_PtrSTR lpFile, WinApi_PtrSTR lpParameters, WinApi_PtrSTR lpDirectory, INTEGER nShowCmd);
__EXTERN INTEGER __STDCALL ShellExecuteA (INTEGER hwnd, WinApi_PtrSTR lpOperation, WinApi_PtrSTR lpFile, WinApi_PtrSTR lpParameters, WinApi_PtrSTR lpDirectory, INTEGER nShowCmd);
__EXTERN INTEGER __STDCALL ShellExecuteW (INTEGER hwnd, WinApi_PtrWSTR lpOperation, WinApi_PtrWSTR lpFile, WinApi_PtrWSTR lpParameters, WinApi_PtrWSTR lpDirectory, INTEGER nShowCmd);
__EXTERN INTEGER __STDCALL ShowCaret (INTEGER hWnd);
__EXTERN INTEGER __STDCALL ShowCursor (INTEGER bShow);
__EXTERN INTEGER __STDCALL ShowOwnedPopups (INTEGER hWnd, INTEGER fShow);
__EXTERN INTEGER __STDCALL ShowScrollBar (INTEGER hWnd, INTEGER wBar, INTEGER bShow);
__EXTERN INTEGER __STDCALL ShowWindow (INTEGER hWnd, INTEGER nCmdShow);
__EXTERN INTEGER __STDCALL ShowWindowAsync (INTEGER hWnd, INTEGER nCmdShow);
__EXTERN INTEGER __STDCALL SignalObjectAndWait (INTEGER hObjectToSignal, INTEGER hObjectToWaitOn, INTEGER dwMilliseconds, INTEGER bAlertable);
__EXTERN INTEGER __STDCALL SizeofResource (INTEGER hModule, INTEGER hResInfo);
__EXTERN void __STDCALL Sleep (INTEGER dwMilliseconds);
__EXTERN INTEGER __STDCALL SleepEx (INTEGER dwMilliseconds, INTEGER bAlertable);
__EXTERN INTEGER __STDCALL StartDocA (INTEGER p0, WinApi_DOCINFOA *p1);
__EXTERN INTEGER __STDCALL StartDocA (INTEGER p0, WinApi_DOCINFOA *p1);
__EXTERN INTEGER __STDCALL StartDocPrinterA (INTEGER hPrinter, INTEGER Level, CHAR *pDocInfo);
__EXTERN INTEGER __STDCALL StartDocPrinterA (INTEGER hPrinter, INTEGER Level, CHAR *pDocInfo);
__EXTERN INTEGER __STDCALL StartDocPrinterW (INTEGER hPrinter, INTEGER Level, CHAR *pDocInfo);
__EXTERN INTEGER __STDCALL StartDocW (INTEGER p0, WinApi_DOCINFOW *p1);
__EXTERN INTEGER __STDCALL StartPage (INTEGER p0);
__EXTERN INTEGER __STDCALL StartPagePrinter (INTEGER hPrinter);
__EXTERN INTEGER __STDCALL StartServiceA (INTEGER hService, INTEGER dwNumServiceArgs, WinApi_PtrSTR *lpServiceArgVectors);
__EXTERN INTEGER __STDCALL StartServiceA (INTEGER hService, INTEGER dwNumServiceArgs, WinApi_PtrSTR *lpServiceArgVectors);
__EXTERN INTEGER __STDCALL StartServiceCtrlDispatcherA (WinApi_SERVICE_TABLE_ENTRYA *lpServiceStartTable);
__EXTERN INTEGER __STDCALL StartServiceCtrlDispatcherA (WinApi_SERVICE_TABLE_ENTRYA *lpServiceStartTable);
__EXTERN INTEGER __STDCALL StartServiceCtrlDispatcherW (WinApi_SERVICE_TABLE_ENTRYW *lpServiceStartTable);
__EXTERN INTEGER __STDCALL StartServiceW (INTEGER hService, INTEGER dwNumServiceArgs, WinApi_PtrWSTR *lpServiceArgVectors);
__EXTERN INTEGER __STDCALL StretchBlt (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4, INTEGER p5, INTEGER p6, INTEGER p7, INTEGER p8, INTEGER p9, INTEGER p10);
__EXTERN INTEGER __STDCALL StretchDIBits (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4, INTEGER p5, INTEGER p6, INTEGER p7, INTEGER p8, INTEGER p9, WinApi_BITMAPINFO *p10, INTEGER p11, INTEGER p12);
__EXTERN INTEGER __STDCALL StrokeAndFillPath (INTEGER p0);
__EXTERN INTEGER __STDCALL StrokePath (INTEGER p0);
__EXTERN INTEGER __STDCALL SubtractRect (WinApi_RECT *lprcDst, WinApi_RECT *lprcSrc1, WinApi_RECT *lprcSrc2);
__EXTERN INTEGER __STDCALL SuspendThread (INTEGER hThread);
__EXTERN INTEGER __STDCALL SwapBuffers (INTEGER p0);
__EXTERN INTEGER __STDCALL SwapMouseButton (INTEGER fSwap);
__EXTERN INTEGER __STDCALL SwitchDesktop (INTEGER hDesktop);
__EXTERN void __STDCALL SwitchToFiber (INTEGER lpFiber);
__EXTERN INTEGER __STDCALL SystemParametersInfoA (INTEGER uiAction, INTEGER uiParam, INTEGER pvParam, INTEGER fWinIni);
__EXTERN INTEGER __STDCALL SystemParametersInfoA (INTEGER uiAction, INTEGER uiParam, INTEGER pvParam, INTEGER fWinIni);
__EXTERN INTEGER __STDCALL SystemParametersInfoW (INTEGER uiAction, INTEGER uiParam, INTEGER pvParam, INTEGER fWinIni);
__EXTERN INTEGER __STDCALL SystemTimeToFileTime (WinApi_SYSTEMTIME *lpSystemTime, WinApi_FILETIME *lpFileTime);
__EXTERN INTEGER __STDCALL SystemTimeToTzSpecificLocalTime (WinApi_TIME_ZONE_INFORMATION *lpTimeZoneInformation, WinApi_SYSTEMTIME *lpUniversalTime, WinApi_SYSTEMTIME *lpLocalTime);
__EXTERN INTEGER __STDCALL TabbedTextOutA (INTEGER hDC, INTEGER X, INTEGER Y, WinApi_PtrSTR lpString, INTEGER nCount, INTEGER nTabPositions, INTEGER *lpnTabStopPositions, INTEGER nTabOrigin);
__EXTERN INTEGER __STDCALL TabbedTextOutA (INTEGER hDC, INTEGER X, INTEGER Y, WinApi_PtrSTR lpString, INTEGER nCount, INTEGER nTabPositions, INTEGER *lpnTabStopPositions, INTEGER nTabOrigin);
__EXTERN INTEGER __STDCALL TabbedTextOutW (INTEGER hDC, INTEGER X, INTEGER Y, WinApi_PtrWSTR lpString, INTEGER nCount, INTEGER nTabPositions, INTEGER *lpnTabStopPositions, INTEGER nTabOrigin);
__EXTERN INTEGER __STDCALL TerminateProcess (INTEGER hProcess, INTEGER uExitCode);
__EXTERN INTEGER __STDCALL TerminateThread (INTEGER hThread, INTEGER dwExitCode);
__EXTERN INTEGER __STDCALL TextOutA (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_PtrSTR p3, INTEGER p4);
__EXTERN INTEGER __STDCALL TextOutA (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_PtrSTR p3, INTEGER p4);
__EXTERN INTEGER __STDCALL TextOutW (INTEGER p0, INTEGER p1, INTEGER p2, WinApi_PtrWSTR p3, INTEGER p4);
__EXTERN SHORTINT __STDCALL TileWindows (INTEGER hwndParent, INTEGER wHow, WinApi_RECT *lpRect, INTEGER cKids, INTEGER *lpKids);
__EXTERN INTEGER __STDCALL TlsAlloc (void);
__EXTERN INTEGER __STDCALL TlsFree (INTEGER dwTlsIndex);
__EXTERN INTEGER __STDCALL TlsGetValue (INTEGER dwTlsIndex);
__EXTERN INTEGER __STDCALL TlsSetValue (INTEGER dwTlsIndex, INTEGER lpTlsValue);
__EXTERN INTEGER __STDCALL ToAscii (INTEGER uVirtKey, INTEGER uScanCode, CHAR *lpKeyState, SHORTINT *lpChar, SET uFlags);
__EXTERN INTEGER __STDCALL ToAsciiEx (INTEGER uVirtKey, INTEGER uScanCode, CHAR *lpKeyState, SHORTINT *lpChar, SET uFlags, INTEGER dwhkl);
__EXTERN INTEGER __STDCALL ToUnicode (INTEGER wVirtKey, INTEGER wScanCode, CHAR *lpKeyState, WinApi_PtrWSTR pwszBuff, INTEGER cchBuff, INTEGER wFlags);
__EXTERN INTEGER __STDCALL ToUnicodeEx (INTEGER wVirtKey, INTEGER wScanCode, CHAR *lpKeyState, WinApi_PtrWSTR pwszBuff, INTEGER cchBuff, INTEGER wFlags, INTEGER dwhkl);
__EXTERN INTEGER __STDCALL TrackPopupMenu (INTEGER hMenu, SET uFlags, INTEGER x, INTEGER y, INTEGER nReserved, INTEGER hWnd, WinApi_RECT *prcRect);
__EXTERN INTEGER __STDCALL TrackPopupMenuEx (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER p4, WinApi_TPMPARAMS *p5);
__EXTERN INTEGER __STDCALL TransactNamedPipe (INTEGER hNamedPipe, INTEGER lpInBuffer, INTEGER nInBufferSize, INTEGER lpOutBuffer, INTEGER nOutBufferSize, INTEGER *lpBytesRead, WinApi_OVERLAPPED *lpOverlapped);
__EXTERN INTEGER __STDCALL TranslateAcceleratorA (INTEGER hWnd, INTEGER hAccTable, WinApi_MSG *lpMsg);
__EXTERN INTEGER __STDCALL TranslateAcceleratorA (INTEGER hWnd, INTEGER hAccTable, WinApi_MSG *lpMsg);
__EXTERN INTEGER __STDCALL TranslateAcceleratorW (INTEGER hWnd, INTEGER hAccTable, WinApi_MSG *lpMsg);
__EXTERN INTEGER __STDCALL TranslateCharsetInfo (INTEGER *lpSrc, WinApi_CHARSETINFO *lpCs, SET dwFlags);
__EXTERN INTEGER __STDCALL TranslateMDISysAccel (INTEGER hWndClient, WinApi_MSG *lpMsg);
__EXTERN INTEGER __STDCALL TranslateMessage (WinApi_MSG *lpMsg);
__EXTERN INTEGER __STDCALL TransmitCommChar (INTEGER hFile, CHAR cChar);
__EXTERN INTEGER __STDCALL TryEnterCriticalSection (WinApi_RTL_CRITICAL_SECTION *lpCriticalSection);
__EXTERN INTEGER __STDCALL UnhandledExceptionFilter (WinApi_EXCEPTION_POINTERS *ExceptionInfo);
__EXTERN INTEGER __STDCALL UnhookWindowsHook (INTEGER nCode, WinApi_HOOKPROC pfnFilterProc);
__EXTERN INTEGER __STDCALL UnhookWindowsHookEx (INTEGER hhk);
__EXTERN INTEGER __STDCALL UnionRect (WinApi_RECT *lprcDst, WinApi_RECT *lprcSrc1, WinApi_RECT *lprcSrc2);
__EXTERN INTEGER __STDCALL UnloadKeyboardLayout (INTEGER hkl);
__EXTERN INTEGER __STDCALL UnlockFile (INTEGER hFile, INTEGER dwFileOffsetLow, INTEGER dwFileOffsetHigh, INTEGER nNumberOfBytesToUnlockLow, INTEGER nNumberOfBytesToUnlockHigh);
__EXTERN INTEGER __STDCALL UnlockFileEx (INTEGER hFile, INTEGER dwReserved, INTEGER nNumberOfBytesToUnlockLow, INTEGER nNumberOfBytesToUnlockHigh, WinApi_OVERLAPPED *lpOverlapped);
__EXTERN INTEGER __STDCALL UnlockServiceDatabase (INTEGER ScLock);
__EXTERN INTEGER __STDCALL UnmapViewOfFile (INTEGER lpBaseAddress);
__EXTERN INTEGER __STDCALL UnpackDDElParam (INTEGER msg, INTEGER lParam, INTEGER *puiLo, INTEGER *puiHi);
__EXTERN INTEGER __STDCALL UnrealizeObject (INTEGER p0);
__EXTERN INTEGER __STDCALL UnregisterClassA (WinApi_PtrSTR lpClassName, INTEGER hInstance);
__EXTERN INTEGER __STDCALL UnregisterClassA (WinApi_PtrSTR lpClassName, INTEGER hInstance);
__EXTERN INTEGER __STDCALL UnregisterClassW (WinApi_PtrWSTR lpClassName, INTEGER hInstance);
__EXTERN INTEGER __STDCALL UnregisterHotKey (INTEGER hWnd, INTEGER id);
__EXTERN INTEGER __STDCALL UpdateColors (INTEGER p0);
__EXTERN INTEGER __STDCALL UpdateResourceA (INTEGER hUpdate, WinApi_PtrSTR lpType, WinApi_PtrSTR lpName, SHORTINT wLanguage, INTEGER lpData, INTEGER cbData);
__EXTERN INTEGER __STDCALL UpdateResourceA (INTEGER hUpdate, WinApi_PtrSTR lpType, WinApi_PtrSTR lpName, SHORTINT wLanguage, INTEGER lpData, INTEGER cbData);
__EXTERN INTEGER __STDCALL UpdateResourceW (INTEGER hUpdate, WinApi_PtrWSTR lpType, WinApi_PtrWSTR lpName, SHORTINT wLanguage, INTEGER lpData, INTEGER cbData);
__EXTERN INTEGER __STDCALL UpdateWindow (INTEGER hWnd);
__EXTERN INTEGER __STDCALL ValidateRect (INTEGER hWnd, WinApi_RECT *lpRect);
__EXTERN INTEGER __STDCALL ValidateRgn (INTEGER hWnd, INTEGER hRgn);
__EXTERN SET __STDCALL VerFindFileA (SET uFlags, WinApi_PtrSTR szFileName, WinApi_PtrSTR szWinDir, WinApi_PtrSTR szAppDir, WinApi_PtrSTR szCurDir, INTEGER *lpuCurDirLen, WinApi_PtrSTR szDestDir, INTEGER *lpuDestDirLen);
__EXTERN SET __STDCALL VerFindFileA (SET uFlags, WinApi_PtrSTR szFileName, WinApi_PtrSTR szWinDir, WinApi_PtrSTR szAppDir, WinApi_PtrSTR szCurDir, INTEGER *lpuCurDirLen, WinApi_PtrSTR szDestDir, INTEGER *lpuDestDirLen);
__EXTERN SET __STDCALL VerFindFileW (SET uFlags, WinApi_PtrWSTR szFileName, WinApi_PtrWSTR szWinDir, WinApi_PtrWSTR szAppDir, WinApi_PtrWSTR szCurDir, INTEGER *lpuCurDirLen, WinApi_PtrWSTR szDestDir, INTEGER *lpuDestDirLen);
__EXTERN SET __STDCALL VerInstallFileA (SET uFlags, WinApi_PtrSTR szSrcFileName, WinApi_PtrSTR szDestFileName, WinApi_PtrSTR szSrcDir, WinApi_PtrSTR szDestDir, WinApi_PtrSTR szCurDir, WinApi_PtrSTR szTmpFile, INTEGER *lpuTmpFileLen);
__EXTERN SET __STDCALL VerInstallFileA (SET uFlags, WinApi_PtrSTR szSrcFileName, WinApi_PtrSTR szDestFileName, WinApi_PtrSTR szSrcDir, WinApi_PtrSTR szDestDir, WinApi_PtrSTR szCurDir, WinApi_PtrSTR szTmpFile, INTEGER *lpuTmpFileLen);
__EXTERN SET __STDCALL VerInstallFileW (SET uFlags, WinApi_PtrWSTR szSrcFileName, WinApi_PtrWSTR szDestFileName, WinApi_PtrWSTR szSrcDir, WinApi_PtrWSTR szDestDir, WinApi_PtrWSTR szCurDir, WinApi_PtrWSTR szTmpFile, INTEGER *lpuTmpFileLen);
__EXTERN INTEGER __STDCALL VerLanguageNameA (INTEGER wLang, WinApi_PtrSTR szLang, INTEGER nSize);
__EXTERN INTEGER __STDCALL VerLanguageNameA (INTEGER wLang, WinApi_PtrSTR szLang, INTEGER nSize);
__EXTERN INTEGER __STDCALL VerLanguageNameW (INTEGER wLang, WinApi_PtrWSTR szLang, INTEGER nSize);
__EXTERN INTEGER __STDCALL VerQueryValueA (INTEGER pBlock, WinApi_PtrSTR lpSubBlock, INTEGER *lplpBuffer, INTEGER *puLen);
__EXTERN INTEGER __STDCALL VerQueryValueA (INTEGER pBlock, WinApi_PtrSTR lpSubBlock, INTEGER *lplpBuffer, INTEGER *puLen);
__EXTERN INTEGER __STDCALL VerQueryValueW (INTEGER pBlock, WinApi_PtrWSTR lpSubBlock, INTEGER *lplpBuffer, INTEGER *puLen);
__EXTERN INTEGER __STDCALL VirtualAlloc (INTEGER lpAddress, INTEGER dwSize, SET flAllocationType, SET flProtect);
__EXTERN INTEGER __STDCALL VirtualAllocEx (INTEGER hProcess, INTEGER lpAddress, INTEGER dwSize, SET flAllocationType, SET flProtect);
__EXTERN INTEGER __STDCALL VirtualFree (INTEGER lpAddress, INTEGER dwSize, SET dwFreeType);
__EXTERN INTEGER __STDCALL VirtualLock (INTEGER lpAddress, INTEGER dwSize);
__EXTERN INTEGER __STDCALL VirtualProtect (INTEGER lpAddress, INTEGER dwSize, SET flNewProtect, INTEGER *lpflOldProtect);
__EXTERN INTEGER __STDCALL VirtualProtectEx (INTEGER hProcess, INTEGER lpAddress, INTEGER dwSize, SET flNewProtect, INTEGER *lpflOldProtect);
__EXTERN INTEGER __STDCALL VirtualQuery (INTEGER lpAddress, WinApi_MEMORY_BASIC_INFORMATION *lpBuffer, INTEGER dwLength);
__EXTERN INTEGER __STDCALL VirtualQueryEx (INTEGER hProcess, INTEGER lpAddress, WinApi_MEMORY_BASIC_INFORMATION *lpBuffer, INTEGER dwLength);
__EXTERN INTEGER __STDCALL VirtualUnlock (INTEGER lpAddress, INTEGER dwSize);
__EXTERN SHORTINT __STDCALL VkKeyScanA (CHAR ch);
__EXTERN SHORTINT __STDCALL VkKeyScanA (CHAR ch);
__EXTERN SHORTINT __STDCALL VkKeyScanExA (CHAR ch, INTEGER dwhkl);
__EXTERN SHORTINT __STDCALL VkKeyScanExA (CHAR ch, INTEGER dwhkl);
__EXTERN SHORTINT __STDCALL VkKeyScanExW (LONGCHAR ch, INTEGER dwhkl);
__EXTERN SHORTINT __STDCALL VkKeyScanW (LONGCHAR ch);
__EXTERN INTEGER __STDCALL WaitCommEvent (INTEGER hFile, SET *lpEvtMask, WinApi_OVERLAPPED *lpOverlapped);
__EXTERN INTEGER __STDCALL WaitForInputIdle (INTEGER hProcess, INTEGER dwMilliseconds);
__EXTERN INTEGER __STDCALL WaitForMultipleObjects (INTEGER nCount, INTEGER *lpHandles, INTEGER bWaitAll, INTEGER dwMilliseconds);
__EXTERN INTEGER __STDCALL WaitForMultipleObjectsEx (INTEGER nCount, INTEGER *lpHandles, INTEGER bWaitAll, INTEGER dwMilliseconds, INTEGER bAlertable);
__EXTERN INTEGER __STDCALL WaitForPrinterChange (INTEGER hPrinter, SET Flags);
__EXTERN INTEGER __STDCALL WaitForSingleObject (INTEGER hHandle, INTEGER dwMilliseconds);
__EXTERN INTEGER __STDCALL WaitForSingleObjectEx (INTEGER hHandle, INTEGER dwMilliseconds, INTEGER bAlertable);
__EXTERN INTEGER __STDCALL WaitMessage (void);
__EXTERN INTEGER __STDCALL WaitNamedPipeA (WinApi_PtrSTR lpNamedPipeName, INTEGER nTimeOut);
__EXTERN INTEGER __STDCALL WaitNamedPipeA (WinApi_PtrSTR lpNamedPipeName, INTEGER nTimeOut);
__EXTERN INTEGER __STDCALL WaitNamedPipeW (WinApi_PtrWSTR lpNamedPipeName, INTEGER nTimeOut);
__EXTERN INTEGER __STDCALL WideCharToMultiByte (INTEGER CodePage, SET dwFlags, WinApi_PtrWSTR lpWideCharStr, INTEGER cchWideChar, WinApi_PtrSTR lpMultiByteStr, INTEGER cchMultiByte, WinApi_PtrSTR lpDefaultChar, INTEGER *lpUsedDefaultChar);
__EXTERN INTEGER __STDCALL WidenPath (INTEGER p0);
__EXTERN INTEGER __STDCALL WinExec (WinApi_PtrSTR lpCmdLine, INTEGER uCmdShow);
__EXTERN INTEGER __STDCALL WinHelpA (INTEGER hWndMain, WinApi_PtrSTR lpszHelp, INTEGER uCommand, INTEGER dwData);
__EXTERN INTEGER __STDCALL WinHelpA (INTEGER hWndMain, WinApi_PtrSTR lpszHelp, INTEGER uCommand, INTEGER dwData);
__EXTERN INTEGER __STDCALL WinHelpW (INTEGER hWndMain, WinApi_PtrWSTR lpszHelp, INTEGER uCommand, INTEGER dwData);
__EXTERN INTEGER __STDCALL WindowFromDC (INTEGER hDC);
__EXTERN INTEGER __STDCALL WindowFromPoint (WinApi_POINT Point);
__EXTERN INTEGER __STDCALL WriteConsoleA (INTEGER hConsoleOutput, INTEGER lpBuffer, INTEGER nNumberOfCharsToWrite, INTEGER *lpNumberOfCharsWritten, INTEGER lpReserved);
__EXTERN INTEGER __STDCALL WriteConsoleA (INTEGER hConsoleOutput, INTEGER lpBuffer, INTEGER nNumberOfCharsToWrite, INTEGER *lpNumberOfCharsWritten, INTEGER lpReserved);
__EXTERN INTEGER __STDCALL WriteConsoleOutputAttribute (INTEGER hConsoleOutput, SHORTINT *lpAttribute, INTEGER nLength, WinApi_COORD dwWriteCoord, INTEGER *lpNumberOfAttrsWritten);
__EXTERN INTEGER __STDCALL WriteConsoleOutputCharacterA (INTEGER hConsoleOutput, WinApi_PtrSTR lpCharacter, INTEGER nLength, WinApi_COORD dwWriteCoord, INTEGER *lpNumberOfCharsWritten);
__EXTERN INTEGER __STDCALL WriteConsoleOutputCharacterA (INTEGER hConsoleOutput, WinApi_PtrSTR lpCharacter, INTEGER nLength, WinApi_COORD dwWriteCoord, INTEGER *lpNumberOfCharsWritten);
__EXTERN INTEGER __STDCALL WriteConsoleOutputCharacterW (INTEGER hConsoleOutput, WinApi_PtrWSTR lpCharacter, INTEGER nLength, WinApi_COORD dwWriteCoord, INTEGER *lpNumberOfCharsWritten);
__EXTERN INTEGER __STDCALL WriteConsoleW (INTEGER hConsoleOutput, INTEGER lpBuffer, INTEGER nNumberOfCharsToWrite, INTEGER *lpNumberOfCharsWritten, INTEGER lpReserved);
__EXTERN INTEGER __STDCALL WriteFile (INTEGER hFile, INTEGER lpBuffer, INTEGER nNumberOfBytesToWrite, INTEGER *lpNumberOfBytesWritten, WinApi_OVERLAPPED *lpOverlapped);
__EXTERN INTEGER __STDCALL WriteFileEx (INTEGER hFile, INTEGER lpBuffer, INTEGER nNumberOfBytesToWrite, WinApi_OVERLAPPED *lpOverlapped, WinApi_OVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine);
__EXTERN INTEGER __STDCALL WritePrinter (INTEGER hPrinter, INTEGER pBuf, INTEGER cbBuf, INTEGER *pcWritten);
__EXTERN INTEGER __STDCALL WritePrivateProfileSectionA (WinApi_PtrSTR lpAppName, WinApi_PtrSTR lpString, WinApi_PtrSTR lpFileName);
__EXTERN INTEGER __STDCALL WritePrivateProfileSectionA (WinApi_PtrSTR lpAppName, WinApi_PtrSTR lpString, WinApi_PtrSTR lpFileName);
__EXTERN INTEGER __STDCALL WritePrivateProfileSectionW (WinApi_PtrWSTR lpAppName, WinApi_PtrWSTR lpString, WinApi_PtrWSTR lpFileName);
__EXTERN INTEGER __STDCALL WritePrivateProfileStringA (WinApi_PtrSTR lpAppName, WinApi_PtrSTR lpKeyName, WinApi_PtrSTR lpString, WinApi_PtrSTR lpFileName);
__EXTERN INTEGER __STDCALL WritePrivateProfileStringA (WinApi_PtrSTR lpAppName, WinApi_PtrSTR lpKeyName, WinApi_PtrSTR lpString, WinApi_PtrSTR lpFileName);
__EXTERN INTEGER __STDCALL WritePrivateProfileStringW (WinApi_PtrWSTR lpAppName, WinApi_PtrWSTR lpKeyName, WinApi_PtrWSTR lpString, WinApi_PtrWSTR lpFileName);
__EXTERN INTEGER __STDCALL WritePrivateProfileStructA (WinApi_PtrSTR lpszSection, WinApi_PtrSTR lpszKey, INTEGER lpStruct, INTEGER uSizeStruct, WinApi_PtrSTR szFile);
__EXTERN INTEGER __STDCALL WritePrivateProfileStructA (WinApi_PtrSTR lpszSection, WinApi_PtrSTR lpszKey, INTEGER lpStruct, INTEGER uSizeStruct, WinApi_PtrSTR szFile);
__EXTERN INTEGER __STDCALL WritePrivateProfileStructW (WinApi_PtrWSTR lpszSection, WinApi_PtrWSTR lpszKey, INTEGER lpStruct, INTEGER uSizeStruct, WinApi_PtrWSTR szFile);
__EXTERN INTEGER __STDCALL WriteProcessMemory (INTEGER hProcess, INTEGER lpBaseAddress, INTEGER lpBuffer, INTEGER nSize, INTEGER *lpNumberOfBytesWritten);
__EXTERN INTEGER __STDCALL WriteProfileSectionA (WinApi_PtrSTR lpAppName, WinApi_PtrSTR lpString);
__EXTERN INTEGER __STDCALL WriteProfileSectionA (WinApi_PtrSTR lpAppName, WinApi_PtrSTR lpString);
__EXTERN INTEGER __STDCALL WriteProfileSectionW (WinApi_PtrWSTR lpAppName, WinApi_PtrWSTR lpString);
__EXTERN INTEGER __STDCALL WriteProfileStringA (WinApi_PtrSTR lpAppName, WinApi_PtrSTR lpKeyName, WinApi_PtrSTR lpString);
__EXTERN INTEGER __STDCALL WriteProfileStringA (WinApi_PtrSTR lpAppName, WinApi_PtrSTR lpKeyName, WinApi_PtrSTR lpString);
__EXTERN INTEGER __STDCALL WriteProfileStringW (WinApi_PtrWSTR lpAppName, WinApi_PtrWSTR lpKeyName, WinApi_PtrWSTR lpString);
__EXTERN INTEGER __STDCALL WriteTapemark (INTEGER hDevice, INTEGER dwTapemarkType, INTEGER dwTapemarkCount, INTEGER bImmediate);
__EXTERN INTEGER __STDCALL _hread (INTEGER hFile, INTEGER lpBuffer, INTEGER lBytes);
__EXTERN INTEGER __STDCALL _hwrite (INTEGER hFile, WinApi_PtrSTR lpBuffer, INTEGER lBytes);
__EXTERN INTEGER __STDCALL _lclose (INTEGER hFile);
__EXTERN INTEGER __STDCALL _lcreat (WinApi_PtrSTR lpPathName, INTEGER iAttribute);
__EXTERN INTEGER __STDCALL _llseek (INTEGER hFile, INTEGER lOffset, INTEGER iOrigin);
__EXTERN INTEGER __STDCALL _lopen (WinApi_PtrSTR lpPathName, INTEGER iReadWrite);
__EXTERN INTEGER __STDCALL _lread (INTEGER hFile, INTEGER lpBuffer, INTEGER uBytes);
__EXTERN INTEGER __STDCALL _lwrite (INTEGER hFile, WinApi_PtrSTR lpBuffer, INTEGER uBytes);
__EXTERN void __STDCALL keybd_event (CHAR bVk, CHAR bScan, SET dwFlags, INTEGER dwExtraInfo);
__EXTERN WinApi_PtrSTR __STDCALL lstrcatA (WinApi_PtrSTR lpString1, WinApi_PtrSTR lpString2);
__EXTERN WinApi_PtrSTR __STDCALL lstrcatA (WinApi_PtrSTR lpString1, WinApi_PtrSTR lpString2);
__EXTERN WinApi_PtrWSTR __STDCALL lstrcatW (WinApi_PtrWSTR lpString1, WinApi_PtrWSTR lpString2);
__EXTERN INTEGER __STDCALL lstrcmpA (WinApi_PtrSTR lpString1, WinApi_PtrSTR lpString2);
__EXTERN INTEGER __STDCALL lstrcmpA (WinApi_PtrSTR lpString1, WinApi_PtrSTR lpString2);
__EXTERN INTEGER __STDCALL lstrcmpW (WinApi_PtrWSTR lpString1, WinApi_PtrWSTR lpString2);
__EXTERN INTEGER __STDCALL lstrcmpiA (WinApi_PtrSTR lpString1, WinApi_PtrSTR lpString2);
__EXTERN INTEGER __STDCALL lstrcmpiA (WinApi_PtrSTR lpString1, WinApi_PtrSTR lpString2);
__EXTERN INTEGER __STDCALL lstrcmpiW (WinApi_PtrWSTR lpString1, WinApi_PtrWSTR lpString2);
__EXTERN WinApi_PtrSTR __STDCALL lstrcpyA (WinApi_PtrSTR lpString1, WinApi_PtrSTR lpString2);
__EXTERN WinApi_PtrSTR __STDCALL lstrcpyA (WinApi_PtrSTR lpString1, WinApi_PtrSTR lpString2);
__EXTERN WinApi_PtrWSTR __STDCALL lstrcpyW (WinApi_PtrWSTR lpString1, WinApi_PtrWSTR lpString2);
__EXTERN WinApi_PtrSTR __STDCALL lstrcpynA (WinApi_PtrSTR lpString1, WinApi_PtrSTR lpString2, INTEGER iMaxLength);
__EXTERN WinApi_PtrSTR __STDCALL lstrcpynA (WinApi_PtrSTR lpString1, WinApi_PtrSTR lpString2, INTEGER iMaxLength);
__EXTERN WinApi_PtrWSTR __STDCALL lstrcpynW (WinApi_PtrWSTR lpString1, WinApi_PtrWSTR lpString2, INTEGER iMaxLength);
__EXTERN INTEGER __STDCALL lstrlenA (WinApi_PtrSTR lpString);
__EXTERN INTEGER __STDCALL lstrlenA (WinApi_PtrSTR lpString);
__EXTERN INTEGER __STDCALL lstrlenW (WinApi_PtrWSTR lpString);
__EXTERN void __STDCALL mouse_event (SET dwFlags, INTEGER dx, INTEGER dy, INTEGER cButtons, INTEGER dwExtraInfo);
__EXTERN INTEGER __STDCALL wglCopyContext (INTEGER p0, INTEGER p1, INTEGER p2);
__EXTERN INTEGER __STDCALL wglCreateContext (INTEGER p0);
__EXTERN INTEGER __STDCALL wglCreateLayerContext (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL wglDeleteContext (INTEGER p0);
__EXTERN INTEGER __STDCALL wglDescribeLayerPlane (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, WinApi_LAYERPLANEDESCRIPTOR *p4);
__EXTERN INTEGER __STDCALL wglGetCurrentContext (void);
__EXTERN INTEGER __STDCALL wglGetCurrentDC (void);
__EXTERN INTEGER __STDCALL wglGetLayerPaletteEntries (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER *p4);
__EXTERN WinApi_ROC __STDCALL wglGetProcAddress (WinApi_PtrSTR p0);
__EXTERN INTEGER __STDCALL wglMakeCurrent (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL wglRealizeLayerPalette (INTEGER p0, INTEGER p1, INTEGER p2);
__EXTERN INTEGER __STDCALL wglSetLayerPaletteEntries (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, INTEGER *p4);
__EXTERN INTEGER __STDCALL wglShareLists (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL wglSwapLayerBuffers (INTEGER p0, INTEGER p1);
__EXTERN INTEGER __STDCALL wglUseFontBitmapsA (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3);
__EXTERN INTEGER __STDCALL wglUseFontBitmapsA (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3);
__EXTERN INTEGER __STDCALL wglUseFontBitmapsW (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3);
__EXTERN INTEGER __STDCALL wglUseFontOutlinesA (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, SHORTREAL p4, SHORTREAL p5, INTEGER p6, WinApi_GLYPHMETRICSFLOAT *p7);
__EXTERN INTEGER __STDCALL wglUseFontOutlinesA (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, SHORTREAL p4, SHORTREAL p5, INTEGER p6, WinApi_GLYPHMETRICSFLOAT *p7);
__EXTERN INTEGER __STDCALL wglUseFontOutlinesW (INTEGER p0, INTEGER p1, INTEGER p2, INTEGER p3, SHORTREAL p4, SHORTREAL p5, INTEGER p6, WinApi_GLYPHMETRICSFLOAT *p7);
__EXTERN INTEGER wsprintfA (WinApi_PtrSTR p0, WinApi_PtrSTR p1);
__EXTERN INTEGER wsprintfA (WinApi_PtrSTR p0, WinApi_PtrSTR p1);
__EXTERN INTEGER wsprintfW (WinApi_PtrWSTR p0, WinApi_PtrWSTR p1);
__EXTERN INTEGER __STDCALL wvsprintfA (WinApi_PtrSTR p0, WinApi_PtrSTR p1, WinApi_PtrSTR arglist);
__EXTERN INTEGER __STDCALL wvsprintfA (WinApi_PtrSTR p0, WinApi_PtrSTR p1, WinApi_PtrSTR arglist);
__EXTERN INTEGER __STDCALL wvsprintfW (WinApi_PtrWSTR p0, WinApi_PtrWSTR p1, WinApi_PtrSTR arglist);
#define WinApi__init()

#define WinApi_CmdLine()  __lpCmdLine
#define WinApi_CmdShow()  __nCmdShow
#define WinApi_Instance()  __hInstance
#define WinApi_PrevInstance()  __hPrevInstance

#endif

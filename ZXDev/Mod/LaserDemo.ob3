MODULE LaserDemo;

(* Laser Basic Demo for Sinclair ZX Spectrum, 48 Kb.  *)
(* Copyright (C) 2012 Oleg N. Cher, VEDANTA software. *)

IMPORT L := Laser, B := Basic;

(* Пример взят из книги "Как написать игру для ZX Spectrum" *)

(*
10 BORDER 0: PAPER 0:INK 5
20 CLS: LET S=-2
30 FOR N=7 TO 10
40 .R0W=5:.C0L=S:.SPN=N
50 .PTBL
60 PAUSE 5
70 NEXT N
80 LET S=S+2
90 IF S<32 THEN GO TO 30
*)

CONST
  ChudikSizeBytes = ( 5(*hdr*) + 8*20(*data*) + 20(*attrs*) );

VAR
  chudik: ADRINT; n, s: INT8;

BEGIN (*$MAIN*)
  B.Init;
  B.DEFDATA(chudik, 4(*phases*) * ChudikSizeBytes + 1 (*null*) );
  B.DATA5(7, ChudikSizeBytes-2, 0, 5, 4); (* No, Offset, Width, Length *)
  (* Sprite 7, Phase 1, Pixels: *)
  B.DATA8(000H,000H,000H,000H,000H,000H,000H,000H);
  B.DATA8(000H,000H,000H,000H,000H,000H,000H,000H);
  B.DATA8(000H,000H,000H,000H,000H,000H,000H,000H);
  B.DATA8(000H,000H,000H,000H,000H,000H,000H,000H);
  B.DATA8(000H,000H,000H,000H,000H,000H,000H,000H);
  B.DATA8(000H,030H,030H,000H,000H,000H,048H,048H);
  B.DATA8(000H,000H,000H,048H,048H,000H,000H,000H);
  B.DATA8(030H,030H,000H,000H,000H,010H,020H,000H);
  B.DATA8(000H,000H,010H,040H,000H,000H,000H,010H);
  B.DATA8(080H,000H,000H,000H,009H,000H,000H,000H);
  B.DATA8(000H,007H,080H,000H,000H,000H,00CH,07CH);
  B.DATA8(000H,000H,000H,019H,07EH,000H,000H,000H);
  B.DATA8(01CH,0FEH,000H,000H,000H,01FH,0F0H,000H);
  B.DATA8(000H,000H,01FH,080H,000H,000H,000H,00FH);
  B.DATA8(000H,000H,000H,000H,002H,000H,000H,000H);
  B.DATA8(000H,01FH,080H,000H,000H,000H,03FH,0C0H);
  B.DATA8(000H,000H,000H,07FH,0C0H,000H,000H,000H);
  B.DATA8(07FH,000H,000H,000H,000H,07EH,000H,000H);
  B.DATA8(000H,000H,060H,000H,000H,000H,000H,0F0H);
  B.DATA8(0E0H,000H,000H,000H,07FH,080H,000H,000H);
  (* Sprite 7, Phase 1, Attrs: *)
  B.DATA8(046H,046H,046H,046H,046H,046H,046H,046H);
  B.DATA8(046H,046H,046H,046H,046H,046H,046H,046H);
  B.DATA4(046H,046H,046H,046H);

  B.DATA5(8, ChudikSizeBytes-2, 0, 5, 4);
  (* Sprite 8, Phase 2, Pixels: *)
  B.DATA8(000H,000H,000H,000H,000H,000H,000H,000H);
  B.DATA8(000H,000H,000H,000H,000H,000H,000H,000H);
  B.DATA8(018H,000H,000H,000H,000H,024H,006H,000H);
  B.DATA8(000H,000H,024H,009H,000H,000H,000H,018H);
  B.DATA8(009H,000H,000H,000H,004H,006H,000H,000H);
  B.DATA8(000H,002H,008H,000H,000H,000H,003H,0E0H);
  B.DATA8(000H,000H,000H,007H,018H,000H,000H,000H);
  B.DATA8(00EH,05EH,000H,000H,000H,00FH,03FH,000H);
  B.DATA8(000H,000H,00FH,0FFH,080H,000H,000H,00FH);
  B.DATA8(0E7H,080H,000H,000H,007H,0C3H,000H,000H);
  B.DATA8(000H,001H,080H,000H,000H,000H,00FH,0F0H);
  B.DATA8(000H,000H,000H,01FH,0FCH,000H,000H,000H);
  B.DATA8(01FH,0FEH,000H,000H,000H,007H,0FCH,000H);
  B.DATA8(000H,000H,007H,038H,000H,000H,000H,01EH);
  B.DATA8(000H,000H,000H,000H,018H,000H,000H,000H);
  B.DATA8(000H,03FH,080H,000H,000H,000H,000H,060H);
  B.DATA8(000H,000H,000H,000H,030H,000H,000H,000H);
  B.DATA8(000H,018H,000H,000H,000H,000H,000H,000H);
  B.DATA8(000H,000H,000H,000H,000H,000H,000H,000H);
  B.DATA8(000H,000H,000H,000H,000H,000H,000H,000H);
  (* Sprite 8, Phase 2, Attrs: *)
  B.DATA8(046H,046H,046H,046H,046H,046H,046H,046H);
  B.DATA8(046H,046H,046H,046H,046H,046H,046H,046H);
  B.DATA4(046H,046H,046H,046H);

  B.DATA5(9, ChudikSizeBytes-2, 0, 5, 4);
  (* Sprite 9, Phase 3, Pixels: *)
  B.DATA8(000H,003H,000H,030H,000H,000H,004H,0E1H);
  B.DATA8(0C8H,000H,000H,004H,092H,048H,000H,000H);
  B.DATA8(003H,00AH,030H,000H,000H,000H,03EH,000H);
  B.DATA8(000H,000H,000H,071H,0F0H,000H,000H,000H);
  B.DATA8(0E5H,0F8H,000H,000H,000H,0F3H,0F8H,000H);
  B.DATA8(000H,000H,0FFH,0E0H,000H,000H,000H,0FEH);
  B.DATA8(000H,000H,000H,000H,07CH,000H,000H,000H);
  B.DATA8(000H,018H,000H,000H,000H,000H,0FFH,000H);
  B.DATA8(000H,000H,001H,0FFH,0C0H,000H,000H,001H);
  B.DATA8(0FFH,0E0H,000H,000H,000H,07FH,0C0H,000H);
  B.DATA8(000H,000H,061H,080H,000H,000H,001H,0C0H);
  B.DATA8(000H,000H,000H,001H,080H,000H,000H,000H);
  B.DATA8(003H,0FFH,080H,000H,000H,000H,000H,000H);
  B.DATA8(000H,000H,000H,000H,000H,000H,000H,000H);
  B.DATA8(000H,000H,000H,000H,000H,000H,000H,000H);
  B.DATA8(000H,000H,000H,000H,000H,000H,000H,000H);
  B.DATA8(000H,000H,000H,000H,000H,000H,000H,000H);
  B.DATA8(000H,000H,000H,000H,000H,000H,000H,000H);
  B.DATA8(000H,000H,000H,000H,000H,000H,000H,000H);
  B.DATA8(000H,000H,000H,000H,000H,000H,000H,000H);
  (* Sprite 9, Phase 3, Attrs: *)
  B.DATA8(046H,046H,046H,046H,046H,046H,046H,046H);
  B.DATA8(046H,046H,046H,046H,046H,046H,046H,046H);
  B.DATA4(046H,046H,046H,046H);

  B.DATA5(10, ChudikSizeBytes-2, 0, 5, 4);
  (* Sprite 10, Phase 4, Pixels: *)
  B.DATA8(000H,000H,000H,000H,000H,000H,000H,000H);
  B.DATA8(000H,000H,000H,000H,000H,000H,000H,000H);
  B.DATA8(000H,000H,000H,000H,000H,000H,006H,080H);
  B.DATA8(000H,000H,000H,009H,040H,000H,000H,000H);
  B.DATA8(009H,040H,000H,000H,000H,006H,080H,000H);
  B.DATA8(000H,000H,002H,000H,000H,000H,000H,002H);
  B.DATA8(000H,000H,000H,000H,002H,006H,000H,000H);
  B.DATA8(000H,001H,01FH,000H,000H,000H,007H,0FFH);
  B.DATA8(000H,000H,000H,00EH,03EH,000H,000H,000H);
  B.DATA8(01CH,0BCH,000H,000H,000H,01EH,070H,000H);
  B.DATA8(000H,000H,01FH,0C0H,000H,000H,000H,01FH);
  B.DATA8(0C0H,000H,000H,000H,00FH,080H,000H,000H);
  B.DATA8(000H,003H,000H,000H,000H,000H,00FH,0C0H);
  B.DATA8(000H,000H,000H,01FH,0E0H,000H,000H,000H);
  B.DATA8(01FH,0E0H,000H,000H,000H,007H,0E0H,000H);
  B.DATA8(000H,000H,00EH,0C4H,000H,000H,000H,01CH);
  B.DATA8(018H,000H,000H,000H,01CH,060H,000H,000H);
  B.DATA8(000H,00FH,080H,000H,000H,000H,000H,000H);
  B.DATA8(000H,000H,000H,000H,000H,000H,000H,000H);
  B.DATA8(000H,000H,000H,000H,000H,000H,000H,000H);
  (* Sprite 10, Phase 4, Attrs: *)
  B.DATA8(046H,046H,046H,046H,046H,046H,046H,046H);
  B.DATA8(046H,046H,046H,046H,046H,046H,046H,046H);
  B.DATA4(046H,046H,046H,046H);
  B.DATA1(0);

  L.InitSpritesEx(chudik, 4(*phases*) * ChudikSizeBytes);

  B.BORDER(B.Black); B.PAPER(B.Black); B.CLS;
  FOR s := -2 TO 30 BY 2 DO
    FOR n := 7 TO 10 DO L.PTBL(s, 5, n); B.PAUSE(5) END;
  END;
  B.Quit;

END LaserDemo.

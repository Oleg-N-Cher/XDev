(* Copyright (C) 2012-2023 Oleg N. Cher, VEDAsoft Oberon Club *)
(* http://zx.oberon.org *)

MODULE XDevMisc;
IMPORT
	SYSTEM, WinApi;

PROCEDURE Is64BitWindows* (): BOOLEAN;
CONST
	False = 0;
TYPE
	Bool = WinApi.BOOL;
	Handle = WinApi.HANDLE;
	ISWOW64PROCESS = PROCEDURE(hProcess: Handle; OUT Wow64Process: Bool): Bool;
VAR
	IsWow64Process: ISWOW64PROCESS; wow64Process: Bool;
BEGIN
	IsWow64Process := SYSTEM.VAL(ISWOW64PROCESS, WinApi.GetProcAddress(
		WinApi.GetModuleHandle("Kernel32"), "IsWow64Process"));
	RETURN (IsWow64Process # NIL)
		& (IsWow64Process(WinApi.GetCurrentProcess(), wow64Process) # False)
		& (wow64Process # False)
END Is64BitWindows;

PROCEDURE DirectoryExists* (IN dirName: ARRAY OF CHAR): BOOLEAN;
CONST
	INVALID_FILE_ATTRIBUTES = -1;
VAR
	dwAttrib: INTEGER;
BEGIN
	dwAttrib := WinApi.GetFileAttributesW(dirName);
  RETURN (dwAttrib # INVALID_FILE_ATTRIBUTES) (* wrong path! *)
		& (BITS(dwAttrib) * WinApi.FILE_ATTRIBUTE_DIRECTORY # {})
END DirectoryExists;

(* GetCurrentDir returns the current directory the program is using. *)

PROCEDURE GetCurrentDir* (OUT curdir: ARRAY OF CHAR): BOOLEAN;
BEGIN
  RETURN WinApi.GetCurrentDirectoryW(LEN(curdir), curdir) > 0
END GetCurrentDir;

PROCEDURE SetCurrentDir* (IN curdir: ARRAY OF CHAR): BOOLEAN;
BEGIN
  RETURN WinApi.SetCurrentDirectoryW(curdir) # 0
END SetCurrentDir;

PROCEDURE SetEnv* (IN name, val: ARRAY OF CHAR);
BEGIN
  SYSTEM.PUTREG(0,
    WinApi.SetEnvironmentVariableW(name, val)
  )
END SetEnv;

END XDevMisc.
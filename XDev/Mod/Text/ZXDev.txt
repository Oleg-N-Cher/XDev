(* Copyright (C) 2012-2016 Oleg N. Cher, VEDAsoft Oberon Club *)
(* http://zx.oberon2.ru *)

MODULE XDevZXDev;

IMPORT
	Dialog, Controllers, Cmd := XDevCmd, Files, HostFiles, StdCmds,
	Strings, TextModels, TextViews, Windows, XDevMisc;

CONST
	Config = "Config.pzx"; ConfigExt = "pzx";

VAR
	MainMod*: ARRAY 40 OF CHAR;
	CodeAdr*, DataAdr*: ARRAY 9 OF CHAR;
	Options*, Modules*, Include*, Libraries*, OfrontPar*: ARRAY 256 OF CHAR;
	Target*, str: ARRAY 7 OF CHAR;
	Clean*, Start*, Pause*: BOOLEAN;

PROCEDURE GetSubsysNameByDir (IN subsysdir: ARRAY OF CHAR; OUT name: ARRAY OF CHAR);
VAR
  n, pos: INTEGER;
BEGIN
	pos := 0;
	FOR n := 0 TO LEN(subsysdir$)-2 DO
		IF (subsysdir[n] = "/") OR (subsysdir[n] = "\") THEN pos := n END;
	END;
	Strings.Extract(subsysdir, pos+1, LEN(subsysdir$)-pos-2, name);
END GetSubsysNameByDir;

PROCEDURE LoadProjectSettings*;
VAR
	t: TextModels.Model; w: Windows.Window; dir: Files.Name; pos: INTEGER;
BEGIN
	Cmd.Open;
	(* Try to find exact file name of current opened document: *)
	t := TextViews.FocusText();
	IF t # NIL THEN
		w := Windows.dir.Focus(Controllers.targetPath);
		IF (w # NIL) & (w.loc # NIL) & (w.name # "") THEN (* File name found. *)
			Cmd.GetSubsysDirByLocator(w.loc, dir);
			Strings.Find(dir, "/XDev/", 0, pos);
			IF pos = -1 THEN
				IF ~ Cmd.Exists(w.loc, Config) THEN dir := dir + "Bin" END;
				Cmd.MapStringTxt(dir, Config, "CodeAdr", CodeAdr);
				IF CodeAdr = "" THEN CodeAdr := "32832" END;
				Cmd.MapStringTxt(dir, Config, "DataAdr", DataAdr);
				IF DataAdr = "" THEN DataAdr := "50000" END;
				Cmd.MapStringTxt(dir, Config, "Target", Target);
				IF Target = "" THEN Target := "TAP" END;
				Cmd.MapStringTxt(dir, Config, "MainMod", MainMod);
				Cmd.MapStringTxt(dir, Config, "Modules", Modules);
				Cmd.MapStringTxt(dir, Config, "Include", Include);
				IF Include = "" THEN Include := "-I ..\Lib\C -I ..\Lib\Obj" END;
				Cmd.MapStringTxt(dir, Config, "Libraries", Libraries);
				Cmd.MapStringTxt(dir, Config, "Options", Options);
				Cmd.MapStringTxt(dir, Config, "OfrontPar", OfrontPar);
				IF OfrontPar = "" THEN OfrontPar := "-sx3 -21" END;
				Cmd.MapStringTxt(dir, Config, "Start", str);
				IF str = "" THEN str := "TRUE" END;
				Start := str = "TRUE";
				Cmd.MapStringTxt(dir, Config, "Clean", str);
				IF str = "" THEN str := "TRUE" END;
				Clean := str = "TRUE";
				Cmd.MapStringTxt(dir, Config, "Pause", str);
				IF str = "" THEN str := "FALSE" END;
				Pause := str = "TRUE";
				StdCmds.OpenToolDialog("XDev/Rsrc/ZXDev", "ZXDev Project Setup");
			ELSE
				Dialog.ShowMsg("You can't generate Config inside a XDev's subsystem");
			END;
		ELSE (* Module's file name not found. *)
			Dialog.ShowMsg("First, specify a file name of the module, please.");
		END;
	ELSE
		Dialog.ShowMsg("#XDev:NoTextViewFound");
	END;
	Cmd.Close
END LoadProjectSettings;

PROCEDURE SaveProjectSettings*;
VAR
	t: TextModels.Model; w: Windows.Window; dir: Files.Name; loc: Files.Locator;
	file: Files.File; wr: Files.Writer; pos, res: INTEGER;

	PROCEDURE Emit(IN str: ARRAY OF CHAR);
	VAR
		n: INTEGER;
	BEGIN
		FOR n := 0 TO LEN(str$)-1 DO wr.WriteByte(SHORT(SHORT(ORD(str[n])))) END;
		wr.WriteByte(0DH); wr.WriteByte(0AH);
	END Emit;

BEGIN
	Cmd.Open;
	(* Try to find exact file name of current opened document: *)
	t := TextViews.FocusText();
	IF t # NIL THEN
		w := Windows.dir.Focus(Controllers.targetPath);
		IF (w # NIL) & (w.loc # NIL) & (w.name # "") THEN (* File name found. *)
			Cmd.GetSubsysDirByLocator(w.loc, dir);
			Strings.Find(dir, "/XDev/", 0, pos);
			IF pos = -1 THEN

				IF Cmd.Exists(w.loc, Config) THEN
					loc := Files.dir.This(dir);
				ELSE
					loc := Files.dir.This(dir + "Bin");
				END;

				(* Generate "Subsys/?/Config.pzx: *)

				file := Files.dir.New(loc, Files.dontAsk);
				IF file = NIL THEN
					Dialog.ShowMsg("Couldn't save " + Config); Cmd.Close; RETURN
				END;
				wr := file.NewWriter(NIL);
				Emit("MainMod=" + MainMod$);
				Emit("CodeAdr=" + CodeAdr$);
				Emit("DataAdr=" + DataAdr$);
				Emit("Options=" + Options$);
				Emit("Modules=" + Modules$);
				Emit("Include=" + Include$);
				Emit("Libraries=" + Libraries$);
				Emit("Target=" + Target$);
				Emit("OfrontPar=" + OfrontPar$);
				IF Clean THEN Emit("Clean=TRUE") ELSE Emit("Clean=FALSE") END;
				IF Start THEN Emit("Start=TRUE") ELSE Emit("Start=FALSE") END;
				IF Pause THEN Emit("Pause=TRUE") ELSE Emit("Pause=FALSE") END;
				file.Register(Config, ConfigExt, Files.dontAsk, res);
				file.Close;

				(* Generate .bat scripts for building: *)

				loc := Files.dir.This(dir + "Bin");

				(* Compile.bat *)
				file := Files.dir.New(loc, Files.dontAsk);
				IF file = NIL THEN
					Dialog.ShowMsg("Couldn't save Compile.bat"); Cmd.Close; RETURN
				END;
				wr := file.NewWriter(NIL);
				Emit("@ECHO OFF");
				Emit('IF NOT "%XDev%"=="" GOTO XDev');
				Emit("ECHO Please set system variable XDev=X:\Path\To\XDev");
				Emit("PAUSE");
				Emit("EXIT");
				Emit("");
				Emit(":XDev");
				Emit("");
				IF MainMod # "" THEN Emit("SET MainMod=" + MainMod) END;
				IF Options # "" THEN Emit("SET Options=" + Options) END;
				IF Include # "" THEN Emit("SET Include=" + Include) END;
				IF ~ Clean THEN Emit("SET Clean=FALSE") END;
				IF ~ Start THEN Emit("SET Start=FALSE") END;
				IF Pause THEN Emit("SET Pause=TRUE") END;
				Emit("");
				Emit("%XDev%\ZXDev\Bin\Compile.bat %1");
				file.Register("Compile.bat" ,"bat", Files.dontAsk, res);
				file.Close;

				(* Build.bat *)
				file := Files.dir.New(loc, Files.dontAsk);
				IF file = NIL THEN
					Dialog.ShowMsg("Couldn't save Build.bat"); Cmd.Close; RETURN
				END;
				wr := file.NewWriter(NIL);
				Emit("@ECHO OFF");
				Emit('IF NOT "%XDev%"=="" GOTO XDev');
				Emit("ECHO Please set system variable XDev=X:\Path\To\XDev");
				Emit("PAUSE");
				Emit("EXIT");
				Emit("");
				Emit(":XDev");
				Emit("");
				IF MainMod # "" THEN Emit("SET MainMod=" + MainMod) END;
				IF CodeAdr # "" THEN Emit("SET CodeAdr=" + CodeAdr) END;
				IF DataAdr # "" THEN Emit("SET DataAdr=" + DataAdr) END;
				IF Modules # "" THEN Emit("SET Modules=" + Modules) END;
				IF Options # "" THEN Emit("SET Options=" + Options) END;
				IF Include # "" THEN Emit("SET Include=" + Include) END;
				IF Libraries # "" THEN Emit("SET Libraries=" + Libraries) END;
				IF Target # "" THEN Emit("SET Target=" + Target) END;
				IF ~ Clean THEN Emit("SET Clean=FALSE") END;
				IF ~ Start THEN Emit("SET Start=FALSE") END;
				IF Pause THEN Emit("SET Pause=TRUE") END;
				Emit("");
				Emit("%XDev%\ZXDev\Bin\Build.bat %1");
				file.Register("Build.bat" ,"bat", Files.dontAsk, res);
				file.Close;

				(* Generate "Subsys/Obj/Ofront+.par: *)

				loc := Files.dir.This(dir + "Obj");
				file := Files.dir.New(loc, Files.dontAsk);
				IF file = NIL THEN
					Dialog.ShowMsg("Couldn't save Ofront+.par"); Cmd.Close; RETURN
				END;
				wr := file.NewWriter(NIL);
				Emit(OfrontPar$);
				file.Register("Ofront+", "par", Files.dontAsk, res);
				file.Close;
				Dialog.ShowMsg(Config + " saved");
			ELSE
				Dialog.ShowMsg("You can't generate Config inside a XDev's subsystem");
			END;
		ELSE (* Module's file name not found. *)
			Dialog.ShowMsg("First, specify a file name of the module, please.");
		END;
	ELSE
		Dialog.ShowMsg("#XDev:NoTextViewFound");
	END;
	Cmd.Close
END SaveProjectSettings;

BEGIN
	XDevMisc.SetEnv("MainMod", "");
	XDevMisc.SetEnv("CodeAdr", "");
	XDevMisc.SetEnv("DataAdr", "");
	XDevMisc.SetEnv("Modules", "");
	XDevMisc.SetEnv("Options", "");
	XDevMisc.SetEnv("Include", "");
	XDevMisc.SetEnv("Libraries", "");
	XDevMisc.SetEnv("Target", "");
	XDevMisc.SetEnv("Clean", "");
	XDevMisc.SetEnv("Start", "");
	XDevMisc.SetEnv("Pause", "")
END XDevZXDev.
